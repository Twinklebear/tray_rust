var N=null,E="",T="t",U="u",searchIndex={};
var R=["tv_sec","events","d_reclen","d_type","d_name","rlim_cur","rlim_max","it_interval","it_value","version","envelope","p_offset","p_filesz","gl_pathc","gl_pathv","gl_flags","f_blocks","f_bavail","f_frsize","st_nlink","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","f_bsize","f_bfree","f_files","f_ffree","f_namelen","f_favail","f_namemax","mxcr_mask","c_ispeed","c_ospeed","cpu_set_t","sigaction","statfs64","statvfs64","if_nameindex","to_owned","clone_into","try_from","try_into","borrow_mut","result","type_id","borrow","typeid","timespec","in6_addr","ipv6_mreq","itimerval","protoent","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_un","sockaddr_storage","addrinfo","sockaddr_nl","sockaddr_ll","sched_param","epoll_event","sigevent","dirent64","rlimit64","pthread_mutex_t","pthread_rwlock_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_cond_t","pthread_condattr_t","statvfs","signalfd_siginfo","itimerspec","input_event","input_id","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","__exit_status","__timeval","siginfo_t","glob64_t","sigset_t","sysinfo","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_fpregs_struct","user_regs_struct","mcontext_t","ucontext_t","Elf32_Phdr","Elf64_Phdr","msqid_ds","ipc_perm","shmid_ds","termios2","partialord","num_traits","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","num_traits::ops","Shifts a number to the left, checking for overflow. If…","min_value","max_value","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","Returns `true` if `self` is positive, including `+0.0`,…","is_sign_negative","Returns `true` if `self` is negative, including `-0.0`,…","Fused multiply-add. Computes `(self * a) + b` with only…","Take the reciprocal (inverse) of a number, `1/x`.","Raise a number to an integer power.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","to_degrees","Converts radians to degrees.","to_radians","Converts degrees to radians.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","checkedmul","formatter","ParseFloatError","FloatErrorKind","Saturating","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedShl","CheckedShr","WrappingAdd","WrappingSub","WrappingMul","FloatConst","ToPrimitive","FromPrimitive","AsPrimitive","frombase64error","rustc_serialize","The input had an invalid length","fromhexerror","encodable","Creates a new encoder whose output will be written in…","buildererror","stackelement","asprettyjson","Read an enumeration value.","The error type for method results.","rustc_serialize::base64","to_string","rustc_serialize::hex","rustc_serialize::json","encoderesult","emit_usize","emit_isize","emit_bool","emit_char","emit_enum","emit_enum_variant","emit_enum_variant_arg","emit_enum_struct_variant","emit_enum_struct_variant_field","emit_struct","emit_struct_field","emit_tuple","emit_tuple_arg","emit_tuple_struct","emit_tuple_struct_arg","emit_option","emit_option_none","emit_option_some","emit_seq_elt","emit_map_elt_key","emit_map_elt_val","decoderesult","read_usize","read_isize","read_bool","read_char","read_enum","read_enum_variant","read_enum_variant_arg","read_enum_struct_variant","read_enum_struct_variant_field","read_struct","read_struct_field","read_tuple","read_tuple_arg","read_tuple_struct","read_tuple_struct_arg","read_option","read_seq_elt","read_map_elt_key","read_map_elt_val","decodererror","parsererror","jsonevent","errorcode","encodererror","Encodes a json value into a string","description","CharacterSet","FromBase64Error","FromBase64","FromHexError","ErrorCode","ParserError","DecoderError","EncoderError","JsonEvent","StackElement","AsPrettyJson","Decodable","Encodable","DecoderHelpers","EncoderHelpers","PrettyJson","DEPRECATED.","read_uint","write_u16","write_u24","write_u32","write_u64","write_uint","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i64","write_int","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_i16_into","read_i32_into","read_i64_into","read_f32_into_unchecked","read_f64_into_unchecked","Reads IEEE754 single-precision (4 bytes) floating point…","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_f32","from_slice_f64","bigendian","littleendian","ordering","partial_cmp","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying…","read_int","Reads a signed n-bytes integer from the underlying reader.","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","read_f32_into","Reads a sequence of IEEE754 single-precision (4 bytes)…","read_f64_into","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","into_iter","scopeguard","Create a new `ScopeGuard` owning `v` and with deferred…","should_run","deref_mut","ScopeGuard","UnicodeXID","rollingadler32","RollingAdler32","For use by `ToTokens` implementations.","to_tokens","ResultVoidExt","ResultVoidErrExt","lazy_static","Creates a new LZW decoder. ","decode_bytes","Tries to obtain and decode a code word from `bytes`.","Creates a new bit reader","read_bits","write_bits","DecoderEarlyChange","LsbReader","MsbReader","LsbWriter","MsbWriter","BitReader","BitWriter","Decoder","Encoder","utf8sequence","utf8range","Utf8Range","Utf8Sequence","Utf8Sequences","bitflags","bitflags::example_generated","intoiterator","Returns the RGBA color map calculated from the sample. ","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","skip_field","Check for remaining elements after passing a…","serde::de","unexpected","expected","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","is_human_readable","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","size_hint","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","Serialize","A data structure that can be serialized into any data…","serialize","Serialize this value into the given Serde serializer.","Serializer","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","serde::ser","serde::de::value","serialize_key","serialize_value","ignoredany","expecting","visit_bool","visit_i64","visit_u64","visit_f64","visit_str","visit_none","visit_some","visit_newtype_struct","visit_unit","visit_seq","visit_map","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","borrowedstrdeserializer","borrowedbytesdeserializer","Unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","SeqAccess","MapAccess","EnumAccess","VariantAccess","IntoDeserializer","Impossible","IgnoredAny","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","regex_syntax","regex_syntax::Expr","Whether to match case insensitively.","A character class.","regex_syntax::ErrorKind","literals","exprbuilder","Returns true if and only if the expression is required to…","Returns true if and only if the expression has at least…","classrange","charclass","Create a new class from an existing set of ranges.","byterange","byteclass","case_fold","errorkind","repeater","ClassRange","ByteRange","ErrorKind","ExprBuilder","CharClass","ByteClass","StrSimError","deallocate","A `Buf` backed by a contiguous region of memory.","MutByteBuf","ROByteBuf","Same as `ByteBuf` but cannot be flipped to a `MutByteBuf`.","Buf backed by a continous chunk of memory. Maintains a…","MutSliceBuf","mutbytebuf","from_mem_ref","to_seq_byte_str","seqbytestr","Marks the current read location.","Resets the read position to the previously marked position.","capacity","bytes::buf","read_slice","remaining","has_remaining","write_slice","An extension trait providing extra functions applicable to…","A specialized `ByteStr` box.","An immutable sequence of bytes formed by concatenation of…","SeqByteStr","SmallByteStr","SmallByteStrBuf","from_slice","smallbytestr","bytes::str","is_empty","Returns a new ByteStr value containing the byte range…","to_bytes","bytes::alloc","allocate","advance","mut_bytes","robytebuf","smallbytestrbuf","Allocator","SliceBuf","MutBufExt","from_usize","SlabMutIter","allocator","MemoryArena","Interpolate","Flattened 3 component floating point vectors, storing…","loadresult","mtlloadresult","LoadError","enumset","A wrapper for generating floating point numbers uniformly…","rand::distributions","new_unseeded","samplerange","xorshiftrng","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::isaac","rand::chacha","rand::reseeding","rand::read","ind_sample","isaac64rng","chacharng","next_u32","next_u64","fill_bytes","rand::os","from_seed","isaacrng","Create an ISAAC random number generator with a seed. This…","reseedingrng","chisquared","standardnormal","lognormal","threadrng","reseedwithdefault","SampleRange","ChiSquared","StandardNormal","LogNormal","IndependentSample","RandSample","WeightedChoice","Isaac64Rng","ChaChaRng","ReseedingRng","SeedableRng","XorShiftRng","Generator","AsciiGenerator","ThreadRng","ReseedWithDefault","default","Creates a new iterator that yields all positions of needle…","next_back","ParseError","parseerror","Returns the current value of a high-resolution performance…","duration","checked_add","checked_sub","outofrangeerror","stdduration","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","PreciseTime","SteadyTime","OutOfRangeError","jitterrng","timererror","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","A random number generator that uses ISAAC-64[1], the…","rand::jitter","TimerError","JitterRng","IsaacRng","integer","div_floor","mod_floor","div_mod_floor","IterBinomial","Helper macro for internal use by `enum_from_primitive!`.","noneerror","Takes each element in the `Iterator`: if it is a `None`,…","Applies a function to the contained value (if any), or…","Transforms the `Option<T>` into a [`Result<T, E>`],…","Returns [`None`] if the option is [`None`], otherwise…","Unwraps an option, expecting [`None`] and returning nothing.","from_iter","A generic trait for converting a number to a value.","from_isize","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","from_u32","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","intoiter","contains","complex","parsecomplexerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","ParseComplexError","is_infinite","is_finite","is_normal","from_str_radix","from_str","Returns the number of elements in the deque.","Steals an element from the top of the deque.","Stores `new` tagged with `tag` into the atomic.","Stores `new` tagged with `tag` into the atomic, returning…","If the tagged atomic pointer is equal to `current`, stores…","defer_free","A lock-free stack.","coco::deque","coco::epoch","coco::stack","tcpbuilder","tcplistener","tcpstream","socketaddr","udpbuilder","Binds this socket to the specified address.","udpsocket","Sets the value for the `IP_TTL` option on this socket.","Sets the value for the `IPV6_V6ONLY` option on this socket.","reuse_address","Set value for the `SO_REUSEADDR` option on this socket.","get_reuse_address","Check the `SO_REUSEADDR` option on this socket.","take_error","Get the value of the `SO_ERROR` option on this socket.","reuse_port","Set value for the `SO_REUSEPORT` option on this socket.","get_reuse_port","Check the value of the `SO_REUSEPORT` option on this socket.","Sets whether keepalive messages are enabled to be sent on…","Returns whether keepalive messages are enabled on this…","Sets the `SO_RCVTIMEO` option for this socket.","Gets the value of the `SO_RCVTIMEO` option for this socket.","Sets the `SO_SNDTIMEO` option for this socket.","Gets the value of the `SO_SNDTIMEO` option for this socket.","Gets the value of the `IP_TTL` option for this socket.","set_only_v6","Gets the value of the `IPV6_V6ONLY` option for this socket.","set_nonblocking","set_linger","Sets the linger duration of this socket by setting the…","reads the linger duration for this socket by getting the…","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","set_read_timeout_ms","set_read_timeout","read_timeout_ms","read_timeout","set_write_timeout_ms","set_write_timeout","write_timeout_ms","write_timeout","tosocketaddrs","as_raw_fd","from_raw_fd","TcpBuilder","UdpBuilder","UnixTcpBuilderExt","UnixUdpBuilderExt","TcpStreamExt","TcpListenerExt","UdpSocketExt","levelfilter","setloggererror","metadata","recordbuilder","arguments","module_path","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","A DEFLATE decoder/decompressor.","Decompress the given slice of DEFLATE compressed (with…","inflatewriter","from_zlib","deflatedecoderbuf","Create a new `DeflateDecoderbuf` that reads from a zlib…","into_inner","Create a new `Deflatedecoderbuf` to read from a raw…","deflatedecoder","from_zlib_no_checksum","Resets the decompressor, and replaces the current inner…","Returns the total number of bytes output from this decoder.","reset_data","Resets the decoder, but continue to read from the same…","total_out","current_checksum","Returns the calculated checksum value of the currently…","inflatestream","Create a new stream for decoding deflate encoded data with…","InflateWriter","DeflateDecoderBuf","DeflateDecoder","InflateStream","compressionoptions","Compress the given slice of bytes with DEFLATE…","Returns a set of compression settings that makes the…","deflate::write","When the encoder is dropped, output the rest of the data.","compression","specialoptions","matchingtype","Flush the encoder.","Encode all pending data to the contained writer, consume…","Resets the encoder (except the compression options),…","CompressionOptions","SpecialOptions","Compression","MatchingType","DeflateEncoder","ZlibEncoder","unreachable","UncheckedOptionExt","UncheckedResultExt","GIF decoder","Extension","disposalmethod","Converts `u8` to `Option<Self>`","extension","decodingerror","Width of the image","Height of the image","extensiondata","set_param","streamingdecoder","Sets `value` as a parameter of `self`.","parameter","MemoryLimit","DisposalMethod","DecodingError","ColorOutput","Extensions","ExtensionData","StreamingDecoder","SetParameter","Parameter","line_length","ENAMETOOLONG","ENOTEMPTY","EMULTIHOP","EOVERFLOW","EDESTADDRREQ","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EREMOTEIO","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","UnknownErrno","EWOULDBLOCK","errnosentinel","F_DUPFD_CLOEXEC","F_ADD_SEALS","F_GET_SEALS","splicefflags","Returns an empty set of flags.","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","intersects","from_bits","sealflag","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","O_LARGEFILE","O_DIRECTORY","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","MS_SYNCHRONOUS","MS_MANDLOCK","MS_NODIRATIME","MS_POSIXACL","MS_UNBINDABLE","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_RMT_MASK","mntflags","mq_oflag","O_NONBLOCK","FD_CLOEXEC","eventflags","if_nametoindex","sched_setaffinity","cloneflags","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","epoll_create","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLWAKEUP","EPOLLONESHOT","epolleventkind","MFD_CLOEXEC","MFD_ALLOW_SEALING","memfdcreateflag","pthread_sigmask","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_RESETHAND","SIG_UNBLOCK","SIG_SETMASK","sin6_family","sin6_flowinfo","sin6_scope_id","sa_family_t","imr_multiaddr","imr_interface","ipv6mr_multiaddr","ipv6mr_interface","addressfamily","Accept a connection on a socket","getsockopt","setsockopt","getpeername","getsockname","ipv4addr","msgflags","ipv6addr","IpMulticastTtl","nix::sys::socket","SOCK_STREAM","SOCK_SEQPACKET","SOL_NETLINK","IPPROTO_IPV6","IPPROTO_TCP","IPPROTO_UDP","SO_ACCEPTCONN","SO_BINDTODEVICE","SO_BROADCAST","SO_BSDCOMPAT","SO_DONTROUTE","SO_KEEPALIVE","SO_OOBINLINE","SO_PASSCRED","SO_PEEK_OFF","SO_PEERCRED","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_SNDLOWAT","SO_RCVTIMEO","SO_SNDTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SNDBUFFORCE","SO_TIMESTAMP","SO_BUSY_POLL","TCP_NODELAY","TCP_KEEPIDLE","IP_MULTICAST_IF","IP_MULTICAST_TTL","IP_MULTICAST_LOOP","IP_ADD_MEMBERSHIP","IP_DROP_MEMBERSHIP","IPV6_ADD_MEMBERSHIP","IPV6_DROP_MEMBERSHIP","INADDR_NONE","INADDR_BROADCAST","MSG_DONTWAIT","MSG_ERRQUEUE","SOCK_NONBLOCK","SOCK_CLOEXEC","Represents a socket option that can be accessed or set.…","sockflag","nix::sys","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcsendbreak","inputflags","outputflags","tcflag_t","controlflags","localflags","waitpidflag","waitstatus","__WNOTHREAD","mapflags","MAP_PRIVATE","MAP_ANONYMOUS","MAP_GROWSDOWN","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_NORESERVE","MAP_POPULATE","MAP_NONBLOCK","MAP_HUGETLB","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_HWPOISON","MS_INVALIDATE","PROT_GROWSDOWN","PROT_GROWSUP","protflags","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_ATTACH","PTRACE_DETACH","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","quotatype","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_BLIMITS","QIF_ILIMITS","quotavalidflags","ADFS_SUPER_MAGIC","nix::sys::statfs::vfs","AFFS_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SMB_SUPER_MAGIC","TMPFS_MAGIC","USBDEVICE_SUPER_MAGIC","Fill an existing `Statvfs` object with information about…","Mount Flags","Do not update access times on files","Create a new `Statvfs` object and fill it with information…","Replace information in this struct with information about…","sethostname","gethostname","nix::mqueue","nix::sys::epoll","nix::sys::memfd","nix::sys::signal","nix::sys::socket::sockopt","nix::sys::stat","nix::sys::termios","nix::sys::utsname","nix::sys::wait","nix::sys::mman","nix::sys::uio","nix::sys::time","nix::sys::select","nix::sys::quota::quota","nix::sys::statvfs::vfs","nix::unistd","controlmessage","nix::fcntl","nix::mount","nix::sched","netlinkaddr","nix::poll","sighandler","socktype","Returns the set difference of the two sets of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","ErrnoSentinel","SpliceFFlags","EpollEventKind","MemFdCreateFlag","NetlinkAddr","AddressFamily","ControlMessage","OutputFlags","ControlFlags","WaitPidFlag","QuotaValidFlags","CmsgIterator","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastLoop","ReceiveTimeout","SendTimeout","SocketError","PeerCredentials","TcpKeepIdle","RcvBufForce","SndBufForce","milliseconds","microseconds","num_minutes","num_seconds","num_milliseconds","num_microseconds","Returned if the deserializer attempts to deserialize a…","serialize_into","Serializes an object directly into a `Writer`.","Serializes a serializable object into a `Vec` of bytes.","deserialize_from","Deserializes a slice of bytes into an object.","bincode::internal","bincode::read_types","forward_read_str","get_byte_buffer","forward_read_bytes","SliceReader","Represents a JSON number, whether integer or floating point.","from_reader","Serialize the given data structure as a pretty-printed…","A structure that deserializes JSON into Rust values.","StreamDeserializer","Iterator that deserializes a stream into multiple JSON…","Deserialize an instance of type `T` from an IO stream of…","Deserialize an instance of type `T` from bytes of JSON text.","Deserialize an instance of type `T` from a string of JSON…","This type represents all possible errors that can occur…","serde_json","Represents a JSON key/value type.","A structure for serializing Rust values into JSON.","Serialize the given data structure as JSON into the IO…","to_writer_pretty","Serialize the given data structure as pretty-printed JSON…","Serialize the given data structure as a JSON byte vector.","to_vec_pretty","Serialize the given data structure as a String of JSON.","to_string_pretty","Writes an integer value like `-123` to the specified writer.","Writes an integer value like `123` to the specified writer.","Writes a floating point value like `-31.26e+12` to the…","Represents any valid JSON value.","Represents a JSON null value.","Represents a JSON boolean.","Represents a JSON string.","Represents a JSON array.","Represents a JSON object.","Convert a `T` into `serde_json::Value` which is an enum…","from_value","Interpret a `serde_json::Value` as an instance of type `T`.","as_object_mut","as_array_mut","serde_json::de","Alias for a `Result` with the error type…","serde_json::error","serde_json::ser","serde_json::map","serde_json::value","begin_array","begin_array_value","end_array_value","begin_object","begin_object_key","begin_object_value","end_object_value","byte_offset","reference","peek_position","position","parse_str_raw","ignore_str","invalid_type","VacantEntry","OccupiedEntry","PrettyFormatter","CompactFormatter","acautomaton","Create a new automaton from an iterator of patterns.","fullacautomaton","stateidx","start_bytes","next_state","heap_bytes","Return the number of patterns in the automaton.","Returns true if the automaton has no patterns.","Returns an iterator of non-overlapping matches in `s`.","find_overlapping","Returns an iterator of overlapping matches in `s`.","matchesoverlapping","stream_find","Returns an iterator of non-overlapping matches in the…","streammatches","stream_find_overlapping","Returns an iterator of overlapping matches in the given…","streammatchesoverlapping","FullAcAutomaton","Transitions","AcAutomaton","MatchesOverlapping","StreamMatches","StreamMatchesOverlapping","rangeinclusive","rangestepinclusive","RangeInclusive","RangeStepInclusive","Creates and initializes a `BigUint`.","Creates and initializes a `BigUint`. Each u8 of the input…","Returns the byte representation of the `BigUint` in…","Creates and initializes a `BigInt`.","assign_from_slice","from_bytes_be","from_bytes_le","Creates and initializes a `BigInt` from an array of bytes…","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigInt`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","doublebigdigit","A `BigDigit` is a `BigUint`'s composing element.","DoubleBigDigit","A `DoubleBigDigit` is the internal type used to do the…","ZERO_BIG_DIGIT","to_biguint","parsebiginterror","bigdigit","bitand_assign","bitor_assign","bitxor_assign","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","checked_mul","checked_div","ParseBigIntError","is_positive","is_negative","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","threadpool","ThreadPool","Configuration","shutdownloggererror","Shuts down the global logger.","loglevelfilter","logmetadata","loglocation","loglevel","LogLevelFilter","LogMetadata","LogLocation","MaxLogLevelFilter","ShutdownLoggerError","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_default","Returns the element for the current thread, or creates a…","threadlocal","cachedthreadlocal","ThreadLocal","CachedThreadLocal","Returned by `Generics::split_for_impl`.","bound_lifetimes","deriveinput","whereclause","typarambound","polytraitref","traitboundmodifier","variantdata","lifetimedef","pathsegment","pathparameters","typebinding","functionretty","attribute","generics","lifetime","bytestrlit","tokentree","anglebracketedparameterdata","nestedmetaitem","constexpr","visibility","wherepredicate","whereboundpredicate","whereregionpredicate","whereeqpredicate","mutability","parenthesizedparameterdata","syn::parse","LifetimeDef","WhereBoundPredicate","WhereClause","WhereEqPredicate","WhereRegionPredicate","DeriveInput","AngleBracketedParameterData","ParenthesizedParameterData","PathSegment","PolyTraitRef","TypeBinding","NestedMetaItem","VariantData","TraitBoundModifier","TyParamBound","WherePredicate","FunctionRetTy","PathParameters","ImplGenerics","The result of a parser.","Parsing succeeded. The first field contains the rest of…","Parsing failed.","Unwraps the result, asserting the the parse is complete.…","delimited","PixelDimensions","AnimationControl","FrameControl","chunktype","buffer_size","Returns the next processed row of the image","Returns the number of bytes required to hold a…","encodingerror","u8 -> Self. Temporary solution until Rust provides a…","animation_control","animationcontrol","frame_control","framecontrol","Returns the number of bytes needed for one deinterlaced…","transformations","colortype","EncodingError","Transformations","HasParameters","bigrational","parseratioerror","from_i64","from_u64","from_f64","from_f32","ParseRatioError","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","SubCaptureMatches","An iterator that yields all capturing matches in the order…","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","case_insensitive","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","dot_matches_new_line","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","ignore_whitespace","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","multi_line","swap_greed","size_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","replace_all","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Shows the original regular expression.","Attempts to parse a string into a regular expression","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","IntoIter","The `split` function takes arbitrary data and a closure…","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Reduces the items in the iterator into one item using…","Searches for some item in the parallel iterator that…","Internal method used to define the behavior of this…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","Returns a parallel iterator over at most `size` elements…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::result","rayon::slice","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","SplitTerminator","SplitWhitespace","Represents a fork-join scope which can be used to spawn…","Contains the rayon thread pool configuration.","The `join` function takes two closures and potentially…","Create a \"fork-join\" scope `s` and invokes the closure…","Fires off a task into the Rayon threadpool in the \"static\"…","Returns the number of threads in the current registry. If…","initialize","Initializes the global thread pool. This initialization is…","Spawns a job into the fork-join scope `self`. This job…","Constructs a new thread pool with the given configuration.…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates a scope that executes within this thread-pool.…","Spawns an asynchronous task in this thread-pool. This task…","Creates and return a valid rayon thread pool…","Create a new `ThreadPool` initialized using this…","thread_name","Set a closure which takes a thread index and returns the…","num_threads","Set the number of threads to be used in the rayon…","panic_handler","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","breadth_first","Suggest to worker threads that they execute spawned jobs…","start_handler","Set a callback to be invoked on thread start.","exit_handler","Set a callback to be invoked on thread exit.","serde_derive_internals","serde_derive_internals::attr","serde_derive_internals::attr::EnumTag","Return the container name for the container when…","renamerule","rename_by_rule","skip_serializing","skip_deserializing","serialize_with","deserialize_with","serde_derive_internals::ast","identifier","Container","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","A big unsigned integer type.","num::bigint","A big signed integer type.","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Floored integer division.","Floored integer modulo, satisfying:","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Returns `true` if `other` is a multiple of `self`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","num::traits","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","num::traits::ops","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Returns the `NaN` value.","Returns the infinite value.","neg_infinity","Returns the negative infinite value.","Returns `-0.0`.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","Raise a number to a floating point power.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","Alias for a `Ratio` of machine-sized integers.","BigRational","Alias for arbitrary precision rationals.","num::complex","num::integer","num::rational","A Sign is a `BigInt`'s composing element.","Assign a value to a `BigUint`.","Creates and initializes a `BigUint`. The input slice must…","Returns `(self ^ exponent) % modulus`.","from_biguint","Reinitializes a `BigInt`.","from_signed_bytes_be","from_signed_bytes_le","to_signed_bytes_be","to_signed_bytes_le","Returns the sign of the `BigInt` as a `Sign`.","Converts this `BigInt` into a `BigUint`, if it's not…","from_doublebigdigit","Split one `DoubleBigDigit` into two `BigDigit`s.","to_doublebigdigit","Join two `BigDigit`s into one `DoubleBigDigit`","A generic trait for converting a value to a `BigUint`.","Converts the value of `self` to a `BigUint`.","A generic trait for converting a value to a `BigInt`.","to_bigint","Converts the value of `self` to a `BigInt`.","RandBigInt","gen_biguint","Generate a random `BigUint` of the given bit size.","Generate a random BigInt of the given bit size.","gen_biguint_below","Generate a random `BigUint` less than the given bound.…","gen_biguint_range","Generate a random `BigUint` within the given range. The…","gen_bigint_range","Generate a random `BigInt` within the given range. The…","parseinterror","Negate Sign value.","ToBigUint","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","An iterator over binomial coefficients.","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients…","iterbinomial","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","range_step","rangestep","RangeStep","Represents the ratio between 2 numbers.","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","Converts a float into a rational number.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","Performs a left shift that returns `None` on overflow.","checked_shl","Performs a right shift that returns `None` on overflow.","checked_shr","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","fpcategory","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","from_i32","count_ones","signed_shl","signed_shr","swap_bytes","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","pixelformat","imageinfo","PixelFormat","UnsupportedFeature","eventset","eventloopconfig","eventloop","notifyerror","reregister","Register event interests for the given IO handle with the OS","deregister","Single threaded IO event loop.","try_read_buf","mio::prelude","try_write_buf","addrparseerror","selector","register","mio::unix","mio::tcp","UNSPECIFIED","is_unspecified","is_loopback","Returns [`true`] if the address appears to be globally…","Returns [`true`] if the address is a unicast link-local…","is_documentation","ipv6multicastscope","is_multicast","Invoked when the socket represented by `token` is ready to…","Invoked when a message has been received via the event…","Invoked when a timeout has completed.","interrupted","Invoked when `EventLoop` has been interrupted by a signal…","Invoked at the end of an event loop tick.","take_socket_error","mio::udp","local_addr","unixsocket","unixlistener","try_clone","unixstream","NotifyError","BoundedQueue","EventLoopConfig","TcpListener","UnixListener","set_nodelay","set_keepalive","set_broadcast","shutdown","with_capacity","matrixrange","matrixrangeiterator","choleskydecomposition","is_singular","is_non_singular","Macro for building matrices.","CholeskyDecomposition","EigenDecomposition","LUDecomposition","QRDecomposition","Decoding or parsing failed because the command line…","Finds the value corresponding to `key` and calls…","primitive","dynamicimage","imageresult","Create a new image from a byte slice","imageformat","image::math","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","imagebuffer","Create a new decoder that decodes from the stream `r`","Encodes the image `image` that has dimensions `width` and…","Create a new encoder that writes its output to `w`","jpegencoder","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","transparent","Transparent index (if available).","needs_user_input","True if the frame needs user input do be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless…","GIF encoder.","tiffdecoder","Create a new encoder that writes its output to `w`.","hdradapter","hdrdecoder","rgbe8pixel","rgbaimage","grayimage","grayalphaimage","Resize this image using the specified filter algorithm.…","filtertype","Hue rotate the supplied image. `value` is the degrees to…","Enumerates over the pixels of the image. The iterator…","Contructs a new frame","Returns the image buffer","decodingresult","dimensions","The width and height of this image.","The width of this image.","The height of this image.","get_pixel_mut","Returns the pixel located at (x, y)","Puts a pixel at location (x, y)","to_luma_alpha","Apply the function `f` to each channel of this pixel.","Apply the function `f` to each channel except the alpha…","Apply the function `f` to each channel of this pixel and…","image::math::nq","image::imageops::colorops","image::webp","image::webp::vp8","image::jpeg","image::tiff","image::gif","read_scanline","image::pnm","read_image","image::ppm","image::png","image::ico","image::tga","image::bmp","image::hdr","blend_pixel","get_pixel","put_pixel","unsafe_get_pixel","unsafe_put_pixel","Put a pixel at location (x, y), taking into account alpha…","channel_count","color_model","channels_mut","from_channels","from_slice_mut","map_with_alpha","apply_with_alpha","color_type","channels4","imageerror","hdrmetadata","pnmsubtype","index_mut","Creates a frame from pixels in RGBA format.","Creates a frame from pixels in RGB format.","is_animated","Returns true if the image is animated","into_frames","Returns the frames of the image","Decodes a specific region of the image, represented by the…","Returns true if this x, y coordinate is contained inside…","Returns an Iterator over the pixels of this image. The…","pixels_mut","Returns an Iterator over mutable pixels of this image. The…","Copies all of the pixels from another image into this image.","Returns a subimage that is a view into this image.","DecodingResult","FilterType","ImageFormat","DynamicImage","WebpDecoder","JPEGEncoder","JPEGDecoder","TIFFDecoder","HDRMetadata","ImageBuffer","ImageDecoder","GenericImage","ConvertBuffer","HDRImageDecoderIterator","JPEG decoder","interlaced","ColorType","Compute the direction specified by `theta` and `phi` in…","tray_rust::linalg","broadcast","transform","quaternion","Get the rotation transform described by this quaternion","normalized","animatedtransform","Create an RGB color","tray_rust::film","tray_rust::film::filter","with_keyframes","colorkeyframe","differentialgeometry","intersection","tray_rust::geometry","boundablegeom","Create an instance of the geometry in the scene that will…","material","sampleablegeom","animatedcolor","Create a new triangle representing a triangle within the…","animatedmeshdata","Test the ray for intersection against this insance of…","get_transform","set_transform","Tag to identify the instance","Create a point light at the origin that is transformed by…","intersect","surface_area","tray_rust","tray_rust::sampler","Create a low discrepancy sampler to sample the image in…","tray_rust::integrator","update_frame","The hit point","bxdftype","tray_rust::bxdf","specular_reflection","specular_transmission","tray_rust::bxdf::microfacet","dielectric","microfacetdistribution","tray_rust::material","occlusiontester","Uniformly sample a direction in a cone with max angle…","current_frame","multithreaded","tray_rust::exec","render_target","tray_rust::exec::distrib","rendertarget","tray_rust::texture","tray_rust::linalg::vector","interpolate","tray_rust::linalg::normal","tray_rust::linalg::point","tray_rust::linalg::ray","tray_rust::linalg::matrix4","tray_rust::linalg::transform","tray_rust::linalg::quaternion","tray_rust::linalg::keyframe","tray_rust::linalg::animated_transform","tray_rust::film::color","tray_rust::film::render_target","tray_rust::film::camera","tray_rust::film::filter::gaussian","tray_rust::film::filter::mitchell_netravali","tray_rust::film::animated_color","tray_rust::film::image","tray_rust::geometry::differential_geometry","tray_rust::geometry::intersection","tray_rust::geometry::instance","tray_rust::geometry::sphere","tray_rust::geometry::disk","tray_rust::geometry::rectangle","tray_rust::geometry::bbox","tray_rust::geometry::bvh","tray_rust::geometry::mesh","tray_rust::geometry::animated_mesh","tray_rust::geometry::receiver","tray_rust::geometry::emitter","tray_rust::sampler::uniform","tray_rust::sampler::ld","tray_rust::sampler::adaptive","tray_rust::sampler::block_queue","tray_rust::integrator::whitted","tray_rust::integrator::path","tray_rust::integrator::normals_debug","tray_rust::scene","tray_rust::bxdf::bsdf","tray_rust::bxdf::lambertian","tray_rust::bxdf::oren_nayar","tray_rust::bxdf::fresnel","tray_rust::bxdf::specular_reflection","tray_rust::bxdf::specular_transmission","tray_rust::bxdf::merl","tray_rust::bxdf::microfacet::beckmann","tray_rust::bxdf::microfacet::ggx","tray_rust::bxdf::torrance_sparrow","tray_rust::bxdf::microfacet_transmission","tray_rust::material::matte","tray_rust::material::specular_metal","tray_rust::material::glass","tray_rust::material::merl","tray_rust::material::plastic","tray_rust::material::metal","tray_rust::material::rough_glass","tray_rust::light","tray_rust::exec::multithreaded","tray_rust::exec::distrib::worker","tray_rust::exec::distrib::master","tray_rust::texture::image","tray_rust::texture::animated_image","inv_height","update_deformation","sample_uniform","Sample the object using the probability density of the…","Compute the PDF that the ray from `p` with direction `w_i`…","Compute the sphere's surface area","get_samples","get_samples_2d","get_samples_1d","has_samples","select_block","get_region","report_results","illumination","normal_distribution","shadowing_masking","monodir_shadowing","Monodirectional shadowing function from Walter et al., we…","bxdf_type","sample_incident","delta_light","sample_color","sample_f32","keyframe","mitchellnetravali","lambertian","specularreflection","speculartransmission","torrancesparrow","microfacettransmission","Add two points together","Scale the vector by some value","Access the point by index","Access the vector by index","Access the normal by index","Access the channels by index","Access the BBox's min/max points by index","Create the matrix using the values from the iterator. The…","AnimatedTransform","ImageSample","RenderTarget","MitchellNetravali","ColorKeyframe","AnimatedColor","DifferentialGeometry","Intersection","AnimatedMeshData","AnimatedMesh","AnimatedTriangle","LowDiscrepancy","SpecularReflection","SpecularTransmission","MicrofacetDistribution","TorranceSparrow","MicrofacetTransmission","SpecularMetal","OcclusionTester","MultiThreaded","AnimatedImage","ConstantScalar","ConstantColor","BlockQueueIterator","NormalsDebug"];
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,R[372],"adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32",E,"Consume a Read object and returns the Adler32 hash.",N,[[["read"]],[[R[48],["u32"]],["u32"]]]],[11,"new",E,"Creates an empty Adler32 context (with hash 1).",0,[[],[R[371]]]],[11,R[1381],E,"Creates an Adler32 context with the given initial value.",0,[[["u32"]],[R[371]]]],[11,"from_buffer",E,"Convenience function initializing a context from the hash…",0,[[],[R[371]]]],[11,"hash",E,"Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove",E,"Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update",E,"Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer",E,"Feeds a vector of bytes to the algorithm to update the hash.",0,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]]],"p":[[3,R[372]]]};
searchIndex["aho_corasick"]={"doc":"An implementation of the Aho-Corasick string search…","i":[[3,"Match","aho_corasick","Records a match in the search text.",N,N],[12,"pati",E,"The pattern index.",0,N],[12,"start",E,"The starting byte offset of the match in the search text.",0,N],[12,"end",E,"The ending byte offset of the match in the search text.",0,N],[3,"Matches",E,"An iterator of non-overlapping matches for in-memory text.",N,N],[3,R[1431],E,"An iterator of overlapping matches for in-memory text.",N,N],[3,R[1432],E,"An iterator of non-overlapping matches for streaming text.",N,N],[3,R[1433],E,"An iterator of overlapping matches for streaming text.",N,N],[3,R[1428],E,"A complete Aho-Corasick automaton.",N,N],[3,R[1430],E,"An Aho-Corasick finite automaton.",N,N],[3,"Dense",E,"State transitions that can be stored either sparsely or…",N,N],[3,"Sparse",E,"State transitions that are always sparse.",N,N],[11,"new",E,"Build a new expanded Aho-Corasick automaton from an…",1,[[["transitions"],[R[1409]]],[R[1411]]]],[6,"StateIdx",E,"The integer type used for the state index.",N,N],[8,"Automaton",E,"An abstraction over automatons and their corresponding…",N,N],[10,R[1414],E,"Return the next state given the current state and next…",2,[[["u8"],["self"],[R[1412]]],[R[1412]]]],[10,"has_match",E,"Return true if and only if the given state and current…",2,[[["usize"],["self"],[R[1412]]],["bool"]]],[10,"get_match",E,"Build a match given the current state, pattern index and…",2,[[["usize"],[R[1412]],["self"]],["match"]]],[10,R[1413],E,"Return the set of bytes that have transitions in the root…",2,[[["self"]]]],[10,"patterns",E,"Returns all of the patterns matched by this automaton.",2,[[["self"]]]],[10,"pattern",E,"Returns the pattern indexed at `i`.",2,[[["self"],["usize"]],["p"]]],[11,"len",E,R[1416],2,[[["self"]],["usize"]]],[11,R[677],E,R[1417],2,[[["self"]],["bool"]]],[11,"find",E,R[1418],2,[[["self"],["q"]],["matches"]]],[11,R[1419],E,R[1420],2,[[["self"],["q"]],[R[1421]]]],[11,R[1422],E,R[1423],2,[[["read"],["self"]],[[R[1424]],["read"]]]],[11,R[1425],E,R[1426],2,[[["read"],["self"]],[["read"],[R[1427]]]]],[8,R[1429],E,"An abstraction over state transition strategies.",N,N],[10,"new",E,"Return a new state at the given depth.",3,[[["u32"]],["self"]]],[10,"goto",E,"Return the next state index given the next character.",3,[[["self"],["u8"]],[R[1412]]]],[10,"set_goto",E,"Set the next state index for the character given.",3,[[[R[1412]],["self"],["u8"]]]],[10,R[1415],E,"The memory use in bytes (on the heap) of this set of…",3,[[["self"]],["usize"]]],[11,"new",E,R[1410],4,[[["i"]],[["dense"],[R[1409],["dense"]]]]],[11,"with_transitions",E,R[1410],4,[[["i"]],[R[1409]]]],[11,"into_full",E,"Build out the entire automaton into a single matrix.",4,[[],[R[1411]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[364],E,E,5,[[],["i"]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[364],E,E,6,[[],["i"]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[364],E,E,7,[[],["i"]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[364],E,E,8,[[],["i"]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,R[1414],E,E,1,[[["u8"],["self"],[R[1412]]],[R[1412]]]],[11,"get_match",E,E,1,[[["usize"],[R[1412]],["self"]],["match"]]],[11,"has_match",E,E,1,[[["usize"],["self"],[R[1412]]],["bool"]]],[11,R[1413],E,E,1,[[["self"]]]],[11,"patterns",E,E,1,[[["self"]]]],[11,"pattern",E,E,1,[[["self"],["usize"]],["p"]]],[11,R[1414],E,E,4,[[["u8"],["self"],[R[1412]]],[R[1412]]]],[11,"get_match",E,E,4,[[["usize"],[R[1412]],["self"]],["match"]]],[11,"has_match",E,E,4,[[["usize"],["self"],[R[1412]]],["bool"]]],[11,R[1413],E,E,4,[[["self"]]]],[11,"patterns",E,E,4,[[["self"]]]],[11,"pattern",E,E,4,[[["self"],["usize"]],["p"]]],[11,"new",E,E,9,[[["u32"]],["dense"]]],[11,"goto",E,E,9,[[["self"],["u8"]],[R[1412]]]],[11,"set_goto",E,E,9,[[[R[1412]],["self"],["u8"]]]],[11,R[1415],E,E,9,[[["self"]],["usize"]]],[11,"new",E,E,10,[[["u32"]],["sparse"]]],[11,"goto",E,E,10,[[["self"],["u8"]],[R[1412]]]],[11,"set_goto",E,E,10,[[[R[1412]],["self"],["u8"]]]],[11,R[1415],E,E,10,[[["self"]],["usize"]]],[11,"next",E,E,5,[[["self"]],[["option",["match"]],["match"]]]],[11,"next",E,E,7,[[["self"]],[["option",[R[48]]],[R[48],["match"]]]]],[11,"next",E,E,6,[[["self"]],[["option",["match"]],["match"]]]],[11,"next",E,E,8,[[["self"]],[["option",[R[48]]],[R[48],["match"]]]]],[11,"clone",E,E,0,[[["self"]],["match"]]],[11,"clone",E,E,1,[[["self"]],[R[1411]]]],[11,"clone",E,E,4,[[["self"]],[R[1409]]]],[11,"clone",E,E,9,[[["self"]],["dense"]]],[11,"clone",E,E,10,[[["self"]],["sparse"]]],[11,"eq",E,E,0,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["match"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[784],E,"Create an automaton from an iterator of strings.",4,[[[T]],[R[1409]]]],[11,"len",E,R[1416],2,[[["self"]],["usize"]]],[11,R[677],E,R[1417],2,[[["self"]],["bool"]]],[11,"find",E,R[1418],2,[[["self"],["q"]],["matches"]]],[11,R[1419],E,R[1420],2,[[["self"],["q"]],[R[1421]]]],[11,R[1422],E,R[1423],2,[[["read"],["self"]],[[R[1424]],["read"]]]],[11,R[1425],E,R[1426],2,[[["read"],["self"]],[["read"],[R[1427]]]]]],"p":[[3,"Match"],[3,R[1428]],[8,"Automaton"],[8,R[1429]],[3,R[1430]],[3,"Matches"],[3,R[1431]],[3,R[1432]],[3,R[1433]],[3,"Dense"],[3,"Sparse"]]};
searchIndex["bincode"]={"doc":"`bincode` is a crate for encoding and decoding using a…","i":[[3,"Bounded","bincode","A SizeLimit that restricts serialized or deserialized…",N,N],[12,"0",E,E,0,N],[3,"Infinite",E,"A SizeLimit without a limit! Use this if you don't care…",N,N],[5,R[418],E,R[1344],N,[[],[R[48]]]],[5,R[1343],E,"Deserializes an object directly from a `Buffer`ed Reader.",N,[[["s"],["r"]],[R[48]]]],[5,R[1340],E,R[1341],N,[[["w"],[T],["s"]],[R[48]]]],[5,R[434],E,R[1342],N,[[[T],["s"]],[["vec",["u8"]],[R[48],["vec"]]]]],[0,"internal",E,"A collection of serialization and deserialization…",N,N],[3,R[431],R[1345],"A Deserializer that reads bytes from a buffer.",N,N],[3,R[436],E,"An Serializer that encodes values directly into a Writer.",N,N],[4,R[644],E,"The kind of error that can be produced during a…",N,N],[13,"Io",E,"If the error stems from the reader/writer that is being…",1,N],[13,"InvalidUtf8Encoding",E,R[1339],1,N],[13,"InvalidBoolEncoding",E,R[1339],1,N],[13,"InvalidCharEncoding",E,R[1339],1,N],[13,"InvalidTagEncoding",E,"Returned if the deserializer attempts to deserialize the…",1,N],[13,"DeserializeAnyNotSupported",E,"Serde has a deserialize_any method that lets the format…",1,N],[13,"SizeLimit",E,"If (de)serializing a message takes more than the provided…",1,N],[13,"SequenceMustHaveLength",E,"Bincode can not encode sequences of unknown length (like…",1,N],[13,"Custom",E,"A custom error message from Serde.",1,N],[5,R[1340],E,R[1341],N,[[["w"],[T],["s"]],[R[48]]]],[5,R[434],E,R[1342],N,[[[T],["s"]],[[R[48],["vec"]],["vec",["u8"]]]]],[5,"serialized_size",E,"Returns the size that an object would be if serialized…",N,[[[T]],["u64"]]],[5,"serialized_size_bounded",E,"Given a maximum size limit, check how large an object…",N,[[[T],["u64"]],[["option",["u64"]],["u64"]]]],[5,R[1343],E,"Deserializes an object directly from a `Read`er.",N,[[["s"],["r"]],[R[48]]]],[5,R[418],E,R[1344],N,[[],[R[48]]]],[6,"Result",E,"The result of a serialization or deserialization operation.",N,N],[6,"Error",E,"An error that can be produced during (de)serializing.",N,N],[0,"read_types","bincode","The types that the deserializer uses for optimizations",N,N],[3,R[1350],R[1346],"A BincodeRead implementation for byte slices",N,N],[3,"IoReader",E,"A BincodeRead implementation for io::Readers",N,N],[8,"BincodeRead",E,"A byte-oriented reading trait that is specialized for…",N,N],[6,R[431],"bincode","A Deserializer that uses LittleEndian byteorder",N,N],[6,R[436],E,"A Serializer that uses LittleEndian byteorder",N,N],[8,"SizeLimit",E,"A limit on the amount of bytes that can be read or written.",N,N],[10,"add",E,"Tells the SizeLimit that a certain number of bytes has…",2,[[["self"],["u64"]],[R[48]]]],[10,"limit",E,"Returns the hard limit (if one exists)",2,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",R[1345],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",R[1346],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",R[1345],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,R[1347],R[1346],E,6,[[["self"],["usize"],["v"]],[R[48]]]],[11,R[1348],E,E,6,[[["self"],["usize"]],[[R[48],["vec"]],["vec",["u8"]]]]],[11,R[1349],E,E,6,[[["self"],["usize"],["v"]],[R[48]]]],[11,R[1347],E,E,7,[[["self"],["usize"],["v"]],[R[48]]]],[11,R[1348],E,E,7,[[["self"],["usize"]],[[R[48],["vec"]],["vec",["u8"]]]]],[11,R[1349],E,E,7,[[["self"],["usize"],["v"]],[R[48]]]],[11,"add","bincode",E,0,[[["self"],["u64"]],[R[48]]]],[11,"limit",E,E,0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"add",E,E,3,[[["self"],["u64"]],[R[48]]]],[11,"limit",E,E,3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"from",E,E,8,[[["error"]],["error"]]],[11,"clone",E,E,0,[[["self"]],["bounded"]]],[11,"clone",E,E,3,[[["self"]],["infinite"]]],[11,"fmt",R[1345],E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[["option",["error"]],["error"]]]],[11,"read",R[1346],E,6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read_exact",E,E,6,[[["self"]],[R[48]]]],[11,"read",E,E,7,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read_exact",E,E,7,[[["self"]],[R[48]]]],[11,"custom","bincode",E,8,[[["display"]],["self"]]],[11,"custom",E,E,8,[[["display"]],["error"]]],[11,"new",R[1345],"Creates a new Serializer with the given `Write`r.",4,[[["w"]],["serializer"]]],[11,"new",R[1346],"Constructs a slice reader",6,[[],["slicereader"]]],[11,"new",E,"Constructs an IoReadReader",7,[[["r"]],["ioreader"]]],[11,"new",R[1345],"Creates a new Deserializer with a given `Read`er and a…",5,[[["s"],["r"]],["deserializer"]]]],"p":[[3,"Bounded"],[4,R[644]],[8,"SizeLimit"],[3,"Infinite"],[3,R[436]],[3,R[431]],[3,R[1350]],[3,"IoReader"],[6,"Error"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator.","i":[[14,R[398],R[398],"The `bitflags!` macro generates a `struct` that holds a…",N,N]],"p":[]};
searchIndex["bspline"]={"doc":"logo","i":[[3,"BSpline","bspline","Represents a B-spline curve that will use polynomials of…",N,N],[8,R[693],E,"The interpolate trait is used to linearly interpolate…",N,N],[10,R[2284],E,"Linearly interpolate between `self` and `other` using `t`,…",0,[[["f32"],["self"]],["self"]]],[11,"new",E,"Create a new B-spline curve of the desired `degree` that…",1,[[["f32"],["usize"],["vec"],["vec",["f32"]]],["bspline"]]],[11,"point",E,"Compute a point on the curve at `t`, the parameter must be…",1,[[["f32"],["self"]],[T]]],[11,"control_points",E,"Get an iterator over the control points.",1,[[["self"]],["iter"]]],[11,"knots",E,"Get an iterator over the knots.",1,[[["self"]],[["f32"],["iter",["f32"]]]]],[11,"knot_domain",E,"Get the min and max knot domain values for finding the `t`…",1,[[["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"clone",E,E,1,[[["self"]],["bspline"]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]]],"p":[[8,R[693]],[3,"BSpline"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[360],"byteorder","Defines big-endian serialization.",N,N],[4,R[361],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for `BigEndian`.",N,N],[6,"LE",E,"A type alias for `LittleEndian`.",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[357],E,"Extends `Read` with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[315],0,[[["self"]],[[R[48],["u8"]],["u8"]]]],[11,"read_i8",E,R[316],0,[[["self"]],[["i8"],[R[48],["i8"]]]]],[11,R[300],E,R[317],0,[[["self"]],[["u16"],[R[48],["u16"]]]]],[11,R[318],E,R[319],0,[[["self"]],[[R[48],["i16"]],["i16"]]]],[11,R[320],E,R[321],0,[[["self"]],[[R[48],["u32"]],["u32"]]]],[11,R[322],E,R[323],0,[[["self"]],[[R[48],["i32"]],["i32"]]]],[11,R[301],E,R[324],0,[[["self"]],[[R[48],["u32"]],["u32"]]]],[11,R[325],E,R[326],0,[[["self"]],[[R[48],["i32"]],["i32"]]]],[11,R[302],E,R[327],0,[[["self"]],[[R[48],["u64"]],["u64"]]]],[11,R[328],E,R[329],0,[[["self"]],[[R[48],["i64"]],["i64"]]]],[11,R[274],E,R[330],0,[[["self"],["usize"]],[[R[48],["u64"]],["u64"]]]],[11,R[331],E,R[332],0,[[["self"],["usize"]],[[R[48],["i64"]],["i64"]]]],[11,R[333],E,R[280],0,[[["self"]],[["f32"],[R[48],["f32"]]]]],[11,R[334],E,R[281],0,[[["self"]],[["f64"],[R[48],["f64"]]]]],[11,R[291],E,R[335],0,[[["self"]],[R[48]]]],[11,R[292],E,R[336],0,[[["self"]],[R[48]]]],[11,R[293],E,R[337],0,[[["self"]],[R[48]]]],[11,R[294],E,R[338],0,[[["self"]],[R[48]]]],[11,R[295],E,R[339],0,[[["self"]],[R[48]]]],[11,R[296],E,R[340],0,[[["self"]],[R[48]]]],[11,R[341],E,R[342],0,[[["self"]],[R[48]]]],[11,R[297],E,R[273],0,[[["self"]],[R[48]]]],[11,R[343],E,R[344],0,[[["self"]],[R[48]]]],[11,R[298],E,R[273],0,[[["self"]],[R[48]]]],[8,R[358],E,"Extends `Write` with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[345],1,[[["self"],["u8"]],[R[48]]]],[11,"write_i8",E,R[346],1,[[["self"],["i8"]],[R[48]]]],[11,R[275],E,R[347],1,[[["u16"],["self"]],[R[48]]]],[11,R[282],E,R[348],1,[[["self"],["i16"]],[R[48]]]],[11,R[276],E,R[349],1,[[["self"],["u32"]],[R[48]]]],[11,R[283],E,R[350],1,[[["self"],["i32"]],[R[48]]]],[11,R[277],E,R[351],1,[[["self"],["u32"]],[R[48]]]],[11,R[284],E,R[352],1,[[["self"],["i32"]],[R[48]]]],[11,R[278],E,R[353],1,[[["self"],["u64"]],[R[48]]]],[11,R[285],E,R[354],1,[[["i64"],["self"]],[R[48]]]],[11,R[279],E,R[355],1,[[["self"],["u64"],["usize"]],[R[48]]]],[11,R[286],E,R[356],1,[[["i64"],["self"],["usize"]],[R[48]]]],[11,R[287],E,R[288],1,[[["f32"],["self"]],[R[48]]]],[11,R[289],E,R[290],1,[[["self"],["f64"]],[R[48]]]],[8,R[359],E,"ByteOrder describes types that can serialize integers as…",N,N],[10,R[300],E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,R[320],E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,R[301],E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[10,R[302],E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[274],E,"Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,R[275],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,R[276],E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[277],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[10,R[278],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[279],E,"Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[11,R[318],E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,R[322],E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,R[325],E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,R[328],E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,R[331],E,"Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,R[333],E,R[280],2,[[],["f32"]]],[11,R[334],E,R[281],2,[[],["f64"]]],[11,R[282],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,R[283],E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[284],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,R[285],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[286],E,"Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,R[287],E,R[288],2,[[["f32"]]]],[11,R[289],E,R[290],2,[[["f64"]]]],[10,R[291],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[292],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[293],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[294],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[295],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[296],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[297],E,R[299],2,[[]]],[11,R[298],E,R[299],2,[[]]],[10,R[303],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[304],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[305],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[306],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[307],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[308],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[10,R[309],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[310],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,R[300],E,E,3,[[],["u16"]]],[11,R[301],E,E,3,[[],["u32"]]],[11,R[302],E,E,3,[[],["u64"]]],[11,R[274],E,E,3,[[["usize"]],["u64"]]],[11,R[275],E,E,3,[[["u16"]]]],[11,R[277],E,E,3,[[["u32"]]]],[11,R[278],E,E,3,[[["u64"]]]],[11,R[279],E,E,3,[[["usize"],["u64"]]]],[11,R[291],E,E,3,[[]]],[11,R[292],E,E,3,[[]]],[11,R[293],E,E,3,[[]]],[11,R[303],E,E,3,[[]]],[11,R[304],E,E,3,[[]]],[11,R[305],E,E,3,[[]]],[11,R[306],E,E,3,[[]]],[11,R[307],E,E,3,[[]]],[11,R[308],E,E,3,[[]]],[11,R[309],E,E,3,[[]]],[11,R[310],E,E,3,[[]]],[11,R[300],E,E,4,[[],["u16"]]],[11,R[301],E,E,4,[[],["u32"]]],[11,R[302],E,E,4,[[],["u64"]]],[11,R[274],E,E,4,[[["usize"]],["u64"]]],[11,R[275],E,E,4,[[["u16"]]]],[11,R[277],E,E,4,[[["u32"]]]],[11,R[278],E,E,4,[[["u64"]]]],[11,R[279],E,E,4,[[["usize"],["u64"]]]],[11,R[291],E,E,4,[[]]],[11,R[292],E,E,4,[[]]],[11,R[293],E,E,4,[[]]],[11,R[303],E,E,4,[[]]],[11,R[304],E,E,4,[[]]],[11,R[305],E,E,4,[[]]],[11,R[306],E,E,4,[[]]],[11,R[307],E,E,4,[[]]],[11,R[308],E,E,4,[[]]],[11,R[309],E,E,4,[[]]],[11,R[310],E,E,4,[[]]],[11,"clone",E,E,3,[[["self"]],[R[311]]]],[11,"clone",E,E,4,[[["self"]],[R[312]]]],[11,R[744],E,E,3,[[],[R[311]]]],[11,R[744],E,E,4,[[],[R[312]]]],[11,"cmp",E,E,3,[[[R[311]],["self"]],[R[313]]]],[11,"cmp",E,E,4,[[[R[312]],["self"]],[R[313]]]],[11,"eq",E,E,3,[[[R[311]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[312]],["self"]],["bool"]]],[11,R[314],E,E,3,[[[R[311]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,4,[[[R[312]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[315],0,[[["self"]],[[R[48],["u8"]],["u8"]]]],[11,"read_i8",E,R[316],0,[[["self"]],[["i8"],[R[48],["i8"]]]]],[11,R[300],E,R[317],0,[[["self"]],[["u16"],[R[48],["u16"]]]]],[11,R[318],E,R[319],0,[[["self"]],[[R[48],["i16"]],["i16"]]]],[11,R[320],E,R[321],0,[[["self"]],[[R[48],["u32"]],["u32"]]]],[11,R[322],E,R[323],0,[[["self"]],[[R[48],["i32"]],["i32"]]]],[11,R[301],E,R[324],0,[[["self"]],[[R[48],["u32"]],["u32"]]]],[11,R[325],E,R[326],0,[[["self"]],[[R[48],["i32"]],["i32"]]]],[11,R[302],E,R[327],0,[[["self"]],[[R[48],["u64"]],["u64"]]]],[11,R[328],E,R[329],0,[[["self"]],[[R[48],["i64"]],["i64"]]]],[11,R[274],E,R[330],0,[[["self"],["usize"]],[[R[48],["u64"]],["u64"]]]],[11,R[331],E,R[332],0,[[["self"],["usize"]],[[R[48],["i64"]],["i64"]]]],[11,R[333],E,R[280],0,[[["self"]],[["f32"],[R[48],["f32"]]]]],[11,R[334],E,R[281],0,[[["self"]],[["f64"],[R[48],["f64"]]]]],[11,R[291],E,R[335],0,[[["self"]],[R[48]]]],[11,R[292],E,R[336],0,[[["self"]],[R[48]]]],[11,R[293],E,R[337],0,[[["self"]],[R[48]]]],[11,R[294],E,R[338],0,[[["self"]],[R[48]]]],[11,R[295],E,R[339],0,[[["self"]],[R[48]]]],[11,R[296],E,R[340],0,[[["self"]],[R[48]]]],[11,R[341],E,R[342],0,[[["self"]],[R[48]]]],[11,R[297],E,R[273],0,[[["self"]],[R[48]]]],[11,R[343],E,R[344],0,[[["self"]],[R[48]]]],[11,R[298],E,R[273],0,[[["self"]],[R[48]]]],[11,"write_u8",E,R[345],1,[[["self"],["u8"]],[R[48]]]],[11,"write_i8",E,R[346],1,[[["self"],["i8"]],[R[48]]]],[11,R[275],E,R[347],1,[[["u16"],["self"]],[R[48]]]],[11,R[282],E,R[348],1,[[["self"],["i16"]],[R[48]]]],[11,R[276],E,R[349],1,[[["self"],["u32"]],[R[48]]]],[11,R[283],E,R[350],1,[[["self"],["i32"]],[R[48]]]],[11,R[277],E,R[351],1,[[["self"],["u32"]],[R[48]]]],[11,R[284],E,R[352],1,[[["self"],["i32"]],[R[48]]]],[11,R[278],E,R[353],1,[[["self"],["u64"]],[R[48]]]],[11,R[285],E,R[354],1,[[["i64"],["self"]],[R[48]]]],[11,R[279],E,R[355],1,[[["self"],["u64"],["usize"]],[R[48]]]],[11,R[286],E,R[356],1,[[["i64"],["self"],["usize"]],[R[48]]]],[11,R[287],E,R[288],1,[[["f32"],["self"]],[R[48]]]],[11,R[289],E,R[290],1,[[["self"],["f64"]],[R[48]]]]],"p":[[8,R[357]],[8,R[358]],[8,R[359]],[4,R[360]],[4,R[361]]]};
searchIndex["bytes"]={"doc":E,"i":[[3,"ByteBuf","bytes",R[650],N,N],[3,R[651],E,E,N,N],[3,"RingBuf",E,R[654],N,N],[3,R[652],E,R[653],N,N],[3,R[687],E,E,N,N],[3,R[655],E,E,N,N],[3,"Take",E,E,N,N],[3,"Bytes",E,R[669],N,N],[3,"Rope",E,R[670],N,N],[3,"RopeBuf",E,E,N,N],[3,R[671],E,E,N,N],[3,R[672],E,E,N,N],[3,R[673],E,E,N,N],[4,"BufError",E,E,N,N],[13,"Underflow",E,E,0,N],[13,"Overflow",E,E,0,N],[0,"alloc",E,E,N,N],[3,"Heap",R[680],E,N,N],[3,"MemRef",E,E,N,N],[3,"Mem",E,"Memory allocated by an Allocator must be prefixed with Mem",N,N],[5,"heap",E,E,N,[[["usize"]],["memref"]]],[11,R[681],E,E,1,[[["self"],["usize"]],["memref"]]],[11,R[649],E,E,1,[[["self"]]]],[8,R[686],E,"Allocates memory to be used by Bufs or Bytes. Allows…",N,N],[10,R[681],E,"Allocate memory. May or may not be contiguous.",2,[[["self"],["usize"]],["memref"]]],[10,R[649],E,"Deallocate a chunk of memory",2,[[["self"]]]],[11,"new",E,E,3,[[],["memref"]]],[11,"none",E,E,3,[[],["memref"]]],[11,"is_none",E,E,3,[[["self"]],["bool"]]],[11,"ptr",E,E,3,[[["self"]]]],[11,"bytes",E,E,3,[[["self"]]]],[11,"bytes_mut",E,E,3,[[["self"]]]],[11,"new",E,E,4,[[["usize"]],["mem"]]],[0,"buf","bytes",E,N,N],[3,"ByteBuf",R[663],R[650],N,N],[3,R[651],E,E,N,N],[3,R[652],E,R[653],N,N],[3,"RingBuf",E,R[654],N,N],[3,R[687],E,E,N,N],[3,R[655],E,E,N,N],[3,"Take",E,E,N,N],[11,R[674],"bytes","Create a new `ByteBuf` by copying the contents of the…",5,[[],["bytebuf"]]],[11,"mut_with_capacity",E,E,5,[[["usize"]],[R[656]]]],[11,"none",E,E,5,[[],["bytebuf"]]],[11,R[657],E,E,5,[[["memref"],["u32"]],["bytebuf"]]],[11,R[662],E,E,5,[[["self"]],["usize"]]],[11,"flip",E,E,5,[[],[R[656]]]],[11,"resume",E,"Flips the buffer back to mutable, resetting the write…",5,[[],[R[656]]]],[11,R[664],E,E,5,[[["self"]],["usize"]]],[11,R[658],E,E,5,[[],[R[659]]]],[11,R[679],E,E,5,[[],["bytes"]]],[11,"mark",E,R[660],5,[[["self"]]]],[11,"reset",E,R[661],5,[[["self"]]]],[11,R[657],E,E,6,[[["memref"],["u32"]],[R[684]]]],[11,R[658],E,E,6,[[],[R[659]]]],[11,R[679],E,E,6,[[],["bytes"]]],[11,"mark",E,R[660],6,[[["self"]]]],[11,"reset",E,R[661],6,[[["self"]]]],[11,R[662],E,E,7,[[["self"]],["usize"]]],[11,"flip",E,E,7,[[],["bytebuf"]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[667],E,E,7,[[["self"]],["usize"]]],[11,"bytes",E,E,7,[[["self"]]]],[11,"new",E,"Allocates a new `RingBuf` with the specified capacity.",8,[[["usize"]],["ringbuf"]]],[11,"is_full",E,"Returns `true` if the buf cannot accept any further writes.",8,[[["self"]],["bool"]]],[11,R[677],E,"Returns `true` if the buf cannot accept any further reads.",8,[[["self"]],["bool"]]],[11,R[662],E,"Returns the number of bytes that the buf can hold.",8,[[["self"]],["usize"]]],[11,"mark",E,R[660],8,[[["self"]]]],[11,"reset",E,R[661],8,[[["self"]]]],[11,"clear",E,"Resets all internal state to the initial state.",8,[[["self"]]]],[11,"wrap",E,E,9,[[],["slicebuf"]]],[11,"wrap",E,E,10,[[],["mutslicebuf"]]],[11,"new",E,E,11,[[[T],["usize"]],["take"]]],[11,R[906],E,E,11,[[],[T]]],[11,"get_ref",E,E,11,[[["self"]],[T]]],[11,"get_mut",E,E,11,[[["self"]],[T]]],[11,"limit",E,E,11,[[["self"]],["usize"]]],[11,"set_limit",E,E,11,[[["self"],["usize"]]]],[8,"Buf",R[663],"A trait for values that provide sequential read access to…",N,N],[10,R[665],E,"Returns the number of bytes that can be accessed from the…",12,[[["self"]],["usize"]]],[10,"bytes",E,"Returns a slice starting at the current Buf position and…",12,[[["self"]]]],[10,R[682],E,"Advance the internal cursor of the Buf",12,[[["self"],["usize"]]]],[11,R[666],E,"Returns true if there are any more bytes to consume",12,[[["self"]],["bool"]]],[11,R[664],E,"Read bytes from the `Buf` into the given slice and advance…",12,[[["self"]],["usize"]]],[11,"read_byte",E,"Read a single byte from the `Buf`",12,[[["self"]],[["option",["u8"]],["u8"]]]],[8,"BufExt",E,R[668],N,N],[10,"read",E,"Read bytes from this Buf into the given sink and advance…",13,[[["self"],["sink"]],[[R[48],["usize"]],["usize"]]]],[8,"MutBuf",E,"A trait for values that provide sequential write access to…",N,N],[10,R[665],E,"Returns the number of bytes that can be written to the…",14,[[["self"]],["usize"]]],[10,R[682],E,"Advance the internal cursor of the MutBuf",14,[[["self"],["usize"]]]],[11,R[666],E,"Returns true iff there is any more space for bytes to be…",14,[[["self"]],["bool"]]],[10,R[683],E,"Returns a mutable slice starting at the current MutBuf…",14,[[["self"]]]],[11,R[667],E,"Write bytes from the given slice into the `MutBuf` and…",14,[[["self"]],["usize"]]],[11,"write_byte",E,"Write a single byte to the `MuBuf`",14,[[["self"],["u8"]],["bool"]]],[8,R[688],E,R[668],N,N],[10,"write",E,"Write bytes from the given source into the current…",15,[[["source"],["self"]],[[R[48],["usize"]],["usize"]]]],[8,"Sink",E,"A value that reads bytes from a Buf into itself",N,N],[16,"Error",E,E,16,N],[10,"sink",E,E,16,[[["b"]],[["usize"],[R[48],["usize"]]]]],[8,"Source",E,"A value that writes bytes from itself into a `MutBuf`.",N,N],[16,"Error",E,E,17,N],[10,"fill",E,E,17,[[["b"]],[[R[48],["usize"]],["usize"]]]],[0,"str","bytes",E,N,N],[3,"Bytes",R[676],R[669],N,N],[3,"Rope",E,R[670],N,N],[3,"RopeBuf",E,E,N,N],[3,R[671],E,E,N,N],[3,R[672],E,E,N,N],[3,R[673],E,E,N,N],[11,R[674],"bytes",E,18,[[],["bytes"]]],[11,"of",E,E,18,[[["bytestr"]],["bytes"]]],[11,"empty",E,E,18,[[],["bytes"]]],[11,"downcast_ref",E,"If the underlying `ByteStr` is of type `B`, returns a…",18,[[["self"]],[["option"],["b"]]]],[11,"try_unwrap",E,"If the underlying `ByteStr` is of type `B`, returns the…",18,[[],[[R[48],["bytes"]],["bytestr"],["bytes"]]]],[11,R[674],E,E,19,[[],["rope"]]],[11,"of",E,"Returns a Rope consisting of the supplied Bytes as a…",19,[[["bytestr"]],["rope"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,R[677],E,E,19,[[["self"]],["bool"]]],[11,R[674],E,"Create a new `SeqByteStr` from a byte slice.",20,[[],[R[659]]]],[11,R[657],E,"Creates a new `SeqByteStr` from a `MemRef`, an offset, and…",20,[[["memref"],["u32"]],[R[659]]]],[11,"zero",E,E,21,[[],[R[675]]]],[11,R[674],E,E,21,[[],[["option",[R[675]]],[R[675]]]]],[11,"as_slice",E,E,21,[[["self"]]]],[8,"ByteStr",R[676],"An immutable sequence of bytes. Operations will not mutate…",N,N],[16,"Buf",E,E,22,N],[10,"buf",E,"Returns a read-only `Buf` for accessing the byte contents…",22,[[["self"]]]],[10,"concat",E,"Returns a new `Bytes` value representing the concatenation…",22,[[["b"],["self"]],["bytes"]]],[10,"len",E,"Returns the number of bytes in the ByteStr",22,[[["self"]],["usize"]]],[11,R[677],E,"Returns true if the length of the `ByteStr` is 0",22,[[["self"]],["bool"]]],[10,"slice",E,R[678],22,[[["self"],["usize"]],["bytes"]]],[11,"slice_from",E,R[678],22,[[["self"],["usize"]],["bytes"]]],[11,"slice_to",E,"Returns a new ByteStr value containing the byte range from…",22,[[["self"],["usize"]],["bytes"]]],[11,"split_at",E,"Divides the value into two `Bytes` at the given index.",22,[[["self"],["usize"]]]],[8,"ToBytes",E,E,N,N],[10,R[679],E,"Consumes the value and returns a `Bytes` instance…",23,[[],["bytes"]]],[0,"traits","bytes","All traits are re-exported here to allow glob imports.",N,N],[11,"read",E,E,5,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"write",E,E,7,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"read",E,E,8,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"write",E,E,8,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"read",E,E,6,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"read",E,E,9,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"write",E,E,10,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"read",E,E,11,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"write",E,E,11,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"read",E,E,24,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"],[T]]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"read",E,E,25,[[["self"],["s"]],[[R[48],["usize"]],["usize"]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",R[680],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,R[681],E,E,1,[[["self"],["usize"]],["memref"]]],[11,R[649],E,E,1,[[["self"]]]],[11,R[665],"bytes",E,5,[[["self"]],["usize"]]],[11,"bytes",E,E,5,[[["self"]]]],[11,R[682],E,E,5,[[["self"],["usize"]]]],[11,R[664],E,E,5,[[["self"]],["usize"]]],[11,R[665],E,E,6,[[["self"]],["usize"]]],[11,"bytes",E,E,6,[[["self"]]]],[11,R[682],E,E,6,[[["self"],["usize"]]]],[11,R[664],E,E,6,[[["self"]],["usize"]]],[11,R[665],E,E,8,[[["self"]],["usize"]]],[11,"bytes",E,E,8,[[["self"]]]],[11,R[682],E,E,8,[[["self"],["usize"]]]],[11,R[665],E,E,9,[[["self"]],["usize"]]],[11,"bytes",E,E,9,[[["self"]]]],[11,R[682],E,E,9,[[["self"],["usize"]]]],[11,R[665],E,E,11,[[["self"]],["usize"]]],[11,"bytes",E,E,11,[[["self"]]]],[11,R[682],E,E,11,[[["self"],["usize"]]]],[11,R[665],E,E,24,[[["self"]],["usize"]]],[11,"bytes",E,E,24,[[["self"]]]],[11,R[682],E,E,24,[[["self"],["usize"]]]],[11,R[665],E,E,25,[[["self"]],["usize"]]],[11,"bytes",E,E,25,[[["self"]]]],[11,R[682],E,E,25,[[["self"],["usize"]]]],[11,R[665],E,E,7,[[["self"]],["usize"]]],[11,R[682],E,E,7,[[["self"],["usize"]]]],[11,R[683],E,E,7,[[["self"]]]],[11,R[665],E,E,8,[[["self"]],["usize"]]],[11,R[682],E,E,8,[[["self"],["usize"]]]],[11,R[683],E,E,8,[[["self"]]]],[11,R[665],E,E,10,[[["self"]],["usize"]]],[11,R[682],E,E,10,[[["self"],["usize"]]]],[11,R[683],E,E,10,[[["self"]]]],[11,R[665],E,E,11,[[["self"]],["usize"]]],[11,R[683],E,E,11,[[["self"]]]],[11,R[682],E,E,11,[[["self"],["usize"]]]],[11,"buf",E,E,18,[[["self"]],[["box",["buf"]],["buf"]]]],[11,"concat",E,E,18,[[["b"],["self"]],["bytes"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"slice",E,E,18,[[["self"],["usize"]],["bytes"]]],[11,"split_at",E,E,18,[[["self"],["usize"]]]],[11,"buf",E,E,19,[[["self"]],["ropebuf"]]],[11,"concat",E,E,19,[[["b"],["self"]],["bytes"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"slice",E,E,19,[[["self"],["usize"]],["bytes"]]],[11,"buf",E,E,20,[[["self"]],[R[684]]]],[11,"concat",E,E,20,[[["b"],["self"]],["bytes"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"slice",E,E,20,[[["self"],["usize"]],["bytes"]]],[11,"buf",E,E,21,[[["self"]],[R[685]]]],[11,"concat",E,E,21,[[["b"],["self"]],["bytes"]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,"slice",E,E,21,[[["self"],["usize"]],["bytes"]]],[11,R[679],E,E,18,[[],["bytes"]]],[11,R[679],E,E,19,[[],["bytes"]]],[11,R[679],E,E,20,[[],["bytes"]]],[11,R[679],E,E,21,[[],["bytes"]]],[11,"drop",R[680],E,3,[[["self"]]]],[11,"drop","bytes",E,18,[[["self"]]]],[11,"clone",R[680],E,3,[[["self"]],["memref"]]],[11,"clone","bytes",E,8,[[["self"]],["ringbuf"]]],[11,"clone",E,E,18,[[["self"]],["bytes"]]],[11,"clone",E,E,19,[[["self"]],["rope"]]],[11,"clone",E,E,20,[[["self"]],[R[659]]]],[11,"clone",E,E,21,[[["self"]],[R[675]]]],[11,"clone",E,E,25,[[["self"]],[R[685]]]],[11,"clone",E,E,0,[[["self"]],["buferror"]]],[11,"eq",E,E,20,[[["b"],["self"]],["bool"]]],[11,"ne",E,E,20,[[["b"],["self"]],["bool"]]],[11,"eq",E,E,21,[[["b"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["b"],["self"]],["bool"]]],[11,"eq",E,E,18,[[["b"],["self"]],["bool"]]],[11,"ne",E,E,18,[[["b"],["self"]],["bool"]]],[11,"eq",E,E,19,[[["b"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["b"],["self"]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"index",E,E,18,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,19,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,20,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,21,[[["self"],["usize"]],["u8"]]],[11,"read",E,E,8,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,11,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,5,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,24,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"write",E,E,8,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,8,[[["self"]],[R[48]]]],[11,"write",E,E,7,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,7,[[["self"]],[R[48]]]]],"p":[[4,"BufError"],[3,"Heap"],[8,R[686]],[3,"MemRef"],[3,"Mem"],[3,"ByteBuf"],[3,R[652]],[3,R[651]],[3,"RingBuf"],[3,R[687]],[3,R[655]],[3,"Take"],[8,"Buf"],[8,"BufExt"],[8,"MutBuf"],[8,R[688]],[8,"Sink"],[8,"Source"],[3,"Bytes"],[3,"Rope"],[3,R[671]],[3,R[672]],[8,"ByteStr"],[8,"ToBytes"],[3,"RopeBuf"],[3,R[673]]]};
searchIndex["cfg_if"]={"doc":"A macro for defining #[cfg] if-else statements.","i":[[14,"cfg_if","cfg_if",E,N,N]],"p":[]};
searchIndex["coco"]={"doc":"Concurrent collections.","i":[[0,"deque","coco","A lock-free work-stealing deque.",N,N],[3,"Worker",R[823],"Worker side of a work-stealing deque.",N,N],[3,"Stealer",E,"Stealer side of a work-stealing deque.",N,N],[5,"new",E,"Returns a new work-stealing deque.",N,[[]]],[11,"len",E,R[816],0,[[["self"]],["usize"]]],[11,"push",E,"Pushes an element onto the bottom of the deque.",0,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the bottom of the deque.",0,[[["self"]],["option"]]],[11,"steal",E,R[817],0,[[["self"]],["option"]]],[11,"len",E,R[816],1,[[["self"]],["usize"]]],[11,"steal",E,R[817],1,[[["self"]],["option"]]],[0,"epoch","coco","Epoch-based garbage collection.",N,N],[3,"Atomic",R[824],"A tagged atomic nullable pointer.",N,N],[3,"Ptr",E,"A tagged nullable pointer.",N,N],[3,"Garbage",E,"A garbage queue.",N,N],[3,"Pin",E,"A witness that the current thread is pinned.",N,N],[5,R[821],E,"Stashes away an object that will later be freed.",N,[[["pin"],["usize"]]]],[5,"flush",E,"Flushes the buffered thread-local garbage.",N,[[["pin"]]]],[5,"is_pinned",E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[["f"]],[T]]],[11,"null",E,"Returns a new, null atomic pointer tagged with `tag`.",2,[[["usize"]],["self"]]],[11,"new",E,"Allocates `data` on the heap and returns a new atomic…",2,[[[T],["usize"]],["self"]]],[11,"from_ptr",E,"Returns a new atomic pointer initialized with `ptr`.",2,[[["ptr"]],["self"]]],[11,"from_box",E,"Returns a new atomic pointer initialized with `b` and `tag`.",2,[[["box"],["usize"]],["self"]]],[11,"from_raw",E,"Returns a new atomic pointer initialized with `raw` and…",2,[[["usize"]],["self"]]],[11,"load",E,"Loads the tagged atomic pointer.",2,[[["self"],["pin"]],["ptr"]]],[11,"load_raw",E,"Loads the tagged atomic pointer as a raw pointer and a tag.",2,[[[R[313]],["self"]]]],[11,"store",E,R[818],2,[[["self"],["ptr"]]]],[11,"store_box",E,"Stores `new` tagged with `tag` into the atomic and returns…",2,[[["box"],["usize"],["self"],["pin"]],["ptr"]]],[11,"store_raw",E,R[818],2,[[[R[313]],["usize"],["self"],["pin"]],["ptr"]]],[11,"swap",E,"Stores `new` into the atomic, returning the old tagged…",2,[[["self"],["ptr"]],["ptr"]]],[11,"swap_box",E,R[819],2,[[["box"],["usize"],["self"],["pin"]],["ptr"]]],[11,"swap_raw",E,R[819],2,[[[R[313]],["usize"],["self"]],["ptr"]]],[11,"cas",E,R[820],2,[[["self"],["ptr"]],[[R[48],["ptr"]],["ptr"]]]],[11,"cas_sc",E,R[820],2,[[["self"],["ptr"]],[[R[48],["ptr"]],["ptr"]]]],[11,"cas_weak",E,R[820],2,[[["self"],["ptr"]],[[R[48],["ptr"]],["ptr"]]]],[11,"cas_weak_sc",E,R[820],2,[[["self"],["ptr"]],[[R[48],["ptr"]],["ptr"]]]],[11,"cas_box",E,R[820],2,[[["box"],["usize"],["ptr"],["self"]],[["ptr"],[R[48],["ptr"]]]]],[11,"cas_box_sc",E,R[820],2,[[["box"],["usize"],["ptr"],["self"]],[["ptr"],[R[48],["ptr"]]]]],[11,"cas_box_weak",E,R[820],2,[[["box"],["usize"],["ptr"],["self"]],[["ptr"],[R[48],["ptr"]]]]],[11,"cas_box_weak_sc",E,R[820],2,[[["box"],["usize"],["ptr"],["self"]],[["ptr"],[R[48],["ptr"]]]]],[11,"cas_raw",E,R[820],2,[[[R[313]],["self"]],[R[48]]]],[11,"cas_raw_weak",E,R[820],2,[[[R[313]],["self"]],[R[48]]]],[11,"null",E,"Returns a null pointer with a tag.",3,[[["usize"]],["self"]]],[11,"from_raw",E,"Constructs a tagged pointer from a raw pointer and tag.",3,[[["usize"]],["self"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],["option"]]]],[11,"as_raw",E,"Converts the pointer to a raw pointer.",3,[[["self"]]]],[11,"unwrap",E,"Returns a reference to the pointing object.",3,[[["self"]],[T]]],[11,"tag",E,"Returns the tag.",3,[[["self"]],["usize"]]],[11,"with_tag",E,"Constructs a new tagged pointer with a different tag.",3,[[["self"],["usize"]],["self"]]],[11,"new",E,"Returns a new, empty garbage queue.",4,[[],["self"]]],[11,R[821],E,"Adds an object that will later be freed.",4,[[["usize"],["self"],["pin"]]]],[11,"defer_drop",E,"Adds an object that will later be dropped and freed.",4,[[["usize"],["self"],["pin"]]]],[11,"defer_destroy",E,"Adds an object that will later be destroyed using `destroy`.",4,[[["usize"],["self"],["pin"]]]],[11,"flush",E,"Flushes the buffered garbage.",4,[[["self"],["pin"]]]],[11,"collect",E,"Collects some garbage from the queue and destroys it.",4,[[["self"],["pin"]]]],[0,"stack","coco",R[822],N,N],[3,"Stack",R[825],R[822],N,N],[11,"new",E,"Returns a new, empty stack.",5,[[],["self"]]],[11,R[677],E,"Returns `true` if the stack is empty.",5,[[["self"]],["bool"]]],[11,"push",E,"Pushes a new value onto the stack.",5,[[["self"],[T]]]],[11,"pop",E,"Attemps to pop an value from the stack.",5,[[["self"]],["option"]]],[11,"into",R[823],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",R[824],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",R[825],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"drop",R[824],E,4,[[["self"]]]],[11,"drop",R[825],E,5,[[["self"]]]],[11,"clone",R[823],E,1,[[["self"]],["self"]]],[11,"clone",R[824],E,3,[[["self"]],["self"]]],[11,R[744],E,E,2,[[],["self"]]],[11,R[744],E,E,3,[[],["self"]]],[11,"fmt",R[823],E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[824],E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]]],"p":[[3,"Worker"],[3,"Stealer"],[3,"Atomic"],[3,"Ptr"],[3,"Garbage"],[3,"Stack"],[3,"Pin"]]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color…","i":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",N,N],[11,"new",E,"Creates a new neuronal network and trains it with the…",0,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neuronal network and trains it with the…",0,[[["self"]]]],[11,"map_pixel",E,"Maps the rgba-pixel in-place to the best-matching color in…",0,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map.",0,[[["self"]],["usize"]]],[11,"color_map_rgba",E,R[401],0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"color_map_rgb",E,R[401],0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]]],"p":[[3,"NeuQuant"]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,R[934],"deflate","A struct describing the options for a compressor or…",N,N],[12,"max_hash_checks",E,"The maximum number of checks to make in the hash table for…",0,N],[12,"lazy_if_less_than",E,"Only lazy match if we have a length less than this value.",0,N],[12,"matching_type",E,"Whether to use lazy or greedy matching.",0,N],[12,"special",E,"Force fixed/stored blocks (Not implemented yet). * Default…",0,N],[4,R[935],E,"Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal",E,"Compress normally.",1,N],[13,"_ForceFixed",E,"Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored",E,"Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,R[936],E,"An enum describing the level of compression to be used by…",N,N],[13,"Fast",E,"Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default",E,"Default level (`CompressionOptions::default()`).",2,N],[13,"Best",E,"Higher compression level (`CompressionOptions::high()`).",2,N],[4,R[937],E,"An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy",E,"Use greedy matching: the matching algorithm simply uses a…",3,N],[13,"Lazy",E,"Use lazy matching: after finding a match, the next input…",3,N],[5,"deflate_bytes_conf",E,"Compress the given slice of bytes with DEFLATE compression.",N,[[["into",[R[923]]],[R[923]]],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes",E,"Compress the given slice of bytes with DEFLATE compression…",N,[[],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes_zlib_conf",E,R[924],N,[[["into",[R[923]]],[R[923]]],[["vec",["u8"]],["u8"]]]],[5,"deflate_bytes_zlib",E,R[924],N,[[],[["vec",["u8"]],["u8"]]]],[11,"high",E,"Returns compression settings rouhgly corresponding to the…",0,[[],[R[923]]]],[11,"fast",E,"Returns  a fast set of compression settings",0,[[],[R[923]]]],[11,"huffman_only",E,R[925],0,[[],[R[923]]]],[11,"rle",E,R[925],0,[[],[R[923]]]],[0,"write",E,"Encoders implementing a `Write` interface.",N,N],[3,R[938],R[926],"A DEFLATE encoder/compressor.",N,N],[3,R[939],E,"A Zlib encoder/compressor.",N,N],[11,"into","deflate",E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",R[926],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"drop",E,R[927],4,[[["self"]]]],[11,"drop",E,R[927],5,[[["self"]]]],[11,"from","deflate",E,0,[[[R[928]]],[R[923]]]],[11,"clone",E,E,2,[[["self"]],[R[928]]]],[11,"clone",E,E,1,[[["self"]],[R[929]]]],[11,"clone",E,E,0,[[["self"]],[R[923]]]],[11,"clone",E,E,3,[[["self"]],[R[930]]]],[11,R[744],E,E,2,[[],[R[928]]]],[11,R[744],E,E,1,[[],[R[929]]]],[11,R[744],E,"Returns the options describing the default compression…",0,[[],[R[923]]]],[11,"cmp",E,E,2,[[[R[928]],["self"]],[R[313]]]],[11,"cmp",E,E,3,[[[R[930]],["self"]],[R[313]]]],[11,"eq",E,E,2,[[[R[928]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[929]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[923]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[923]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[930]],["self"]],["bool"]]],[11,R[314],E,E,2,[[[R[928]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,3,[[[R[930]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"write",R[926],E,4,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,R[931],4,[[["self"]],[R[48]]]],[11,"write",E,E,5,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,R[931],5,[[["self"]],[R[48]]]],[11,"new",E,"Creates a new encoder using the provided compression…",4,[[["w"],["into",[R[923]]],[R[923]]],["deflateencoder"]]],[11,"finish",E,R[932],4,[[],[R[48]]]],[11,"reset",E,R[933],4,[[["w"],["self"]],[R[48]]]],[11,"new",E,"Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],["into",[R[923]]],[R[923]]],["zlibencoder"]]],[11,"finish",E,R[932],5,[[],[R[48]]]],[11,"reset",E,R[933],5,[[["w"],["self"]],[R[48]]]],[11,"checksum",E,"Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"p":[[3,R[934]],[4,R[935]],[4,R[936]],[4,R[937]],[3,R[938]],[3,R[939]]]};
searchIndex["docopt"]={"doc":"Docopt for Rust. This implementation conforms to the…","i":[[3,"ArgvMap","docopt","A map containing matched values from command line arguments.",N,N],[3,R[431],E,"Deserializer for `ArgvMap` into your own `Deserialize`able…",N,N],[3,"Docopt",E,"The main Docopt type, which is constructed with a Docopt…",N,N],[4,"Error",E,"Represents the different types of Docopt errors.",N,N],[13,"Usage",E,"Parsing the usage string failed.",0,N],[13,"Argv",E,"Parsing the argv specified failed.",0,N],[13,"NoMatch",E,"The given argv parsed successfully, but it did not match…",0,N],[13,R[510],E,"This indicates a problem deserializing a successful argv…",0,N],[13,"WithProgramUsage",E,"Parsing failed, and the program usage should be printed…",0,N],[13,"Help",E,R[2105],0,N],[13,"Version",E,R[2105],0,N],[4,"Value",E,"A matched command line value.",N,N],[13,"Switch",E,"A boolean value from a flag that has no argument.",1,N],[13,"Counted",E,"The number of occurrences of a repeated flag.",1,N],[13,"Plain",E,"A positional or flag argument.",1,N],[13,"List",E,"A List of positional or flag arguments.",1,N],[11,"fatal",E,"Return whether this was a fatal error or not.",0,[[["self"]],["bool"]]],[11,"exit",E,"Print this error and immediately exit the program.",0,[[["self"]]]],[11,"new",E,"Parse the Docopt usage string given.",2,[[["s"]],[[R[48],["docopt","error"]],["error"],["docopt"]]]],[11,R[418],E,"Parse and deserialize the given argv.",2,[[["self"]],[[R[48],["error"]],["error"]]]],[11,"parse",E,"Parse command line arguments and try to match them against…",2,[[["self"]],[["error"],[R[48],["argvmap","error"]],["argvmap"]]]],[11,"argv",E,"Set the argv to be used for Docopt parsing.",2,[[["i"]],["docopt"]]],[11,"options_first",E,"Enables the \"options first\" Docopt behavior.",2,[[["bool"]],["docopt"]]],[11,"help",E,"Enables automatic handling of `--help`.",2,[[["bool"]],["docopt"]]],[11,R[9],E,"Enables automatic handling of `--version`.",2,[[["string"],["option",["string"]]],["docopt"]]],[11,R[418],E,"Tries to deserialize the map of values into a struct.",3,[[],[[R[418]],[R[48],["error"]],["error"]]]],[11,"get_bool",E,R[2106],3,[[["str"],["self"]],["bool"]]],[11,"get_count",E,R[2106],3,[[["str"],["self"]],["u64"]]],[11,"get_str",E,R[2106],3,[[["str"],["self"]],["str"]]],[11,"get_vec",E,R[2106],3,[[["str"],["self"]],[["str"],["vec",["str"]]]]],[11,"find",E,"Return the raw value corresponding to some `key`.",3,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"len",E,"Return the number of values, not including synonyms.",3,[[["self"]],["usize"]]],[11,"as_bool",E,"Returns the value as a bool.",1,[[["self"]],["bool"]]],[11,"as_count",E,"Returns the value as a count of the number of times it…",1,[[["self"]],["u64"]]],[11,"as_str",E,"Returns the value as a string.",1,[[["self"]],["str"]]],[11,"as_vec",E,"Returns the value as a list of strings.",1,[[["self"]],[["str"],["vec",["str"]]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"clone",E,E,2,[[["self"]],["docopt"]]],[11,"clone",E,E,3,[[["self"]],["argvmap"]]],[11,"clone",E,E,1,[[["self"]],["value"]]],[11,"eq",E,E,1,[[["value"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["value"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"custom",E,E,0,[[["display"]],["self"]]]],"p":[[4,"Error"],[4,"Value"],[3,"Docopt"],[3,"ArgvMap"],[3,R[431]]]};
searchIndex["dtoa"]={"doc":E,"i":[[5,"write","dtoa",E,N,[[["floating"],["write"]],[[R[48],["usize"]],["usize"]]]],[8,"Floating",E,E,N,N],[10,"write",E,E,0,[[["write"]],[[R[48],["usize"]],["usize"]]]],[14,"diyfp",E,E,N,N],[14,"dtoa",E,E,N,N]],"p":[[8,"Floating"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left",E,"A value of type `L`.",0,N],[13,"Right",E,"A value of type `R`.",0,N],[11,"is_left",E,"Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right",E,"Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left",E,"Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right",E,"Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref",E,"Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut",E,"Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip",E,"Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left",E,R[362],0,[[["f"]],["either"]]],[11,"map_right",E,R[363],0,[[["f"]],["either"]]],[11,"either",E,"Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],[T]]],[11,"either_with",E,"Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],[T]]],[11,"left_and_then",E,R[362],0,[[["f"]],["either"]]],[11,"right_and_then",E,R[363],0,[[["f"]],["either"]]],[11,R[364],E,"Convert the inner value to an iterator.",0,[[],["either"]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[364],E,E,0,[[],["i"]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"into",E,E,0,[[],[R[48]]]],[11,"from",E,E,0,[[[R[48]]],["self"]]],[11,"next",E,E,0,[[["self"]],["option"]]],[11,R[425],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],["option"]]],[11,"nth",E,E,0,[[["self"],["usize"]],["option"]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[746],E,E,0,[[["self"]],["option"]]],[11,"clone",E,E,0,[[["self"]],["either"]]],[11,"cmp",E,E,0,[[["self"],["either"]],[R[313]]]],[11,"eq",E,E,0,[[["self"],["either"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["either"]],["bool"]]],[11,R[314],E,E,0,[[["self"],["either"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"le",E,E,0,[[["self"],["either"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["either"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[368],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[256],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read",E,E,0,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read_to_end",E,E,0,[[["vec"],["self"]],[[R[48],["usize"]],["usize"]]]],[11,"write",E,E,0,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[48]]]],[11,"fill_buf",E,E,0,[[["self"]],[R[48]]]],[11,"consume",E,E,0,[[["self"],["usize"]]]]],"p":[[4,"Either"]]};
searchIndex["enum_primitive"]={"doc":"This crate exports a macro `enum_from_primitive!` that…","i":[[4,"Option","enum_primitive","The `Option` type. See the module level documentation for…",N,N],[13,"None",E,"No value",0,N],[13,"Some",E,"Some value `T`",0,N],[8,R[191],E,R[785],N,N],[11,R[786],E,R[787],1,[[["isize"]],["option"]]],[11,"from_i8",E,R[788],1,[[["i8"]],["option"]]],[11,"from_i16",E,R[789],1,[[["i16"]],["option"]]],[11,R[2031],E,R[790],1,[[["i32"]],["option"]]],[10,R[1587],E,R[791],1,[[["i64"]],["option"]]],[11,R[689],E,R[792],1,[[["usize"]],["option"]]],[11,"from_u8",E,R[793],1,[[["u8"]],["option"]]],[11,"from_u16",E,R[794],1,[[["u16"]],["option"]]],[11,R[795],E,R[796],1,[[["u32"]],["option"]]],[10,R[1588],E,R[797],1,[[["u64"]],["option"]]],[11,R[1590],E,R[798],1,[[["f32"]],["option"]]],[11,R[1589],E,R[799],1,[[["f64"]],["option"]]],[14,"enum_from_primitive_impl_ty",E,R[777],N,N],[14,"enum_from_primitive_impl",E,R[777],N,N],[14,"enum_from_primitive",E,"Wrap this macro around an `enum` declaration to get an…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[364],E,E,0,[[],["i"]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"product",E,R[779],0,[[["i"]],["option"]]],[11,"into_result",E,E,0,[[],[[R[48],[R[778]]],[R[778]]]]],[11,"from_ok",E,E,0,[[[T]],["option"]]],[11,"from_error",E,E,0,[[[R[778]]],["option"]]],[11,"from",E,E,0,[[["option"]],[["option"],[T]]]],[11,"from",E,E,0,[[[T]],["option"]]],[11,"from",E,E,0,[[["option"]],[["option"],[T]]]],[11,"eq",E,E,0,[[["option"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["option"],["self"]],["bool"]]],[11,R[744],E,"Returns [`None`][Option::None].",0,[[],["option"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"cmp",E,E,0,[[["option"],["self"]],[R[313]]]],[11,R[784],E,"Takes each element in the [`Iterator`]: if it is…",0,[[["i"]],["option"]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"sum",E,R[779],0,[[["i"]],["option"]]],[11,"clone",E,E,0,[[["self"]],["option"]]],[11,"clone_from",E,E,0,[[["self"],["option"]]]],[11,R[314],E,E,0,[[["option"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,0,[[["option"],["self"]],["bool"]]],[11,"le",E,E,0,[[["option"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["option"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["option"],["self"]],["bool"]]],[11,R[364],E,"Returns a consuming iterator over the possibly contained…",0,[[],[R[800]]]],[11,"is_some",E,"Returns `true` if the option is a [`Some`] value.",0,[[["self"]],["bool"]]],[11,"is_none",E,"Returns `true` if the option is a [`None`] value.",0,[[["self"]],["bool"]]],[11,R[801],E,"Returns `true` if the option is a [`Some`] value…",0,[[["self"],[U]],["bool"]]],[11,"as_ref",E,"Converts from `&Option<T>` to `Option<&T>`.",0,[[["self"]],[[T],["option"]]]],[11,"as_mut",E,"Converts from `&mut Option<T>` to `Option<&mut T>`.",0,[[["self"]],[[T],["option"]]]],[11,"as_pin_ref",E,"Converts from [`Pin`]`<&Option<T>>` to…",0,[[["option"],["pin",["option"]]],[["pin"],["option",["pin"]]]]],[11,"as_pin_mut",E,"Converts from [`Pin`]`<&mut Option<T>>` to…",0,[[["pin",["option"]],["option"]],[["pin"],["option",["pin"]]]]],[11,"expect",E,"Unwraps an option, yielding the content of a [`Some`].",0,[[["str"]],[T]]],[11,"unwrap",E,"Moves the value `v` out of the `Option<T>` if it is…",0,[[],[T]]],[11,"unwrap_or",E,"Returns the contained value or a default.",0,[[[T]],[T]]],[11,"unwrap_or_else",E,"Returns the contained value or computes it from a closure.",0,[[["f"]],[T]]],[11,"map",E,"Maps an `Option<T>` to `Option<U>` by applying a function…",0,[[["f"]],["option"]]],[11,"map_or",E,R[780],0,[[[U],["f"]],[U]]],[11,"map_or_else",E,R[780],0,[[["d"],["f"]],[U]]],[11,"ok_or",E,R[781],0,[[["e"]],[R[48]]]],[11,"ok_or_else",E,R[781],0,[[["f"]],[R[48]]]],[11,"iter",E,"Returns an iterator over the possibly contained value.",0,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns a mutable iterator over the possibly contained…",0,[[["self"]],["itermut"]]],[11,"and",E,R[782],0,[[["option"]],["option"]]],[11,"and_then",E,R[782],0,[[["f"]],["option"]]],[11,"filter",E,R[782],0,[[["p"]],["option"]]],[11,"or",E,"Returns the option if it contains a value, otherwise…",0,[[["option"]],["option"]]],[11,"or_else",E,"Returns the option if it contains a value, otherwise calls…",0,[[["f"]],["option"]]],[11,"xor",E,"Returns [`Some`] if exactly one of `self`, `optb` is…",0,[[["option"]],["option"]]],[11,"get_or_insert",E,"Inserts `v` into the option if it is [`None`], then…",0,[[["self"],[T]],[T]]],[11,"get_or_insert_with",E,"Inserts a value computed from `f` into the option if it is…",0,[[["self"],["f"]],[T]]],[11,"take",E,"Takes the value out of the option, leaving a [`None`] in…",0,[[["self"]],["option"]]],[11,"replace",E,"Replaces the actual value in the option by the value given…",0,[[["self"],[T]],["option"]]],[11,"copied",E,"Maps an `Option<&T>` to an `Option<T>` by copying the…",0,[[],["option"]]],[11,"copied",E,"Maps an `Option<&mut T>` to an `Option<T>` by copying the…",0,[[],["option"]]],[11,"cloned",E,"Maps an `Option<&T>` to an `Option<T>` by cloning the…",0,[[],["option"]]],[11,"cloned",E,"Maps an `Option<&mut T>` to an `Option<T>` by cloning the…",0,[[],["option"]]],[11,"expect_none",E,R[783],0,[[["str"]]]],[11,"unwrap_none",E,R[783],0,[[]]],[11,"unwrap_or_default",E,"Returns the contained value or a default",0,[[],[T]]],[11,"as_deref",E,"Converts from `Option<T>` (or `&Option<T>`) to…",0,[[["self"]],["option"]]],[11,"as_deref_mut",E,"Converts from `Option<T>` (or `&mut Option<T>`) to…",0,[[["self"]],["option"]]],[11,"transpose",E,"Transposes an `Option` of a [`Result`] into a [`Result`]…",0,[[],[[R[48],["option"]],["option"]]]],[11,"flatten",E,"Converts from `Option<Option<T>>` to `Option<T>`",0,[[],["option"]]]],"p":[[4,"Option"],[8,R[191]]]};
searchIndex["enum_set"]={"doc":"A structure for holding a set of enum variants.","i":[[3,"EnumSet","enum_set","A specialized set implementation to use enum types.",N,N],[3,"Iter",E,"An iterator over an `EnumSet`.",N,N],[8,"CLike",E,"An interface for casting C-like enum to `u32` and back.",N,N],[10,"to_u32",E,"Converts a C-like enum to a `u32`. The value must be `<=…",0,[[["self"]],["u32"]]],[10,R[795],E,"Converts a `u32` to a C-like enum. This method only needs…",0,[[["u32"]],["self"]]],[11,"new",E,"Returns an empty `EnumSet`.",1,[[],["self"]]],[11,"len",E,"Returns the number of elements in the set.",1,[[["self"]],["usize"]]],[11,R[677],E,"Checks if the set is empty.",1,[[["self"]],["bool"]]],[11,"clear",E,"Removes all elements from the set.",1,[[["self"]]]],[11,"is_disjoint",E,"Returns `true` if the set has no elements in common with…",1,[[["self"]],["bool"]]],[11,"is_superset",E,"Returns `true` if the set is a superset of `other`.",1,[[["self"]],["bool"]]],[11,"is_subset",E,"Returns `true` if the set is a subset of `other`.",1,[[["self"]],["bool"]]],[11,"union",E,"Returns the union of the set and `other`.",1,[[["self"]],["self"]]],[11,R[2244],E,"Returns the intersection of the set and `other`.",1,[[["self"]],["self"]]],[11,"difference",E,"Returns the difference between the set and `other`.",1,[[["self"]],["self"]]],[11,"symmetric_difference",E,"Returns the symmetric difference between the set and…",1,[[["self"]],["self"]]],[11,"insert",E,"Adds the given value to the set.",1,[[["self"],["e"]],["bool"]]],[11,"remove",E,"Removes a value from the set.",1,[[["self"],["e"]],["bool"]]],[11,R[801],E,"Returns `true` if the set contains the given value.",1,[[["self"],["e"]],["bool"]]],[11,"iter",E,"Returns an iterator over the set's elements.",1,[[["self"]],["iter"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"next",E,E,2,[[["self"]],["option"]]],[11,R[425],E,E,2,[[["self"]]]],[11,"extend",E,E,1,[[["self"],[R[400]]]]],[11,"clone",E,E,1,[[["self"]],[R[698]]]],[11,"clone",E,E,2,[[["self"]],["iter"]]],[11,R[744],E,E,1,[[],["self"]]],[11,"cmp",E,E,1,[[["self"],[R[698]]],[R[313]]]],[11,"eq",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,R[314],E,E,1,[[["self"],[R[698]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[698]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"sub",E,E,1,[[],["self"]]],[11,"bitand",E,E,1,[[],["self"]]],[11,"bitor",E,E,1,[[],["self"]]],[11,"bitxor",E,E,1,[[],["self"]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,R[784],E,E,1,[[[R[400]]],["self"]]]],"p":[[8,"CLike"],[3,"EnumSet"],[3,"Iter"]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","i":[[3,"Frame","gif",R[2124],N,N],[12,"delay",E,R[2125],0,N],[12,"dispose",E,R[2126],0,N],[12,R[2127],E,R[2128],0,N],[12,R[2129],E,R[2130],0,N],[12,"top",E,R[2131],0,N],[12,"left",E,R[2132],0,N],[12,"width",E,R[2133],0,N],[12,"height",E,R[2134],0,N],[12,R[2228],E,R[2135],0,N],[12,"palette",E,R[2136],0,N],[12,"buffer",E,R[2137],0,N],[3,R[962],E,"GIF decoder which supports streaming",N,N],[3,R[956],E,"Memory limit in bytes. `MemoryLimit::Some(0)` means that…",N,N],[12,"0",E,E,1,N],[3,"Reader",E,R[943],N,N],[3,R[391],E,R[943],N,N],[3,R[392],E,R[2138],N,N],[4,"Block",E,"Known GIF block types",N,N],[13,"Image",E,"Image block.",2,N],[13,R[944],E,"Extension block.",2,N],[13,"Trailer",E,"Image trailer.",2,N],[4,R[944],E,"Known GIF extensions",N,N],[13,"Text",E,"Text extension.",3,N],[13,"Control",E,"Control extension.",3,N],[13,"Comment",E,"Comment extension.",3,N],[13,"Application",E,"Application extension.",3,N],[4,R[957],E,"Disposal method",N,N],[13,"Any",E,"StreamingDecoder is not required to take any action.",4,N],[13,"Keep",E,"Do not dispose.",4,N],[13,"Background",E,"Restore to background color.",4,N],[13,"Previous",E,"Restore to previous.",4,N],[4,"Decoded",E,"Indicates whether a certain object has been decoded",N,N],[13,"Nothing",E,"Decoded nothing.",5,N],[13,"GlobalPalette",E,"Global palette.",5,N],[13,"BackgroundColor",E,"Index of the background color in the global palette.",5,N],[13,"Trailer",E,"Decoded the image trailer.",5,N],[13,"BlockStart",E,"The start of a block.",5,N],[13,"SubBlockFinished",E,"Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished",E,"Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame",E,"Decoded all information of the next frame. The returned…",5,N],[13,"Data",E,"Decoded some data of the current frame.",5,N],[13,"DataEnd",E,"No more data available the current frame.",5,N],[4,R[958],E,"Decoding error.",N,N],[13,"Format",E,"Returned if the image is found to be malformed.",6,N],[13,"Internal",E,"Internal (logic) error.",6,N],[13,"Io",E,"Wraps `std::io::Error`.",6,N],[4,R[959],E,"Output mode for the image data",N,N],[13,"RGBA",E,"The decoder expands the image data to 32bit RGBA. This…",7,N],[13,"Indexed",E,"The decoder returns the raw indexed data.",7,N],[4,R[960],E,"Configures how extensions should be handled",N,N],[13,"Save",E,"Saves all extention data",8,N],[13,"Skip",E,"Skips the data of unknown extensions and extracts the data…",8,N],[4,R[961],E,"Extension data.",N,N],[13,"Control",E,"Control extension. Use `ExtensionData::new_control_ext` to…",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay",E,"Frame delay.",9,N],[12,"trns",E,"Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat",E,"Number of repetitions",N,N],[13,"Finite",E,"Finite number of repetitions",10,N],[13,"Infinite",E,"Infinite number of repetitions",10,N],[11,"from_u8",E,R[946],4,[[["u8"]],[[R[945]],["option",[R[945]]]]]],[11,"from_u8",E,R[946],2,[[["u8"]],[["option",["block"]],["block"]]]],[11,"from_u8",E,R[946],3,[[["u8"]],[[R[947]],["option",[R[947]]]]]],[11,"from_rgba",E,R[2200],0,[[["u16"]],["frame"]]],[11,"from_rgb",E,R[2201],0,[[["u16"]],["frame"]]],[11,"new",E,"Creates a new streaming decoder",11,[[],[R[953]]]],[11,"update",E,"Updates the internal state of the decoder. ",11,[[["self"]],[[R[948]],[R[48],[R[948]]]]]],[11,"last_ext",E,"Returns the data of the last extension that has been…",11,[[["self"]]]],[11,"current_frame_mut",E,"Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,R[2276],E,"Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width",E,R[949],11,[[["self"]],["u16"]]],[11,"height",E,R[950],11,[[["self"]],["u16"]]],[11,"new",E,"Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads the logical screen descriptor including the global…",12,[[],[[R[48],["reader",R[948]]],["reader"],[R[948]]]]],[11,"next_frame_info",E,"Returns the next frame info",13,[[["self"]],[[R[48],["option",R[948]]],["option",["frame"]],[R[948]]]]],[11,"read_next_frame",E,"Reads the next frame from the image.",13,[[["self"]],[[R[48],["option",R[948]]],["option",["frame"]],[R[948]]]]],[11,"read_into_buffer",E,"Reads the data of the current frame into a pre-allocated…",13,[[["self"]],[[R[948]],[R[48],[R[948]]]]]],[11,"fill_buffer",E,"Reads data of the current frame into a pre-allocated…",13,[[["self"]],[[R[948]],[R[48],["bool",R[948]]],["bool"]]]],[11,R[1570],E,"Output buffer size",13,[[["self"]],["usize"]]],[11,R[965],E,"Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette",E,"Returns the color palette relevant for the current (next)…",13,[[["self"]],[[R[948]],[R[48],[R[948]]]]]],[11,"global_palette",E,"The global color palette",13,[[["self"]],["option"]]],[11,"width",E,R[949],13,[[["self"]],["u16"]]],[11,"height",E,R[950],13,[[["self"]],["u16"]]],[11,"bg_color",E,"Index of the background color in the global palette",13,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"new_control_ext",E,"Constructor for control extension data.",9,[[["u8"],[R[945]],["u16"],["option",["u8"]],["bool"]],[R[951]]]],[11,"new",E,"Creates a new encoder.",14,[[["w"],["u16"]],[R[48]]]],[11,"write_global_palette",E,"Writes the global color palette.",14,[[],[R[48]]]],[11,"write_frame",E,"Writes a frame to the image.",14,[[["self"],["frame"]],[R[48]]]],[11,"write_extension",E,"Writes an extension to the image.",14,[[[R[951]],["self"]],[R[48]]]],[11,"write_raw_extension",E,"Writes a raw extension to the image.",14,[[["self"],["u8"]],[R[48]]]],[8,R[963],E,"Implemented for objects that have parameters.",N,N],[11,"set",E,R[954],15,[[["self"],[R[955]]]]],[8,R[964],E,"Configuration parameter trait.",N,N],[16,"Result",E,"Result type of `set_param`.",16,N],[10,R[952],E,"Sets `self` as a parameter of `Object`.",16,[[["object"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[205],E,E,6,[[["self"]],["string"]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,R[952],E,E,8,[[[R[953]]]]],[11,R[952],E,E,7,[[["decoder"]]]],[11,R[952],E,E,1,[[["decoder"]]]],[11,R[952],E,E,10,[[["encoder"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,"from",E,E,6,[[["error"]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[945]]]],[11,"clone",E,E,2,[[["self"]],["block"]]],[11,"clone",E,E,3,[[["self"]],[R[947]]]],[11,"clone",E,E,0,[[["self"]],["frame"]]],[11,R[744],E,E,0,[[],["frame"]]],[11,"eq",E,E,4,[[["self"],[R[945]]],["bool"]]],[11,"eq",E,E,2,[[["block"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[947]]],["bool"]]],[11,"eq",E,E,8,[[["extensions"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["coloroutput"]],["bool"]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,6,[[["self"]],["str"]]],[11,"cause",E,E,6,[[["self"]],[["option",["error"]],["error"]]]],[11,"set",E,R[954],15,[[["self"],[R[955]]]]]],"p":[[3,"Frame"],[3,R[956]],[4,"Block"],[4,R[944]],[4,R[957]],[4,"Decoded"],[4,R[958]],[4,R[959]],[4,R[960]],[4,R[961]],[4,"Repeat"],[3,R[962]],[3,R[391]],[3,"Reader"],[3,R[392]],[8,R[963]],[8,R[964]]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",N,N],[12,"data",E,E,0,N],[3,"LumaA",E,"Grayscale colors + alpha channel",N,N],[12,"data",E,E,1,N],[3,"Rgb",E,"RGB colors",N,N],[12,"data",E,E,2,N],[3,"Rgba",E,"RGB colors + alpha channel",N,N],[12,"data",E,E,3,N],[3,"SubImage",E,"A View into another image",N,N],[3,"Pixels",E,"Immutable pixel iterator",N,N],[3,"MutPixels",E,"Mutable pixel iterator",N,N],[3,R[2222],E,"Generic image buffer",N,N],[3,"Frame",E,"A single animation frame",N,N],[3,"Frames",E,"Holds the frames of the animated image",N,N],[4,R[2229],E,"An enumeration over supported color types and their bit…",N,N],[13,"Gray",E,"Pixel is grayscale",4,N],[13,"RGB",E,"Pixel contains R, G and B channels",4,N],[13,"Palette",E,"Pixel is an index into a color palette",4,N],[13,"GrayA",E,"Pixel is grayscale with an alpha channel",4,N],[13,"RGBA",E,"Pixel is RGB with an alpha channel",4,N],[4,"ImageError",E,"An enumeration of Image errors",N,N],[13,"FormatError",E,"The Image is not formatted properly",5,N],[13,"DimensionError",E,"The Image's dimensions are either too small or too large",5,N],[13,"UnsupportedError",E,"The Decoder does not support this image format",5,N],[13,"UnsupportedColor",E,"The Decoder does not support this color type",5,N],[13,"NotEnoughData",E,"Not enough data was provided to the Decoder to decode the…",5,N],[13,"IoError",E,"An I/O Error occurred while decoding the image",5,N],[13,"ImageEnd",E,"The end of the image has been reached",5,N],[4,R[2213],E,"Result of a decoding process",N,N],[13,"U8",E,"A vector of unsigned bytes",6,N],[13,"U16",E,"A vector of unsigned words",6,N],[4,R[2214],E,R[2113],N,N],[13,"Nearest",E,R[2114],7,N],[13,"Triangle",E,R[2115],7,N],[13,"CatmullRom",E,R[2116],7,N],[13,"Gaussian",E,R[2117],7,N],[13,"Lanczos3",E,R[2118],7,N],[4,R[2215],E,"An enumeration of supported image formats. Not all formats…",N,N],[13,"PNG",E,"An Image in PNG Format",8,N],[13,"JPEG",E,"An Image in JPEG Format",8,N],[13,"GIF",E,"An Image in GIF Format",8,N],[13,"WEBP",E,"An Image in WEBP Format",8,N],[13,"PPM",E,"An Image in PPM Format",8,N],[13,"PNM",E,"An Image in general PNM Format",8,N],[13,"TIFF",E,"An Image in TIFF Format",8,N],[13,"TGA",E,"An Image in TGA Format",8,N],[13,"BMP",E,"An Image in BMP Format",8,N],[13,"ICO",E,"An Image in ICO Format",8,N],[13,"HDR",E,"An Image in Radiance HDR Format",8,N],[4,R[2216],E,"A Dynamic Image",N,N],[13,"ImageLuma8",E,"Each pixel in this image is 8-bit Luma",9,N],[13,"ImageLumaA8",E,"Each pixel in this image is 8-bit Luma with alpha",9,N],[13,"ImageRgb8",E,"Each pixel in this image is 8-bit Rgb",9,N],[13,"ImageRgba8",E,"Each pixel in this image is 8-bit Rgb with alpha",9,N],[5,"Luma",E,E,N,[[],[["luma"],[R[2107]]]]],[5,"LumaA",E,E,N,[[],[["lumaa"],[R[2107]]]]],[5,"Rgb",E,E,N,[[],[[R[2107]],["rgb"]]]],[5,"Rgba",E,E,N,[[],[[R[2107]],["rgba"]]]],[5,"open",E,"Open the image located at the path specified. The image's…",N,[[["p"]],[[R[2109],[R[2108]]],[R[2108]]]]],[5,"load",E,"Create a new image from a Reader",N,[[["bufread"],[R[2111]],["seek"]],[[R[2109],[R[2108]]],[R[2108]]]]],[5,"load_from_memory",E,R[2110],N,[[],[[R[2109],[R[2108]]],[R[2108]]]]],[5,"load_from_memory_with_format",E,R[2110],N,[[[R[2111]]],[[R[2109],[R[2108]]],[R[2108]]]]],[5,"guess_format",E,"Guess image format from memory block",N,[[],[[R[2111]],[R[2109],[R[2111]]]]]],[5,"save_buffer",E,"Saves the supplied buffer to a file at the path specified.",N,[[["u32"],[R[1581]],["p"]],[R[48]]]],[0,"math",E,"Mathematical helper functions and types.",N,N],[0,"utils",R[2112],"Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"]],["n"]]],[0,"nq",R[2112],"NEUQUANT Neural-Net quantization algorithm by Anthony…",N,N],[3,"NeuQuant",R[2165],"Neural network color quantizer",N,N],[11,"new",E,"Creates a new neural network and trains it with the…",10,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neural network and trains it with the…",10,[[["self"]]]],[11,"map_pixel",E,"Maps the pixel in-place to the best-matching color in the…",10,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map for `pixel`",10,[[["self"]],["usize"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,R[2214],"image::imageops",R[2113],N,N],[13,"Nearest",E,R[2114],7,N],[13,"Triangle",E,R[2115],7,N],[13,"CatmullRom",E,R[2116],7,N],[13,"Gaussian",E,R[2117],7,N],[13,"Lanczos3",E,R[2118],7,N],[5,"rotate90",E,"Rotate an image 90 degrees clockwise.",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"rotate180",E,"Rotate an image 180 degrees clockwise.",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"rotate270",E,"Rotate an image 270 degrees clockwise.",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"flip_horizontal",E,"Flip an image horizontally",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"flip_vertical",E,"Flip an image vertically",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"filter3x3",E,"Perform a 3x3 box filter on the supplied image. `kernel`…",N,[[["i"]],[["vec"],[R[2119],["vec"]]]]],[5,"resize",E,"Resize the supplied image to the specified dimensions.…",N,[[["i"],["u32"],[R[2148]]],[["vec"],[R[2119],["vec"]]]]],[5,"blur",E,"Performs a Gaussian blur on the supplied image. `sigma` is…",N,[[["i"],["f32"]],[["vec"],[R[2119],["vec"]]]]],[5,"unsharpen",E,"Performs an unsharpen mask on the supplied image. `sigma`…",N,[[["i"],["f32"],["i32"]],[["vec"],[R[2119],["vec"]]]]],[5,"crop",E,"Return a mutable view into an image",N,[[["i"],["u32"]],[["subimage"],["genericimage"]]]],[5,"overlay",E,"Overlay an image at a given coordinate (x, y)",N,[[["i"],["u32"],["i"]]]],[5,"replace",E,"Replace the contents of an image at a given coordinate (x,…",N,[[["i"],["u32"],["i"]]]],[0,"colorops",E,"Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel",R[2166],"A bi-level color map",N,N],[5,"grayscale",E,"Convert the supplied image to grayscale",N,[[["i"]],[["vec"],[R[2119],["luma","vec"]],["luma"]]]],[5,"invert",E,"Invert each pixel within the supplied image. This function…",N,[[["i"]]]],[5,"contrast",E,"Adjust the contrast of the supplied image. `contrast` is…",N,[[["i"],["f32"]],[["vec"],[R[2119],["vec"]]]]],[5,"brighten",E,"Brighten the supplied image. `value` is the amount to…",N,[[["i"],["i32"]],[["vec"],[R[2119],["vec"]]]]],[5,"huerotate",E,R[2149],N,[[["i"],["i32"]],[["vec"],[R[2119],["vec"]]]]],[5,"dither",E,"Reduces the colors of the image using the supplied…",N,[[[R[2119]],["map"]]]],[5,"index_colors",E,"Reduces the colors using the supplied `color_map` and…",N,[[[R[2119]],["map"]],[["luma",["u8"]],["vec",["u8"]],[R[2119],["luma","vec"]]]]],[8,"ColorMap",E,"A color map",N,N],[16,"Color",E,"The color type on which the map operates on",11,N],[10,"index_of",E,"Returns the index of the closed match of `color` in the…",11,[[["self"]],["usize"]]],[10,"map_color",E,"Maps `color` to the closest color in the color map.",11,[[["self"]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,R[2217],R[2167],"A Representation of a Webp Image format decoder.",N,N],[11,"new",E,"Create a new WebpDecoder from the Reader `r`. This…",12,[[["r"]],["webpdecoder"]]],[0,"vp8",E,"An implementation of the VP8 Video Codec",N,N],[3,"Frame",R[2168],"A Representation of the last decoded video frame",N,N],[12,"width",E,"The width of the luma plane",13,N],[12,"height",E,"The height of the luma plane",13,N],[12,"ybuf",E,"The luma plane of the frame",13,N],[12,R[2367],E,"Indicates whether this frame is a keyframe",13,N],[12,"for_display",E,"Indicates whether this frame is intended for display",13,N],[12,"pixel_type",E,"The pixel type of the frame as defined by Section 9.2 of…",13,N],[3,"VP8Decoder",E,"VP8 Decoder",N,N],[11,"new",E,"Create a new decoder. The reader must present a raw vp8…",14,[[["r"]],["vp8decoder"]]],[11,"decode_frame",E,"Decodes the current frame and returns a reference to it",14,[[["self"]],[["frame"],[R[48],["frame"]]]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder",R[2173],"PNM decoder",N,N],[4,"PNMSubtype",E,"Denotes the category of the magic number",N,N],[13,"Bitmap",E,"Magic numbers P1 and P4",15,N],[13,"Graymap",E,"Magic numbers P2 and P5",15,N],[13,"Pixmap",E,"Magic numbers P3 and P6",15,N],[13,"ArbitraryMap",E,"Magic number P7",15,N],[11,"new",E,R[2120],16,[[["r"]],[[R[2109],["pnmdecoder"]],["pnmdecoder"]]]],[11,"subtype",E,"Get the pnm subtype, depending on the magic constant…",16,[[["self"]],[R[2198]]]],[11,"encoding",E,"Whether samples are stored as binary or as decimal ascii",16,[[["self"]],["sampleencoding"]]],[0,"ppm","image","Encoding of portable pixmap Images",N,N],[3,"PPMEncoder",R[2175],"A representation of a PPM encoder.",N,N],[3,"PPMDecoder",E,"PPM decoder, restriction pnm type to ppm",N,N],[11,"new",E,"Create a new PPMEncoder from the Writer `w`.",17,[[["w"]],["ppmencoder"]]],[11,"encode",E,"Encode the buffer `im` as a PPM image. `width` and…",17,[[["u32"],[R[1581]],["self"]],[R[48]]]],[11,"new",E,"Create a new pnm decoder and asserts it is ppm",18,[[["r"]],[[R[2109],["ppmdecoder"]],["ppmdecoder"]]]],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder",R[2176],"PNG decoder",N,N],[3,"PNGEncoder",E,"PNG encoder",N,N],[11,"new",E,"Creates a new decoder that decodes from the stream `r`",19,[[["r"]],["pngdecoder"]]],[11,"new",E,R[2122],20,[[["w"]],["pngencoder"]]],[11,"encode",E,R[2121],20,[[["u32"],[R[1581]]],[R[48]]]],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder",R[2177],"An ico decoder",N,N],[3,"ICOEncoder",E,"ICO encoder",N,N],[11,"new",E,R[2120],21,[[["r"]],[[R[2109],["icodecoder"]],["icodecoder"]]]],[11,"new",E,R[2140],22,[[["w"]],["icoencoder"]]],[11,"encode",E,R[2121],22,[[["u32"],[R[1581]]],[R[48]]]],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,R[2219],R[2169],R[2227],N,N],[3,R[2218],E,"The representation of a JPEG encoder",N,N],[11,"new",E,R[2122],23,[[["w"]],[R[2123]]]],[11,"new_with_quality",E,"Create a new encoder that writes its output to `w`, and…",23,[[["w"],["u8"]],[R[2123]]]],[11,"encode",E,R[2121],23,[[["u32"],[R[1581]],["self"]],[R[48]]]],[11,"new",E,R[2120],24,[[["r"]],["jpegdecoder"]]],[0,"gif","image","Decoding of GIF Images",N,N],[3,"Frame",R[2171],R[2124],N,N],[12,"delay",E,R[2125],25,N],[12,"dispose",E,R[2126],25,N],[12,R[2127],E,R[2128],25,N],[12,R[2129],E,R[2130],25,N],[12,"top",E,R[2131],25,N],[12,"left",E,R[2132],25,N],[12,"width",E,R[2133],25,N],[12,"height",E,R[2134],25,N],[12,R[2228],E,R[2135],25,N],[12,"palette",E,R[2136],25,N],[12,"buffer",E,R[2137],25,N],[3,R[391],E,R[943],N,N],[3,R[392],E,R[2138],N,N],[11,"new",E,"Creates a new decoder that decodes the input steam `r`",26,[[["r"]],["decoder"]]],[11,"new",E,"Creates a new GIF encoder.",27,[[["w"]],["encoder"]]],[11,"encode",E,"Encodes a frame.",27,[[["frame"]],[R[2109]]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",N,N],[3,R[2220],R[2170],"The representation of a TIFF decoder",N,N],[11,"new",E,R[2120],28,[[["r"]],[[R[2109],[R[2139]]],[R[2139]]]]],[11,"init",E,"Initializes the decoder.",28,[[],[[R[2109],[R[2139]]],[R[2139]]]]],[11,"next_image",E,"Reads in the next image. If there is no further image in…",28,[[],[[R[2109],[R[2139]]],[R[2139]]]]],[11,"more_images",E,"Returns `true` if there is at least one more image…",28,[[["self"]],["bool"]]],[11,"byte_order",E,"Returns the byte_order",28,[[["self"]],["byteorder"]]],[11,"read_short",E,"Reads a TIFF short value",28,[[["self"]],[["u16"],[R[48],["u16","error"]],["error"]]]],[11,"read_long",E,"Reads a TIFF long value",28,[[["self"]],[[R[48],["u32","error"]],["u32"],["error"]]]],[11,"read_offset",E,"Reads a TIFF IFA offset/value field",28,[[["self"]],[[R[48],["error"]],["error"]]]],[11,"goto_offset",E,"Moves the cursor to the specified offset",28,[[["self"],["u32"]],[R[48]]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder",R[2178],"The representation of a TGA decoder",N,N],[11,"new",E,R[2120],29,[[["r"]],["tgadecoder"]]],[0,"bmp","image","Decoding and Encoding of BMP Images",N,N],[3,"BMPEncoder",R[2179],"The representation of a BMP encoder.",N,N],[3,"BMPDecoder",E,"A bmp decoder",N,N],[11,"new",E,R[2140],30,[[["w"]],["self"]]],[11,"encode",E,R[2121],30,[[["u32"],[R[1581]],["self"]],[R[48]]]],[11,"new",E,R[2120],31,[[["r"]],["bmpdecoder"]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter",R[2180],"Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder",E,"An Radiance HDR decoder",N,N],[3,"RGBE8Pixel",E,"Refer to wikipedia",N,N],[12,"c",E,"Color components",32,N],[12,"e",E,"Exponent",32,N],[3,R[2226],E,"Scanline buffered pixel by pixel iterator",N,N],[3,R[2221],E,"Metadata for Radiance HDR image",N,N],[12,"width",E,"Width of decoded image. It could be either scanline…",33,N],[12,"height",E,"Height of decoded image. It depends on orientation too.",33,N],[12,"orientation",E,"Orientation matrix. For standard orientation it is…",33,N],[12,"exposure",E,"Divide color values by exposure to get to get physical…",33,N],[12,"color_correction",E,"Divide color values by corresponding tuple member (r, g,…",33,N],[12,"pixel_aspect_ratio",E,"Pixel height divided by pixel width",33,N],[12,"custom_attributes",E,"All lines contained in image header are put here. Ordering…",33,N],[3,"HDREncoder",E,"Radiance HDR encoder",N,N],[5,"rgbe8",E,"Creates `RGBE8Pixel` from components",N,[[["u8"]],[R[2143]]]],[5,"read_raw_file",E,"Helper function for reading raw 3-channel f32 images",N,[[["path"],["asref",["path"]]],[["vec",["rgb"]],[R[48],["vec"]]]]],[5,"to_rgbe8",E,"Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["rgb",["f32"]],["f32"]],[R[2143]]]],[11,"new",E,"Creates adapter",34,[[["r"]],[[R[2109],[R[2141]]],[R[2141]]]]],[11,"new_nonstrict",E,"Allows reading old Radiance HDR images",34,[[["r"]],[[R[2109],[R[2141]]],[R[2141]]]]],[11,"to_hdr",E,"Converts `RGBE8Pixel` into `Rgb<f32>` linearly",32,[[],[["rgb",["f32"]],["f32"]]]],[11,"to_ldr",E,"Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",32,[[],[["zero"],[R[2107]],["rgb"]]]],[11,"to_ldr_scale_gamma",E,"Converts RGBE8Pixel into Rgb using provided scale and gamma",32,[[["f32"]],[["zero"],[R[2107]],["rgb"]]]],[11,"new",E,"Reads Radiance HDR image header from stream `r` if the…",35,[[["r"]],[[R[2109],[R[2142]]],[R[2142]]]]],[11,"with_strictness",E,"Reads Radiance HDR image header from stream `reader`, if…",35,[[["bool"],["r"]],[[R[2109],[R[2142]]],[R[2142]]]]],[11,R[886],E,"Returns file metadata. Refer to `HDRMetadata` for details.",35,[[["self"]],[R[2197]]]],[11,"read_image_native",E,"Consumes decoder and returns a vector of RGBE8 pixels",35,[[],[[R[2109],["vec"]],["vec",[R[2143]]]]]],[11,"read_image_transform",E,"Consumes decoder and returns a vector of transformed pixels",35,[[["fn"],["send"],["sync"]],[[R[2109],["vec"]],["vec"]]]],[11,"read_image_ldr",E,"Consumes decoder and returns a vector of Rgb pixels. scale…",35,[[],[[R[2109],["vec"]],["vec",["rgb"]]]]],[11,"read_image_hdr",E,"Consumes decoder and returns a vector of Rgb pixels.",35,[[],[[R[2109],["vec"]],["vec",["rgb"]]]]],[11,"new",E,"Creates encoder",36,[[["w"]],["hdrencoder"]]],[11,"encode",E,"Encodes the image `data` that has dimensions `width` and…",36,[[["usize"]],[R[48]]]],[17,"SIGNATURE",E,"Radiance HDR file signature",N,N],[11,"new","image","Construct a new subimage",37,[[["i"],["u32"]],["subimage"]]],[11,"inner_mut",E,"Returns a mutable reference to the wrapped image.",37,[[["self"]],["i"]]],[11,"change_bounds",E,"Change the coordinates of this subimage.",37,[[["self"],["u32"]]]],[11,"to_image",E,"Convert this subimage to an ImageBuffer",37,[[["self"]],[["vec"],[R[2119],["vec"]]]]],[11,"new_luma8",E,"Creates a dynamic image backed by a buffer of grey pixels.",9,[[["u32"]],[R[2108]]]],[11,"new_luma_a8",E,"Creates a dynamic image backed by a buffer of grey pixels…",9,[[["u32"]],[R[2108]]]],[11,"new_rgb8",E,"Creates a dynamic image backed by a buffer of RGB pixels.",9,[[["u32"]],[R[2108]]]],[11,"new_rgba8",E,"Creates a dynamic image backed by a buffer of RGBA pixels.",9,[[["u32"]],[R[2108]]]],[11,"to_rgb",E,"Returns a copy of this image as an RGB image.",9,[[["self"]],["rgbimage"]]],[11,"to_rgba",E,"Returns a copy of this image as an RGBA image.",9,[[["self"]],[R[2144]]]],[11,"to_luma",E,"Returns a copy of this image as a Luma image.",9,[[["self"]],[R[2145]]]],[11,R[2161],E,"Returns a copy of this image as a LumaA image.",9,[[["self"]],[R[2146]]]],[11,"crop",E,"Return a cut out of this image delimited by the bounding…",9,[[["self"],["u32"]],[R[2108]]]],[11,"as_rgb8",E,"Return a reference to an 8bit RGB image",9,[[["self"]],[["option",["rgbimage"]],["rgbimage"]]]],[11,"as_mut_rgb8",E,"Return a mutable reference to an 8bit RGB image",9,[[["self"]],[["rgbimage"],["option",["rgbimage"]]]]],[11,"as_rgba8",E,"Return a reference to an 8bit RGBA image",9,[[["self"]],[["option",[R[2144]]],[R[2144]]]]],[11,"as_mut_rgba8",E,"Return a mutable reference to an 8bit RGBA image",9,[[["self"]],[["option",[R[2144]]],[R[2144]]]]],[11,"as_luma8",E,"Return a reference to an 8bit Grayscale image",9,[[["self"]],[["option",[R[2145]]],[R[2145]]]]],[11,"as_mut_luma8",E,"Return a mutable reference to an 8bit Grayscale image",9,[[["self"]],[[R[2145]],["option",[R[2145]]]]]],[11,"as_luma_alpha8",E,"Return a reference to an 8bit Grayscale image with an…",9,[[["self"]],[["option",[R[2146]]],[R[2146]]]]],[11,"as_mut_luma_alpha8",E,"Return a mutable reference to an 8bit Grayscale image with…",9,[[["self"]],[["option",[R[2146]]],[R[2146]]]]],[11,"raw_pixels",E,"Return this image's pixels as a byte vector.",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"color",E,"Return this image's color type.",9,[[["self"]],[R[1581]]]],[11,"grayscale",E,"Return a grayscale version of this image.",9,[[["self"]],[R[2108]]]],[11,"invert",E,"Invert the colors of this image. This method operates…",9,[[["self"]]]],[11,"resize",E,R[2147],9,[[["u32"],["self"],[R[2148]]],[R[2108]]]],[11,"resize_exact",E,R[2147],9,[[["u32"],["self"],[R[2148]]],[R[2108]]]],[11,"blur",E,"Performs a Gaussian blur on this image. `sigma` is a…",9,[[["f32"],["self"]],[R[2108]]]],[11,"unsharpen",E,"Performs an unsharpen mask on this image. `sigma` is the…",9,[[["f32"],["self"],["i32"]],[R[2108]]]],[11,"filter3x3",E,"Filters this image with the specified 3x3 kernel.",9,[[["self"]],[R[2108]]]],[11,"adjust_contrast",E,"Adjust the contrast of this image. `contrast` is the…",9,[[["f32"],["self"]],[R[2108]]]],[11,"brighten",E,"Brighten the pixels of this image. `value` is the amount…",9,[[["self"],["i32"]],[R[2108]]]],[11,"huerotate",E,R[2149],9,[[["self"],["i32"]],[R[2108]]]],[11,"flipv",E,"Flip this image vertically",9,[[["self"]],[R[2108]]]],[11,"fliph",E,"Flip this image horizontally",9,[[["self"]],[R[2108]]]],[11,"rotate90",E,"Rotate this image 90 degrees clockwise.",9,[[["self"]],[R[2108]]]],[11,"rotate180",E,"Rotate this image 180 degrees clockwise.",9,[[["self"]],[R[2108]]]],[11,"rotate270",E,"Rotate this image 270 degrees clockwise.",9,[[["self"]],[R[2108]]]],[11,"save",E,"Encode this image and write it to `w`",9,[[["w"],["self"],[R[2111]]],[R[2109]]]],[11,"from_raw",E,"Contructs a buffer from a generic container (for example a…",38,[[["u32"],["container"]],[[R[2119]],["option",[R[2119]]]]]],[11,"into_raw",E,"Returns the underlying raw buffer",38,[[],["container"]]],[11,R[2154],E,R[2155],38,[[["self"]]]],[11,"width",E,R[2156],38,[[["self"]],["u32"]]],[11,"height",E,R[2157],38,[[["self"]],["u32"]]],[11,"pixels",E,"Returns an iterator over the pixels of this image.",38,[[["self"]],["pixels"]]],[11,"enumerate_pixels",E,R[2150],38,[[["self"]],["enumeratepixels"]]],[11,R[2182],E,"Gets a reference to the pixel at location `(x, y)`",38,[[["u32"],["self"]],["p"]]],[11,R[2209],E,"Returns an iterator over the mutable pixels of this image.",38,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut",E,R[2150],38,[[["self"]],["enumeratepixelsmut"]]],[11,R[2158],E,"Gets a reference to the mutable pixel at location `(x, y)`",38,[[["self"],["u32"]],["p"]]],[11,R[2183],E,"Puts a pixel at location `(x, y)`",38,[[["self"],["u32"],["p"]]]],[11,"save",E,"Saves the buffer to a file at the path specified.",38,[[["q"],["self"]],[R[48]]]],[11,"new",E,"Creates a new image buffer based on a `Vec<P::Subpixel>`.",38,[[["u32"]],[[R[2119],["vec"]],["vec"]]]],[11,"from_pixel",E,"Constructs a new ImageBuffer by copying a pixel",38,[[["u32"],["p"]],[[R[2119],["vec"]],["vec"]]]],[11,"from_fn",E,"Constructs a new ImageBuffer by repeated application of…",38,[[["u32"],["f"]],[[R[2119],["vec"]],["vec"]]]],[11,"from_vec",E,"Creates an image buffer out of an existing buffer. Returns…",38,[[["vec"],["u32"]],[[R[2119],["vec"]],["option",[R[2119]]]]]],[11,"into_vec",E,"Consumes the image buffer and returns the underlying data…",38,[[],["vec"]]],[11,"new",E,"Contructs a new frame iterator",39,[[["frame"],["vec",["frame"]]],["frames"]]],[11,"new",E,R[2151],40,[[[R[2144]]],["frame"]]],[11,"from_parts",E,R[2151],40,[[[R[2144]],["u32"],["u16"],["ratio",["u16"]]],["frame"]]],[11,"delay",E,"Delay of this frame",40,[[["self"]],[["u16"],["ratio",["u16"]]]]],[11,"buffer",E,R[2152],40,[[["self"]],[R[2144]]]],[11,"into_buffer",E,R[2152],40,[[],[R[2144]]]],[11,"left",E,"Returns the x offset",40,[[["self"]],["u32"]]],[11,"top",E,"Returns the y offset",40,[[["self"]],["u32"]]],[6,"ImageResult",E,"Result of an image decoding/encoding process",N,N],[6,"RgbImage",E,"Sendable Rgb image buffer",N,N],[6,"RgbaImage",E,"Sendable Rgb + alpha channel image buffer",N,N],[6,"GrayImage",E,"Sendable grayscale image buffer",N,N],[6,"GrayAlphaImage",E,"Sendable grayscale + alpha channel image buffer",N,N],[8,R[2223],E,"The trait that all decoders implement",N,N],[10,R[2154],E,"Returns a tuple containing the width and height of the image",41,[[["self"]],[R[2109]]]],[10,R[1581],E,"Returns the color type of the image e.g. RGB(8) (8bit RGB)",41,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[10,"row_len",E,"Returns the length in bytes of one decoded row of the image",41,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[10,R[2172],E,"Reads one row from the image into `buf` and returns the…",41,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[10,R[2174],E,"Decodes the entire image and return it as a Vector",41,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2202],E,R[2203],41,[[["self"]],[["bool"],[R[2109],["bool"]]]]],[11,R[2204],E,R[2205],41,[[],[[R[2109],["frames"]],["frames"]]]],[11,"load_rect",E,R[2206],41,[[["self"],["u32"]],[[R[2109],["vec"]],["vec",["u8"]]]]],[8,R[2224],E,"A trait for manipulating images.",N,N],[16,"Pixel",E,"The type of pixel.",42,N],[10,R[2154],E,R[2155],42,[[["self"]]]],[11,"width",E,R[2156],42,[[["self"]],["u32"]]],[11,"height",E,R[2157],42,[[["self"]],["u32"]]],[10,"bounds",E,"The bounding rectangle of this image.",42,[[["self"]]]],[11,"in_bounds",E,R[2207],42,[[["u32"],["self"]],["bool"]]],[10,R[2182],E,R[2159],42,[[["u32"],["self"]]]],[10,R[2158],E,R[2160],42,[[["self"],["u32"]]]],[11,R[2184],E,R[2159],42,[[["u32"],["self"]]]],[10,R[2183],E,"Put a pixel at location (x, y)",42,[[["self"],["u32"]]]],[11,R[2185],E,R[2160],42,[[["self"],["u32"]]]],[10,R[2181],E,R[2186],42,[[["self"],["u32"]]]],[11,"pixels",E,R[2208],42,[[["self"]],["pixels"]]],[11,R[2209],E,R[2210],42,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[2211],42,[[["u32"],["self"],["o"]],["bool"]]],[11,"sub_image",E,R[2212],42,[[["self"],["u32"]],["subimage"]]],[8,"Pixel",E,"A generalized pixel.",N,N],[16,"Subpixel",E,"The underlying subpixel type.",43,N],[10,R[2187],E,"Returns the number of channels of this pixel type.",43,[[],["u8"]]],[10,"channels",E,"Returns the components as a slice.",43,[[["self"]]]],[10,R[2189],E,"Returns the components as a mutable slice",43,[[["self"]]]],[10,R[2188],E,"Returns a string that can help to interpret the meaning…",43,[[],["str"]]],[10,R[2194],E,"Returns the ColorType for this pixel format",43,[[],[R[1581]]]],[10,R[2195],E,"Returns the channels of this pixel as a 4 tuple. If the…",43,[[["self"]]]],[10,R[2190],E,"Construct a pixel from the 4 channels a, b, c and d. If…",43,[[],["self"]]],[10,R[674],E,"Returns a view into a slice.",43,[[],["self"]]],[10,R[2191],E,"Returns mutable view into a mutable slice.",43,[[],["self"]]],[10,"to_rgb",E,"Convert this pixel to RGB",43,[[["self"]],["rgb"]]],[10,"to_rgba",E,"Convert this pixel to RGB with an alpha channel",43,[[["self"]],["rgba"]]],[10,"to_luma",E,"Convert this pixel to luma",43,[[["self"]],["luma"]]],[10,R[2161],E,"Convert this pixel to luma with an alpha channel",43,[[["self"]],["lumaa"]]],[10,"map",E,R[2162],43,[[["self"],["f"]],["self"]]],[10,"apply",E,R[2162],43,[[["self"],["f"]]]],[10,R[2192],E,R[2163],43,[[["g"],["self"],["f"]],["self"]]],[10,R[2193],E,R[2163],43,[[["self"],["f"],["g"]]]],[10,"map2",E,R[2164],43,[[["self"],["f"]],["self"]]],[10,"apply2",E,R[2164],43,[[["self"],["self"],["f"]]]],[10,"invert",E,"Invert this pixel",43,[[["self"]]]],[10,"blend",E,"Blend the color of a given pixel into ourself, taking into…",43,[[["self"],["self"]]]],[8,R[2225],E,"Provides color conversions for whole image buffers.",N,N],[10,"convert",E,"Converts `self` to a buffer of type T",44,[[["self"]],[T]]],[8,"Primitive",E,"Primitive trait from old stdlib",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[364],E,E,45,[[],["i"]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[364],E,E,46,[[],["i"]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[364],E,E,39,[[],["i"]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[205],E,E,5,[[["self"]],["string"]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",R[2165],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",R[2166],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",R[2167],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",R[2168],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",R[2173],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",R[2175],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",R[2176],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",R[2177],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",R[2169],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",R[2171],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",R[2170],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",R[2178],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",R[2179],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",R[2180],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[364],E,E,35,[[],["i"]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[364],E,E,48,[[],["i"]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"clone",R[2171],E,25,[[["self"]],["frame"]]],[11,R[744],E,E,25,[[],["frame"]]],[11,"fmt",E,E,25,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"index_of",R[2166],E,47,[[["self"],["luma"]],["usize"]]],[11,"map_color",E,E,47,[[["self"],["luma"]]]],[11,"index_of",R[2165],E,10,[[["self"],["rgba"]],["usize"]]],[11,"map_color",E,E,10,[[["rgba"],["self"]]]],[11,R[2154],R[2167],E,12,[[["self"]],[R[2109]]]],[11,R[1581],E,E,12,[[["self"]],[[R[2109],[R[1581]]],[R[1581]]]]],[11,"row_len",E,E,12,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,12,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,12,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2173],E,16,[[["self"]],[R[2109]]]],[11,R[1581],E,E,16,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,16,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,16,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,16,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2175],E,18,[[["self"]],[R[2109]]]],[11,R[1581],E,E,18,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,18,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,18,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,18,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2176],E,19,[[["self"]],[R[2109]]]],[11,R[1581],E,E,19,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,19,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,19,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,19,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2177],E,21,[[["self"]],[R[2109]]]],[11,R[1581],E,E,21,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,21,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,21,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,21,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2169],E,24,[[["self"]],[R[2109]]]],[11,R[1581],E,E,24,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,24,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,24,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,24,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2171],E,26,[[["self"]],[R[2109]]]],[11,R[1581],E,E,26,[[["self"]],[[R[2109],[R[1581]]],[R[1581]]]]],[11,"row_len",E,E,26,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,26,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,26,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2170],E,28,[[["self"]],[R[2109]]]],[11,R[1581],E,E,28,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,28,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,28,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,28,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2178],E,29,[[["self"]],[R[2109]]]],[11,R[1581],E,E,29,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,29,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,29,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,29,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2179],E,31,[[["self"]],[R[2109]]]],[11,R[1581],E,E,31,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,31,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,31,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,31,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],R[2180],E,34,[[["self"]],[R[2109]]]],[11,R[1581],E,E,34,[[["self"]],[[R[1581]],[R[2109],[R[1581]]]]]],[11,"row_len",E,E,34,[[["self"]],[[R[2109],["usize"]],["usize"]]]],[11,R[2172],E,E,34,[[["self"]],[["u32"],[R[2109],["u32"]]]]],[11,R[2174],E,E,34,[[["self"]],[[R[2153]],[R[2109],[R[2153]]]]]],[11,R[2154],"image",E,37,[[["self"]]]],[11,"bounds",E,E,37,[[["self"]]]],[11,R[2182],E,E,37,[[["u32"],["self"]]]],[11,R[2183],E,E,37,[[["self"],["u32"]]]],[11,R[2181],E,"DEPRECATED: This method will be removed. Blend the pixel…",37,[[["self"],["u32"]]]],[11,R[2158],E,E,37,[[["self"],["u32"]]]],[11,R[2154],E,E,9,[[["self"]]]],[11,"bounds",E,E,9,[[["self"]]]],[11,R[2182],E,E,9,[[["u32"],["self"]],[["rgba",["u8"]],["u8"]]]],[11,R[2183],E,E,9,[[["u32"],["self"],["rgba",["u8"]],["u8"]]]],[11,R[2181],E,"DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",9,[[["u32"],["self"],["rgba",["u8"]],["u8"]]]],[11,R[2158],E,"DEPRECATED: Do not use is function: It is unimplemented!",9,[[["self"],["u32"]],["rgba"]]],[11,R[2154],E,E,38,[[["self"]]]],[11,"bounds",E,E,38,[[["self"]]]],[11,R[2182],E,E,38,[[["u32"],["self"]],["p"]]],[11,R[2158],E,E,38,[[["self"],["u32"]],["p"]]],[11,R[2184],E,"Returns the pixel located at (x, y), ignoring bounds…",38,[[["u32"],["self"]],["p"]]],[11,R[2183],E,E,38,[[["self"],["u32"],["p"]]]],[11,R[2185],E,"Puts a pixel at location (x, y), ignoring bounds checking.",38,[[["self"],["u32"],["p"]]]],[11,R[2181],E,R[2186],38,[[["self"],["u32"],["p"]]]],[11,R[2187],E,E,2,[[],["u8"]]],[11,R[2188],E,E,2,[[],["str"]]],[11,R[2194],E,E,2,[[],[R[1581]]]],[11,"channels",E,E,2,[[["self"]]]],[11,R[2189],E,E,2,[[["self"]]]],[11,R[2195],E,E,2,[[["self"]]]],[11,R[2190],E,E,2,[[[T]],["rgb"]]],[11,R[674],E,E,2,[[],["rgb"]]],[11,R[2191],E,E,2,[[],["rgb"]]],[11,"to_rgb",E,E,2,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,2,[[["self"]],["rgba"]]],[11,"to_luma",E,E,2,[[["self"]],["luma"]]],[11,R[2161],E,E,2,[[["self"]],["lumaa"]]],[11,"map",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply",E,E,2,[[["self"],["f"]]]],[11,R[2192],E,E,2,[[["g"],["self"],["f"]],["rgb"]]],[11,R[2193],E,E,2,[[["self"],["f"],["g"]]]],[11,"map2",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply2",E,E,2,[[["self"],["rgb"],["f"]]]],[11,"invert",E,E,2,[[["self"]]]],[11,"blend",E,E,2,[[["self"],["rgb"]]]],[11,R[2187],E,E,0,[[],["u8"]]],[11,R[2188],E,E,0,[[],["str"]]],[11,R[2194],E,E,0,[[],[R[1581]]]],[11,"channels",E,E,0,[[["self"]]]],[11,R[2189],E,E,0,[[["self"]]]],[11,R[2195],E,E,0,[[["self"]]]],[11,R[2190],E,E,0,[[[T]],["luma"]]],[11,R[674],E,E,0,[[],["luma"]]],[11,R[2191],E,E,0,[[],["luma"]]],[11,"to_rgb",E,E,0,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,0,[[["self"]],["rgba"]]],[11,"to_luma",E,E,0,[[["self"]],["luma"]]],[11,R[2161],E,E,0,[[["self"]],["lumaa"]]],[11,"map",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply",E,E,0,[[["self"],["f"]]]],[11,R[2192],E,E,0,[[["g"],["self"],["f"]],["luma"]]],[11,R[2193],E,E,0,[[["self"],["f"],["g"]]]],[11,"map2",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply2",E,E,0,[[["self"],["luma"],["f"]]]],[11,"invert",E,E,0,[[["self"]]]],[11,"blend",E,E,0,[[["self"],["luma"]]]],[11,R[2187],E,E,3,[[],["u8"]]],[11,R[2188],E,E,3,[[],["str"]]],[11,R[2194],E,E,3,[[],[R[1581]]]],[11,"channels",E,E,3,[[["self"]]]],[11,R[2189],E,E,3,[[["self"]]]],[11,R[2195],E,E,3,[[["self"]]]],[11,R[2190],E,E,3,[[[T]],["rgba"]]],[11,R[674],E,E,3,[[],["rgba"]]],[11,R[2191],E,E,3,[[],["rgba"]]],[11,"to_rgb",E,E,3,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,3,[[["self"]],["rgba"]]],[11,"to_luma",E,E,3,[[["self"]],["luma"]]],[11,R[2161],E,E,3,[[["self"]],["lumaa"]]],[11,"map",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply",E,E,3,[[["self"],["f"]]]],[11,R[2192],E,E,3,[[["g"],["self"],["f"]],["rgba"]]],[11,R[2193],E,E,3,[[["self"],["f"],["g"]]]],[11,"map2",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply2",E,E,3,[[["self"],["rgba"],["f"]]]],[11,"invert",E,E,3,[[["self"]]]],[11,"blend",E,E,3,[[["self"],["rgba"]]]],[11,R[2187],E,E,1,[[],["u8"]]],[11,R[2188],E,E,1,[[],["str"]]],[11,R[2194],E,E,1,[[],[R[1581]]]],[11,"channels",E,E,1,[[["self"]]]],[11,R[2189],E,E,1,[[["self"]]]],[11,R[2195],E,E,1,[[["self"]]]],[11,R[2190],E,E,1,[[[T]],["lumaa"]]],[11,R[674],E,E,1,[[],["lumaa"]]],[11,R[2191],E,E,1,[[],["lumaa"]]],[11,"to_rgb",E,E,1,[[["self"]],["rgb"]]],[11,"to_rgba",E,E,1,[[["self"]],["rgba"]]],[11,"to_luma",E,E,1,[[["self"]],["luma"]]],[11,R[2161],E,E,1,[[["self"]],["lumaa"]]],[11,"map",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply",E,E,1,[[["self"],["f"]]]],[11,R[2192],E,E,1,[[["g"],["self"],["f"]],["lumaa"]]],[11,R[2193],E,E,1,[[["self"],["f"],["g"]]]],[11,"map2",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply2",E,E,1,[[["self"],["lumaa"],["f"]]]],[11,"invert",E,E,1,[[["self"]]]],[11,"blend",E,E,1,[[["self"],["lumaa"]]]],[11,"convert",E,E,38,[[["self"]],[["vec"],[R[2119],["vec"]]]]],[11,"from",E,E,4,[[],[R[1581]]]],[11,"from",E,E,5,[[[R[948]]],[R[2196]]]],[11,"from",E,E,4,[[[R[2044]]],[R[1581]]]],[11,"from",E,E,5,[[["error"]],[R[2196]]]],[11,"from",E,E,5,[[[R[948]]],[R[2196]]]],[11,"from",E,E,5,[[["error"]],[R[2196]]]],[11,"next",R[2180],E,48,[[["self"]],["option"]]],[11,R[425],E,E,48,[[["self"]]]],[11,"next","image",E,45,[[["self"]],["option"]]],[11,"next",E,E,46,[[["self"]],["option"]]],[11,"next",E,E,39,[[["self"]],[["frame"],["option",["frame"]]]]],[11,R[364],R[2180],E,35,[[]]],[11,"clone",R[2166],E,47,[[["self"]],["bilevel"]]],[11,"clone","image",E,7,[[["self"]],[R[2148]]]],[11,"clone",R[2168],E,13,[[["self"]],["frame"]]],[11,"clone",R[2173],E,15,[[["self"]],[R[2198]]]],[11,"clone",R[2180],E,32,[[["self"]],[R[2143]]]],[11,"clone",E,E,33,[[["self"]],[R[2197]]]],[11,"clone","image",E,8,[[["self"]],[R[2111]]]],[11,"clone",E,E,9,[[["self"]],[R[2108]]]],[11,"clone",E,E,4,[[["self"]],[R[1581]]]],[11,"clone",E,E,2,[[["self"]],["rgb"]]],[11,"clone",E,E,0,[[["self"]],["luma"]]],[11,"clone",E,E,3,[[["self"]],["rgba"]]],[11,"clone",E,E,1,[[["self"]],["lumaa"]]],[11,"clone",E,E,38,[[["self"]],[R[2119]]]],[11,"clone",E,E,40,[[["self"]],["frame"]]],[11,R[744],R[2168],E,13,[[],["frame"]]],[11,"eq",R[2173],E,15,[[["self"],[R[2198]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[2198]]],["bool"]]],[11,"eq",R[2180],E,32,[[["self"],[R[2143]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[2143]]],["bool"]]],[11,"eq","image",E,8,[[["self"],[R[2111]]],["bool"]]],[11,"eq",E,E,4,[[[R[1581]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[1581]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["rgb"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["rgb"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"eq",E,E,1,[[["lumaa"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["lumaa"],["self"]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",R[2168],E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2173],E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2170],E,28,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2180],E,34,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,35,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,32,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,33,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","image",E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,38,[[["self"],[R[176]]],[R[48]]]],[11,"deref",E,E,38,[[["self"]]]],[11,R[368],E,E,38,[[["self"]]]],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,3,[[["self"],["usize"]],[T]]],[11,"index",E,E,1,[[["self"],["usize"]],[T]]],[11,"index",E,E,38,[[["self"]],["p"]]],[11,R[2199],E,E,2,[[["self"],["usize"]],[T]]],[11,R[2199],E,E,0,[[["self"],["usize"]],[T]]],[11,R[2199],E,E,3,[[["self"],["usize"]],[T]]],[11,R[2199],E,E,1,[[["self"],["usize"]],[T]]],[11,R[2199],E,E,38,[[["self"]],["p"]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[256],E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[["option",["error"]],["error"]]]],[11,"from_rgba",R[2171],R[2200],25,[[["u16"]],["frame"]]],[11,"from_rgb",E,R[2201],25,[[["u16"]],["frame"]]],[11,R[2202],"image",R[2203],41,[[["self"]],[["bool"],[R[2109],["bool"]]]]],[11,R[2204],E,R[2205],41,[[],[[R[2109],["frames"]],["frames"]]]],[11,"load_rect",E,R[2206],41,[[["self"],["u32"]],[[R[2109],["vec"]],["vec",["u8"]]]]],[11,"width",E,R[2156],42,[[["self"]],["u32"]]],[11,"height",E,R[2157],42,[[["self"]],["u32"]]],[11,"in_bounds",E,R[2207],42,[[["u32"],["self"]],["bool"]]],[11,R[2184],E,R[2159],42,[[["u32"],["self"]]]],[11,R[2185],E,R[2160],42,[[["self"],["u32"]]]],[11,"pixels",E,R[2208],42,[[["self"]],["pixels"]]],[11,R[2209],E,R[2210],42,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[2211],42,[[["u32"],["self"],["o"]],["bool"]]],[11,"sub_image",E,R[2212],42,[[["self"],["u32"]],["subimage"]]],[11,"expand_palette",E,"Expands a color palette by re-using the existing buffer.…",49,[[["u8"],["option",["u8"]]],[R[2144]]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[4,R[2229]],[4,"ImageError"],[4,R[2213]],[4,R[2214]],[4,R[2215]],[4,R[2216]],[3,"NeuQuant"],[8,"ColorMap"],[3,R[2217]],[3,"Frame"],[3,"VP8Decoder"],[4,"PNMSubtype"],[3,"PNMDecoder"],[3,"PPMEncoder"],[3,"PPMDecoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,R[2218]],[3,R[2219]],[3,"Frame"],[3,R[391]],[3,R[392]],[3,R[2220]],[3,"TGADecoder"],[3,"BMPEncoder"],[3,"BMPDecoder"],[3,"RGBE8Pixel"],[3,R[2221]],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[3,"SubImage"],[3,R[2222]],[3,"Frames"],[3,"Frame"],[8,R[2223]],[8,R[2224]],[8,"Pixel"],[8,R[2225]],[3,"Pixels"],[3,"MutPixels"],[3,"BiLevel"],[3,R[2226]],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","i":[[3,R[919],"inflate","A DEFLATE decoder.",N,N],[3,R[921],E,R[900],N,N],[3,R[920],E,R[900],N,N],[3,R[922],E,E,N,N],[5,"inflate_bytes",E,"Decompress the given slice of DEFLATE compressed data.",N,[[],[[R[48],["vec","string"]],["vec",["u8"]],["string"]]]],[5,"inflate_bytes_zlib",E,R[901],N,[[],[[R[48],["vec","string"]],["vec",["u8"]],["string"]]]],[5,"inflate_bytes_zlib_no_checksum",E,R[901],N,[[],[[R[48],["vec","string"]],["vec",["u8"]],["string"]]]],[11,"new",E,E,0,[[["w"]],[R[902]]]],[11,R[903],E,E,0,[[["w"]],[R[902]]]],[11,"finish",E,E,0,[[],[R[48]]]],[11,"new",E,R[907],1,[[["r"]],[R[904]]]],[11,R[903],E,R[905],1,[[["r"]],[R[904]]]],[11,R[909],E,R[905],1,[[["r"]],[R[904]]]],[11,"reset",E,R[910],1,[[["self"],["r"]],["r"]]],[11,R[912],E,R[913],1,[[["self"]]]],[11,"get_ref",E,"Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying `BufRead`…",1,[[["self"]],["r"]]],[11,R[906],E,"Drops the decoder and return the inner `BufRead` instance.",1,[[],["r"]]],[11,"total_in",E,"Returns the total bytes read from the underlying `BufRead`…",1,[[["self"]],["u64"]]],[11,R[914],E,R[911],1,[[["self"]],["u64"]]],[11,R[915],E,R[916],1,[[["self"]],["u32"]]],[11,"new",E,R[907],2,[[["r"]],[R[908]]]],[11,R[903],E,R[905],2,[[["r"]],[R[908]]]],[11,R[909],E,R[905],2,[[["r"]],[R[908]]]],[11,"reset",E,R[910],2,[[["self"],["r"]],["r"]]],[11,"get_ref",E,"Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,R[906],E,R[911],2,[[],["r"]]],[11,R[912],E,R[913],2,[[["self"]]]],[11,"total_in",E,"Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,R[914],E,R[911],2,[[["self"]],["u64"]]],[11,R[915],E,R[916],2,[[["self"]],["u32"]]],[11,"new",E,"Create a new stream for decoding raw deflate encoded data.",3,[[],[R[917]]]],[11,R[903],E,R[918],3,[[],[R[917]]]],[11,R[909],E,R[918],3,[[],[R[917]]]],[11,"reset",E,E,3,[[["self"]]]],[11,"reset_to_zlib",E,E,3,[[["self"]]]],[11,"update",E,"Try to uncompress/decode the data in `data`.",3,[[["self"]],[[R[48],["string"]],["string"]]]],[11,R[915],E,R[916],3,[[["self"]],["u32"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"read",E,E,1,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,2,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"write",E,E,0,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[48]]]]],"p":[[3,R[919]],[3,R[920]],[3,R[921]],[3,R[922]]]};
searchIndex["itoa"]={"doc":E,"i":[[5,"write","itoa",E,N,[[[R[772]],["write"]],[[R[48],["usize"]],["usize"]]]],[8,"Integer",E,E,N,N],[10,"write",E,E,0,[[["write"]],[[R[48],["usize"]],["usize"]]]]],"p":[[8,"Integer"]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","i":[[3,R[391],"jpeg_decoder",R[2227],N,N],[3,"ImageInfo",E,"Represents metadata of an image.",N,N],[12,"width",E,"The width of the image, in pixels.",0,N],[12,"height",E,"The height of the image, in pixels.",0,N],[12,"pixel_format",E,"The pixel format of the image.",0,N],[4,R[2046],E,"An enumeration over combinations of color spaces and bit…",N,N],[13,"L8",E,"Luminance (grayscale), 8 bits",1,N],[13,"RGB24",E,"RGB, 8 bits per channel",1,N],[13,"CMYK32",E,"CMYK, 8 bits per channel",1,N],[4,"Error",E,"Errors that can occur while decoding a JPEG image.",N,N],[13,"Format",E,"The image is not formatted properly. The string contains…",2,N],[13,"Unsupported",E,"The image makes use of a JPEG feature not (currently)…",2,N],[13,"Io",E,"An I/O error occurred while decoding the image.",2,N],[13,"Internal",E,"An internal error occurred while decoding the image.",2,N],[4,R[2047],E,"An enumeration over JPEG features (currently) unsupported…",N,N],[13,"Hierarchical",E,"Hierarchical JPEG.",3,N],[13,"Lossless",E,"Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding",E,"JPEG using arithmetic entropy coding instead of Huffman…",3,N],[13,"SamplePrecision",E,"Sample precision in bits. 8 bit sample precision is what…",3,N],[13,"ComponentCount",E,"Number of components in an image. 1, 3 and 4 components…",3,N],[13,"DNL",E,"An image can specify a zero height in the frame header and…",3,N],[13,"SubsamplingRatio",E,"Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio",E,"A subsampling ratio not representable as an integer.",3,N],[11,"new",E,"Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info",E,"Returns metadata about the image.",4,[[["self"]],[[R[2045]],["option",[R[2045]]]]]],[11,"read_info",E,"Tries to read metadata from the image without decoding it.",4,[[["self"]],[[R[48],["error"]],["error"]]]],[11,"decode",E,"Decodes the image and returns the decoded pixels if…",4,[[["self"]],[[R[48],["vec","error"]],["vec",["u8"]],["error"]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[205],E,E,2,[[["self"]],["string"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"from",E,E,2,[[["ioerror"]],["error"]]],[11,"from",E,E,2,[[["recverror"]],["error"]]],[11,"from",E,E,2,[[["senderror"]],["error"]]],[11,"clone",E,E,1,[[["self"]],[R[2044]]]],[11,"clone",E,E,0,[[["self"]],[R[2045]]]],[11,"eq",E,E,1,[[["self"],[R[2044]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2045]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2045]]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[["stderror"],["option",["stderror"]]]]]],"p":[[3,"ImageInfo"],[4,R[2046]],[4,"Error"],[4,R[2047]],[3,R[391]]]};
searchIndex["kernel32"]={"doc":E,"i":[],"p":[]};
searchIndex["la"]={"doc":E,"i":[[3,R[2101],"la","Cholesky Decomposition (for a real valued matrix).",N,N],[3,R[2102],E,"Eigenvalues and eigenvectors of a real matrix. ",N,N],[3,R[2103],E,"LU Decomposition.",N,N],[3,R[2104],E,"QR Decomposition.",N,N],[3,"SVD",E,"Singular Value Decomposition.",N,N],[3,"Matrix",E,E,N,N],[0,"macros",E,E,N,N],[11,"get_mut_data",E,E,0,[[["self"]],["vec"]]],[11,"get_mref",E,E,0,[[["usize"],["self"]],[T]]],[11,"mmap",E,E,0,[[["fn"],["self"]],["matrix"]]],[11,"mneg",E,E,0,[[["self"]],["matrix"]]],[11,"mscale",E,E,0,[[["self"],[T]],["matrix"]]],[11,"madd",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"msub",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"melem_mul",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"melem_div",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"mmul",E,E,0,[[["matrix"],["self"],["matrix"]],["matrix"]]],[11,"set",E,E,0,[[["self"],["usize"],[T]],["matrix"]]],[11,"mt",E,E,0,[[["self"]],["matrix"]]],[11,"new",E,E,0,[[["usize"],["vec"]],["matrix"]]],[11,"dirty",E,E,0,[[["usize"]],["matrix"]]],[11,"vector",E,E,0,[[["vec"]],["matrix"]]],[11,"row_vector",E,E,0,[[["vec"]],["matrix"]]],[11,"rows",E,E,0,[[["self"]],["usize"]]],[11,"cols",E,E,0,[[["self"]],["usize"]]],[11,"get_data",E,E,0,[[["self"]],["vec"]]],[11,"get_ref",E,E,0,[[["self"],["usize"]],[T]]],[11,"map",E,E,0,[[["fn"],["self"]],[["copy"],["matrix"]]]],[11,"reduce",E,E,0,[[["vec"],["fn"],["self"]],[["copy"],["matrix"]]]],[11,"is_square",E,E,0,[[["self"]],["bool"]]],[11,"is_not_square",E,E,0,[[["self"]],["bool"]]],[11,"id",E,E,0,[[["usize"]],["matrix"]]],[11,"zero",E,E,0,[[["usize"]],["matrix"]]],[11,"diag",E,E,0,[[["vec"]],["matrix"]]],[11,"block_diag",E,E,0,[[["usize"],["vec"]],["matrix"]]],[11,"zero_vector",E,E,0,[[["usize"]],["matrix"]]],[11,"one_vector",E,E,0,[[["usize"]],["matrix"]]],[11,"scale",E,E,0,[[["self"],[T]],["matrix"]]],[11,"elem_mul",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"elem_div",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"dot",E,E,0,[[["matrix"],["self"]],[T]]],[11,"get",E,E,0,[[["self"],["usize"]],[T]]],[11,"cr",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,"cb",E,E,0,[[["matrix"],["self"]],["matrix"]]],[11,T,E,E,0,[[["self"]],["matrix"]]],[11,"minor",E,E,0,[[["self"],["usize"]],["matrix"]]],[11,"sub_matrix",E,E,0,[[["rc"],["self"],["rr"]],["matrix"]]],[11,"get_columns",E,E,0,[[[R[2095]],[R[2096]],["self"]],["matrix"]]],[11,"get_rows",E,E,0,[[[R[2095]],[R[2096]],["self"]],["matrix"]]],[11,"permute",E,E,0,[[["self"]],["matrix"]]],[11,"permute_rows",E,E,0,[[["self"]],["matrix"]]],[11,"permute_columns",E,E,0,[[["self"]],["matrix"]]],[11,"filter_rows",E,E,0,[[["self"],["fn"]],["matrix"]]],[11,"filter_columns",E,E,0,[[["self"],["fn"]],["matrix"]]],[11,"select_rows",E,E,0,[[["self"]],["matrix"]]],[11,"select_columns",E,E,0,[[["self"]],["matrix"]]],[11,"print",E,E,0,[[["self"]]]],[11,"random",E,E,0,[[["usize"]],["matrix"]]],[11,"trace",E,E,0,[[["self"]],[T]]],[11,"det",E,E,0,[[["self"]],[T]]],[11,"solve",E,E,0,[[["matrix"],["self"]],[["option",["matrix"]],["matrix"]]]],[11,"inverse",E,E,0,[[["self"]],[["option",["matrix"]],["matrix"]]]],[11,R[2098],E,E,0,[[["self"]],["bool"]]],[11,R[2099],E,E,0,[[["self"]],["bool"]]],[11,"pinverse",E,E,0,[[["self"]],["matrix"]]],[11,"vector_euclidean_norm",E,E,0,[[["self"]],[T]]],[11,"length",E,E,0,[[["self"]],[T]]],[11,"vector_1_norm",E,E,0,[[["self"]],[T]]],[11,"vector_2_norm",E,E,0,[[["self"]],[T]]],[11,"vector_p_norm",E,E,0,[[["self"],[T]],[T]]],[11,"frobenius_norm",E,E,0,[[["self"]],[T]]],[11,"vector_inf_norm",E,E,0,[[["self"]],[T]]],[11,"is_symmetric",E,E,0,[[["self"]],["bool"]]],[11,"is_non_symmetric",E,E,0,[[["self"]],["bool"]]],[11,"approx_eq",E,E,0,[[["matrix"],["self"]],["bool"]]],[0,"util",E,E,N,N],[5,"read_csv","la::util",E,N,[[["str"],["fn"]],[["matrix"],["copy"]]]],[11,"new","la",E,1,[[["matrix"]],[["option",[R[2097]]],[R[2097]]]]],[11,"get_l",E,E,1,[[["self"]],["matrix"]]],[11,"solve",E,E,1,[[["matrix"],["self"]],["matrix"]]],[11,"new",E,E,2,[[["matrix"]],["eigendecomposition"]]],[11,"get_v",E,E,2,[[["self"]],["matrix"]]],[11,"get_real_eigenvalues",E,E,2,[[["self"]],["vec"]]],[11,"get_imag_eigenvalues",E,E,2,[[["self"]],["vec"]]],[11,"get_d",E,E,2,[[["self"]],["matrix"]]],[11,"new",E,E,3,[[["matrix"]],["ludecomposition"]]],[11,R[2098],E,E,3,[[["self"]],["bool"]]],[11,R[2099],E,E,3,[[["self"]],["bool"]]],[11,"get_l",E,E,3,[[["self"]],["matrix"]]],[11,"get_u",E,E,3,[[["self"]],["matrix"]]],[11,"get_p",E,E,3,[[["self"]],["matrix"]]],[11,"get_piv",E,E,3,[[["self"]],["vec"]]],[11,"det",E,E,3,[[["self"]],[T]]],[11,"solve",E,E,3,[[["matrix"],["self"]],[["option",["matrix"]],["matrix"]]]],[11,"new",E,E,4,[[["matrix"]],["qrdecomposition"]]],[11,"is_full_rank",E,E,4,[[["self"]],["bool"]]],[11,"get_h",E,E,4,[[["self"]],["matrix"]]],[11,"get_r",E,E,4,[[["self"]],["matrix"]]],[11,"get_q",E,E,4,[[["self"]],["matrix"]]],[11,"solve",E,E,4,[[["matrix"],["self"]],[["option",["matrix"]],["matrix"]]]],[11,"new",E,"Calculates SVD.",5,[[["matrix"]],["svd"]]],[11,"get_u",E,E,5,[[["self"]],["matrix"]]],[11,"get_s",E,E,5,[[["self"]],["matrix"]]],[11,"get_v",E,E,5,[[["self"]],["matrix"]]],[11,"rank",E,E,5,[[["self"]],["usize"]]],[11,"direct",E,"Calculates SVD using the direct method. Note that…",5,[[["matrix"]],["svd"]]],[8,"ApproxEq",E,"Trait for testing approximate equality",N,N],[10,"approx_epsilon",E,E,6,[[],["eps"]]],[10,"approx_eq",E,E,6,[[["self"]],["bool"]]],[10,"approx_eq_eps",E,E,6,[[["eps"],["self"]],["bool"]]],[14,"m_one",E,R[2100],N,N],[14,"m_rec",E,"Helper macro for m!",N,N],[14,"m",E,R[2100],N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"clone",E,E,0,[[["self"]],["matrix"]]],[11,"eq",E,E,0,[[["matrix"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["matrix"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[R[48]]]],[11,"sub",E,E,0,[[["matrix"]],["matrix"]]],[11,"sub",E,E,0,[[["matrix"]],["matrix"]]],[11,"add",E,E,0,[[["matrix"]],["matrix"]]],[11,"add",E,E,0,[[["matrix"]],["matrix"]]],[11,"mul",E,E,0,[[["matrix"]],["matrix"]]],[11,"mul",E,E,0,[[["matrix"]],["matrix"]]],[11,"neg",E,E,0,[[],["matrix"]]],[11,"bitor",E,E,0,[[["matrix"]],["matrix"]]],[11,"index",E,E,0,[[["self"]],[T]]]],"p":[[3,"Matrix"],[3,R[2101]],[3,R[2102]],[3,R[2103]],[3,R[2104]],[3,"SVD"],[8,"ApproxEq"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[1740],R[377],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[377],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"Crate docs","i":[[3,"group","libc",E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,R[0],E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[52],E,E,N,N],[12,R[0],E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,R[5],E,E,4,N],[12,R[6],E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,6,N],[3,R[53],E,E,N,N],[12,"s6_addr",E,E,7,N],[3,"ip_mreq",E,E,N,N],[12,R[1091],E,E,8,N],[12,R[1092],E,E,8,N],[3,R[54],E,E,N,N],[12,R[1093],E,E,9,N],[12,R[1094],E,E,9,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,10,N],[12,"h_aliases",E,E,10,N],[12,"h_addrtype",E,E,10,N],[12,"h_length",E,E,10,N],[12,"h_addr_list",E,E,10,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,11,N],[12,"iov_len",E,E,11,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,12,N],[12,R[1],E,E,12,N],[12,"revents",E,E,12,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,13,N],[12,"ws_col",E,E,13,N],[12,"ws_xpixel",E,E,13,N],[12,"ws_ypixel",E,E,13,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,14,N],[12,"l_linger",E,E,14,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,15,N],[3,R[55],E,E,N,N],[12,R[7],E,E,16,N],[12,R[8],E,E,16,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,17,N],[12,"tms_stime",E,E,17,N],[12,"tms_cutime",E,E,17,N],[12,"tms_cstime",E,E,17,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,18,N],[12,"s_aliases",E,E,18,N],[12,"s_port",E,E,18,N],[12,"s_proto",E,E,18,N],[3,R[56],E,E,N,N],[12,"p_name",E,E,19,N],[12,"p_aliases",E,E,19,N],[12,"p_proto",E,E,19,N],[3,R[57],E,E,N,N],[12,"sa_family",E,E,20,N],[12,"sa_data",E,E,20,N],[3,R[58],E,E,N,N],[12,"sin_family",E,E,21,N],[12,"sin_port",E,E,21,N],[12,"sin_addr",E,E,21,N],[12,"sin_zero",E,E,21,N],[3,R[59],E,E,N,N],[12,R[1087],E,E,22,N],[12,"sin6_port",E,E,22,N],[12,R[1088],E,E,22,N],[12,"sin6_addr",E,E,22,N],[12,R[1089],E,E,22,N],[3,R[60],E,E,N,N],[12,"sun_family",E,E,23,N],[12,"sun_path",E,E,23,N],[3,R[61],E,E,N,N],[12,"ss_family",E,E,24,N],[3,R[62],E,E,N,N],[12,"ai_flags",E,E,25,N],[12,"ai_family",E,E,25,N],[12,"ai_socktype",E,E,25,N],[12,"ai_protocol",E,E,25,N],[12,"ai_addrlen",E,E,25,N],[12,"ai_addr",E,E,25,N],[12,"ai_canonname",E,E,25,N],[12,"ai_next",E,E,25,N],[3,R[63],E,E,N,N],[12,"nl_family",E,E,26,N],[12,"nl_pid",E,E,26,N],[12,"nl_groups",E,E,26,N],[3,R[64],E,E,N,N],[12,"sll_family",E,E,27,N],[12,"sll_protocol",E,E,27,N],[12,"sll_ifindex",E,E,27,N],[12,"sll_hatype",E,E,27,N],[12,"sll_pkttype",E,E,27,N],[12,"sll_halen",E,E,27,N],[12,"sll_addr",E,E,27,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,28,N],[12,"tm_min",E,E,28,N],[12,"tm_hour",E,E,28,N],[12,"tm_mday",E,E,28,N],[12,"tm_mon",E,E,28,N],[12,"tm_year",E,E,28,N],[12,"tm_wday",E,E,28,N],[12,"tm_yday",E,E,28,N],[12,"tm_isdst",E,E,28,N],[12,"tm_gmtoff",E,E,28,N],[12,"tm_zone",E,E,28,N],[3,R[65],E,E,N,N],[12,"sched_priority",E,E,29,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,30,N],[12,"dli_fbase",E,E,30,N],[12,"dli_sname",E,E,30,N],[12,"dli_saddr",E,E,30,N],[3,R[66],E,E,N,N],[12,R[1],E,E,31,N],[12,"u64",E,E,31,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,32,N],[12,"nodename",E,E,32,N],[12,"release",E,E,32,N],[12,R[9],E,E,32,N],[12,"machine",E,E,32,N],[12,"domainname",E,E,32,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,33,N],[12,"thousands_sep",E,E,33,N],[12,"grouping",E,E,33,N],[12,"int_curr_symbol",E,E,33,N],[12,"currency_symbol",E,E,33,N],[12,"mon_decimal_point",E,E,33,N],[12,"mon_thousands_sep",E,E,33,N],[12,"mon_grouping",E,E,33,N],[12,"positive_sign",E,E,33,N],[12,"negative_sign",E,E,33,N],[12,"int_frac_digits",E,E,33,N],[12,"frac_digits",E,E,33,N],[12,"p_cs_precedes",E,E,33,N],[12,"p_sep_by_space",E,E,33,N],[12,"n_cs_precedes",E,E,33,N],[12,"n_sep_by_space",E,E,33,N],[12,"p_sign_posn",E,E,33,N],[12,"n_sign_posn",E,E,33,N],[12,"int_p_cs_precedes",E,E,33,N],[12,"int_p_sep_by_space",E,E,33,N],[12,"int_n_cs_precedes",E,E,33,N],[12,"int_n_sep_by_space",E,E,33,N],[12,"int_p_sign_posn",E,E,33,N],[12,"int_n_sign_posn",E,E,33,N],[3,R[67],E,E,N,N],[12,"sigev_value",E,E,34,N],[12,"sigev_signo",E,E,34,N],[12,"sigev_notify",E,E,34,N],[12,"sigev_notify_thread_id",E,E,34,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,35,N],[12,"d_off",E,E,35,N],[12,R[2],E,E,35,N],[12,R[3],E,E,35,N],[12,R[4],E,E,35,N],[3,R[68],E,E,N,N],[12,"d_ino",E,E,36,N],[12,"d_off",E,E,36,N],[12,R[2],E,E,36,N],[12,R[3],E,E,36,N],[12,R[4],E,E,36,N],[3,R[69],E,E,N,N],[12,R[5],E,E,37,N],[12,R[6],E,E,37,N],[3,"glob_t",E,E,N,N],[12,R[13],E,E,38,N],[12,R[14],E,E,38,N],[12,"gl_offs",E,E,38,N],[12,R[15],E,E,38,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,39,N],[12,"ifa_name",E,E,39,N],[12,"ifa_flags",E,E,39,N],[12,"ifa_addr",E,E,39,N],[12,"ifa_netmask",E,E,39,N],[12,"ifa_ifu",E,E,39,N],[12,"ifa_data",E,E,39,N],[3,R[70],E,E,N,N],[3,R[71],E,E,N,N],[3,R[72],E,E,N,N],[3,R[73],E,E,N,N],[3,R[74],E,E,N,N],[3,R[75],E,E,N,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,40,N],[12,"pw_passwd",E,E,40,N],[12,"pw_uid",E,E,40,N],[12,"pw_gid",E,E,40,N],[12,"pw_gecos",E,E,40,N],[12,"pw_dir",E,E,40,N],[12,"pw_shell",E,E,40,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,41,N],[12,"sp_pwdp",E,E,41,N],[12,"sp_lstchg",E,E,41,N],[12,"sp_min",E,E,41,N],[12,"sp_max",E,E,41,N],[12,"sp_warn",E,E,41,N],[12,"sp_inact",E,E,41,N],[12,"sp_expire",E,E,41,N],[12,"sp_flag",E,E,41,N],[3,R[76],E,E,N,N],[12,R[28],E,E,42,N],[12,R[18],E,E,42,N],[12,R[16],E,E,42,N],[12,R[29],E,E,42,N],[12,R[17],E,E,42,N],[12,R[30],E,E,42,N],[12,R[31],E,E,42,N],[12,R[33],E,E,42,N],[12,"f_fsid",E,E,42,N],[12,"f_flag",E,E,42,N],[12,R[34],E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[77],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[3,R[78],E,E,N,N],[12,R[7],E,E,45,N],[12,R[8],E,E,45,N],[3,"fsid_t",E,E,N,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,46,N],[12,"mq_maxmsg",E,E,46,N],[12,"mq_msgsize",E,E,46,N],[12,"mq_curmsgs",E,E,46,N],[3,R[38],E,E,N,N],[3,R[42],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,49,N],[12,"msg_len",E,E,49,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,50,N],[12,"sem_op",E,E,50,N],[12,"sem_flg",E,E,50,N],[3,R[79],E,E,N,N],[12,"time",E,E,51,N],[12,"type_",E,E,51,N],[12,"code",E,E,51,N],[12,"value",E,E,51,N],[3,R[80],E,E,N,N],[12,"bustype",E,E,52,N],[12,"vendor",E,E,52,N],[12,"product",E,E,52,N],[12,R[9],E,E,52,N],[3,R[81],E,E,N,N],[12,"value",E,E,53,N],[12,"minimum",E,E,53,N],[12,"maximum",E,E,53,N],[12,"fuzz",E,E,53,N],[12,"flat",E,E,53,N],[12,"resolution",E,E,53,N],[3,R[82],E,E,N,N],[12,"flags",E,E,54,N],[12,"len",E,E,54,N],[12,"index",E,E,54,N],[12,"keycode",E,E,54,N],[12,"scancode",E,E,54,N],[3,R[83],E,E,N,N],[12,"type_",E,E,55,N],[12,"codes_size",E,E,55,N],[12,"codes_ptr",E,E,55,N],[3,R[84],E,E,N,N],[12,"length",E,E,56,N],[12,"delay",E,E,56,N],[3,R[85],E,E,N,N],[12,"button",E,E,57,N],[12,"interval",E,E,57,N],[3,R[86],E,E,N,N],[12,"attack_length",E,E,58,N],[12,"attack_level",E,E,58,N],[12,"fade_length",E,E,58,N],[12,"fade_level",E,E,58,N],[3,R[87],E,E,N,N],[12,"level",E,E,59,N],[12,R[10],E,E,59,N],[3,R[88],E,E,N,N],[12,"start_level",E,E,60,N],[12,"end_level",E,E,60,N],[12,R[10],E,E,60,N],[3,R[89],E,E,N,N],[12,"right_saturation",E,E,61,N],[12,"left_saturation",E,E,61,N],[12,"right_coeff",E,E,61,N],[12,"left_coeff",E,E,61,N],[12,"deadband",E,E,61,N],[12,"center",E,E,61,N],[3,R[90],E,E,N,N],[12,"waveform",E,E,62,N],[12,"period",E,E,62,N],[12,"magnitude",E,E,62,N],[12,"offset",E,E,62,N],[12,"phase",E,E,62,N],[12,R[10],E,E,62,N],[12,"custom_len",E,E,62,N],[12,"custom_data",E,E,62,N],[3,R[91],E,E,N,N],[12,"strong_magnitude",E,E,63,N],[12,"weak_magnitude",E,E,63,N],[3,R[92],E,E,N,N],[12,"type_",E,E,64,N],[12,"id",E,E,64,N],[12,"direction",E,E,64,N],[12,"trigger",E,E,64,N],[12,"replay",E,E,64,N],[12,U,E,E,64,N],[3,R[93],E,E,N,N],[12,"dlpi_addr",E,E,65,N],[12,"dlpi_name",E,E,65,N],[12,"dlpi_phdr",E,E,65,N],[12,"dlpi_phnum",E,E,65,N],[12,"dlpi_adds",E,E,65,N],[12,"dlpi_subs",E,E,65,N],[12,"dlpi_tls_modid",E,E,65,N],[12,"dlpi_tls_data",E,E,65,N],[3,R[108],E,E,N,N],[12,"p_type",E,E,66,N],[12,R[11],E,E,66,N],[12,"p_vaddr",E,E,66,N],[12,"p_paddr",E,E,66,N],[12,R[12],E,E,66,N],[12,"p_memsz",E,E,66,N],[12,"p_flags",E,E,66,N],[12,"p_align",E,E,66,N],[3,R[109],E,E,N,N],[12,"p_type",E,E,67,N],[12,"p_flags",E,E,67,N],[12,R[11],E,E,67,N],[12,"p_vaddr",E,E,67,N],[12,"p_paddr",E,E,67,N],[12,R[12],E,E,67,N],[12,"p_memsz",E,E,67,N],[12,"p_align",E,E,67,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,68,N],[12,"uid",E,E,68,N],[12,"gid",E,E,68,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,69,N],[12,"mnt_dir",E,E,69,N],[12,"mnt_type",E,E,69,N],[12,"mnt_opts",E,E,69,N],[12,"mnt_freq",E,E,69,N],[12,"mnt_passno",E,E,69,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,70,N],[12,"aio_lio_opcode",E,E,70,N],[12,"aio_reqprio",E,E,70,N],[12,"aio_buf",E,E,70,N],[12,"aio_nbytes",E,E,70,N],[12,"aio_sigevent",E,E,70,N],[12,"aio_offset",E,E,70,N],[3,R[94],E,E,N,N],[12,"e_termination",E,E,71,N],[12,"e_exit",E,E,71,N],[3,R[95],E,E,N,N],[12,R[0],E,E,72,N],[12,"tv_usec",E,E,72,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,73,N],[12,"ut_pid",E,E,73,N],[12,"ut_line",E,E,73,N],[12,"ut_id",E,E,73,N],[12,"ut_user",E,E,73,N],[12,"ut_host",E,E,73,N],[12,"ut_exit",E,E,73,N],[12,"ut_session",E,E,73,N],[12,"ut_tv",E,E,73,N],[12,"ut_addr_v6",E,E,73,N],[3,R[39],E,E,N,N],[12,"sa_sigaction",E,E,74,N],[12,"sa_mask",E,E,74,N],[12,"sa_flags",E,E,74,N],[12,"sa_restorer",E,E,74,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,75,N],[12,"ss_flags",E,E,75,N],[12,"ss_size",E,E,75,N],[3,R[96],E,E,N,N],[12,"si_signo",E,E,76,N],[12,"si_errno",E,E,76,N],[12,"si_code",E,E,76,N],[12,"_pad",E,E,76,N],[3,R[97],E,E,N,N],[12,R[13],E,E,77,N],[12,R[14],E,E,77,N],[12,"gl_offs",E,E,77,N],[12,R[15],E,E,77,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,78,N],[12,R[28],E,E,78,N],[12,R[16],E,E,78,N],[12,R[29],E,E,78,N],[12,R[17],E,E,78,N],[12,R[30],E,E,78,N],[12,R[31],E,E,78,N],[12,"f_fsid",E,E,78,N],[12,R[32],E,E,78,N],[12,R[18],E,E,78,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,79,N],[12,"msg_namelen",E,E,79,N],[12,"msg_iov",E,E,79,N],[12,"msg_iovlen",E,E,79,N],[12,"msg_control",E,E,79,N],[12,"msg_controllen",E,E,79,N],[12,"msg_flags",E,E,79,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,80,N],[12,"cmsg_level",E,E,80,N],[12,"cmsg_type",E,E,80,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,81,N],[12,"c_oflag",E,E,81,N],[12,"c_cflag",E,E,81,N],[12,"c_lflag",E,E,81,N],[12,"c_line",E,E,81,N],[12,"c_cc",E,E,81,N],[12,R[36],E,E,81,N],[12,R[37],E,E,81,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,82,N],[12,"l_whence",E,E,82,N],[12,"l_start",E,E,82,N],[12,"l_len",E,E,82,N],[12,"l_pid",E,E,82,N],[3,"sem_t",E,E,N,N],[3,R[98],E,E,N,N],[3,R[99],E,E,N,N],[12,"uptime",E,E,83,N],[12,"loads",E,E,83,N],[12,"totalram",E,E,83,N],[12,"freeram",E,E,83,N],[12,"sharedram",E,E,83,N],[12,"bufferram",E,E,83,N],[12,"totalswap",E,E,83,N],[12,"freeswap",E,E,83,N],[12,"procs",E,E,83,N],[12,"pad",E,E,83,N],[12,"totalhigh",E,E,83,N],[12,"freehigh",E,E,83,N],[12,"mem_unit",E,E,83,N],[12,"_f",E,E,83,N],[3,R[110],E,E,N,N],[12,"msg_perm",E,E,84,N],[12,"msg_stime",E,E,84,N],[12,"msg_rtime",E,E,84,N],[12,"msg_ctime",E,E,84,N],[12,"msg_qnum",E,E,84,N],[12,"msg_qbytes",E,E,84,N],[12,"msg_lspid",E,E,84,N],[12,"msg_lrpid",E,E,84,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,85,N],[12,"st_ino",E,E,85,N],[12,R[19],E,E,85,N],[12,"st_mode",E,E,85,N],[12,"st_uid",E,E,85,N],[12,"st_gid",E,E,85,N],[12,"st_rdev",E,E,85,N],[12,"st_size",E,E,85,N],[12,R[20],E,E,85,N],[12,R[21],E,E,85,N],[12,R[22],E,E,85,N],[12,R[23],E,E,85,N],[12,R[24],E,E,85,N],[12,R[25],E,E,85,N],[12,R[26],E,E,85,N],[12,R[27],E,E,85,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,86,N],[12,"st_ino",E,E,86,N],[12,R[19],E,E,86,N],[12,"st_mode",E,E,86,N],[12,"st_uid",E,E,86,N],[12,"st_gid",E,E,86,N],[12,"st_rdev",E,E,86,N],[12,"st_size",E,E,86,N],[12,R[20],E,E,86,N],[12,R[21],E,E,86,N],[12,R[22],E,E,86,N],[12,R[23],E,E,86,N],[12,R[24],E,E,86,N],[12,R[25],E,E,86,N],[12,R[26],E,E,86,N],[12,R[27],E,E,86,N],[3,R[40],E,E,N,N],[12,"f_type",E,E,87,N],[12,R[28],E,E,87,N],[12,R[16],E,E,87,N],[12,R[29],E,E,87,N],[12,R[17],E,E,87,N],[12,R[30],E,E,87,N],[12,R[31],E,E,87,N],[12,"f_fsid",E,E,87,N],[12,R[32],E,E,87,N],[12,R[18],E,E,87,N],[12,"f_flags",E,E,87,N],[12,"f_spare",E,E,87,N],[3,R[41],E,E,N,N],[12,R[28],E,E,88,N],[12,R[18],E,E,88,N],[12,R[16],E,E,88,N],[12,R[29],E,E,88,N],[12,R[17],E,E,88,N],[12,R[30],E,E,88,N],[12,R[31],E,E,88,N],[12,R[33],E,E,88,N],[12,"f_fsid",E,E,88,N],[12,"f_flag",E,E,88,N],[12,R[34],E,E,88,N],[3,R[100],E,E,N,N],[3,R[101],E,E,N,N],[12,"significand",E,E,89,N],[12,"exponent",E,E,89,N],[3,R[102],E,E,N,N],[12,"element",E,E,90,N],[3,R[103],E,E,N,N],[12,"cwd",E,E,91,N],[12,"swd",E,E,91,N],[12,"ftw",E,E,91,N],[12,"fop",E,E,91,N],[12,"rip",E,E,91,N],[12,"rdp",E,E,91,N],[12,"mxcsr",E,E,91,N],[12,R[35],E,E,91,N],[12,"_st",E,E,91,N],[12,"_xmm",E,E,91,N],[3,R[104],E,E,N,N],[12,"cwd",E,E,92,N],[12,"swd",E,E,92,N],[12,"ftw",E,E,92,N],[12,"fop",E,E,92,N],[12,"rip",E,E,92,N],[12,"rdp",E,E,92,N],[12,"mxcsr",E,E,92,N],[12,R[35],E,E,92,N],[12,"st_space",E,E,92,N],[12,"xmm_space",E,E,92,N],[3,R[105],E,E,N,N],[12,"r15",E,E,93,N],[12,"r14",E,E,93,N],[12,"r13",E,E,93,N],[12,"r12",E,E,93,N],[12,"rbp",E,E,93,N],[12,"rbx",E,E,93,N],[12,"r11",E,E,93,N],[12,"r10",E,E,93,N],[12,"r9",E,E,93,N],[12,"r8",E,E,93,N],[12,"rax",E,E,93,N],[12,"rcx",E,E,93,N],[12,"rdx",E,E,93,N],[12,"rsi",E,E,93,N],[12,"rdi",E,E,93,N],[12,"orig_rax",E,E,93,N],[12,"rip",E,E,93,N],[12,"cs",E,E,93,N],[12,"eflags",E,E,93,N],[12,"rsp",E,E,93,N],[12,"ss",E,E,93,N],[12,"fs_base",E,E,93,N],[12,"gs_base",E,E,93,N],[12,"ds",E,E,93,N],[12,"es",E,E,93,N],[12,"fs",E,E,93,N],[12,"gs",E,E,93,N],[3,"user",E,E,N,N],[12,"regs",E,E,94,N],[12,"u_fpvalid",E,E,94,N],[12,"i387",E,E,94,N],[12,"u_tsize",E,E,94,N],[12,"u_dsize",E,E,94,N],[12,"u_ssize",E,E,94,N],[12,"start_code",E,E,94,N],[12,"start_stack",E,E,94,N],[12,"signal",E,E,94,N],[12,"u_ar0",E,E,94,N],[12,"u_fpstate",E,E,94,N],[12,"magic",E,E,94,N],[12,"u_comm",E,E,94,N],[12,"u_debugreg",E,E,94,N],[3,R[106],E,E,N,N],[12,"gregs",E,E,95,N],[12,"fpregs",E,E,95,N],[3,R[107],E,E,N,N],[12,"uc_flags",E,E,96,N],[12,"uc_link",E,E,96,N],[12,"uc_stack",E,E,96,N],[12,"uc_mcontext",E,E,96,N],[12,"uc_sigmask",E,E,96,N],[3,R[111],E,E,N,N],[12,"__key",E,E,97,N],[12,"uid",E,E,97,N],[12,"gid",E,E,97,N],[12,"cuid",E,E,97,N],[12,"cgid",E,E,97,N],[12,"mode",E,E,97,N],[12,"__seq",E,E,97,N],[3,R[112],E,E,N,N],[12,"shm_perm",E,E,98,N],[12,"shm_segsz",E,E,98,N],[12,"shm_atime",E,E,98,N],[12,"shm_dtime",E,E,98,N],[12,"shm_ctime",E,E,98,N],[12,"shm_cpid",E,E,98,N],[12,"shm_lpid",E,E,98,N],[12,"shm_nattch",E,E,98,N],[3,R[113],E,E,N,N],[12,"c_iflag",E,E,99,N],[12,"c_oflag",E,E,99,N],[12,"c_cflag",E,E,99,N],[12,"c_lflag",E,E,99,N],[12,"c_line",E,E,99,N],[12,"c_cc",E,E,99,N],[12,R[36],E,E,99,N],[12,R[37],E,E,99,N],[4,"c_void",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,"DIR",E,E,N,N],[4,"locale_t",E,E,N,N],[4,"timezone",E,E,N,N],[4,"fpos64_t",E,E,N,N],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"CPU_ZERO",E,E,N,[[[R[38]]]]],[5,"CPU_SET",E,E,N,[[[R[38]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[38]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[38]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[38]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,R[1099],E,E,N,N],[5,R[1100],E,E,N,N],[5,R[1098],E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,R[2093],E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,R[1048],E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,R[1097],E,E,N,N],[5,"raise",E,E,N,N],[5,R[39],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"uname",E,E,N,N],[5,R[1279],E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"sem_init",E,E,N,N],[5,R[76],E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,R[1153],E,E,N,N],[5,R[1154],E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,R[1155],E,E,N,N],[5,R[1156],E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,R[1157],E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[40],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[41],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[42],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,R[1049],E,E,N,N],[5,R[1070],E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,R[1278],E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,R[99],E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,R[1081],E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,R[1090],E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,R[1160],E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,R[1046],E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,R[1110],E,E,N,N],[17,R[1111],E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,R[1109],E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,R[1145],E,E,N,N],[17,R[1144],E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,R[1003],E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,R[1004],E,E,N,N],[17,R[1005],E,E,N,N],[17,R[1029],E,E,N,N],[17,R[1030],E,E,N,N],[17,R[1031],E,E,N,N],[17,R[1032],E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,R[1149],E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,R[1167],E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[1191],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,R[1033],E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,R[1034],E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,R[1035],E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,R[1036],E,E,N,N],[17,R[1037],E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,R[1038],E,E,N,N],[17,R[1039],E,E,N,N],[17,R[1040],E,E,N,N],[17,R[1041],E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,R[1042],E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,R[1001],E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,R[1192],E,E,N,N],[17,R[1193],E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,R[1176],E,E,N,N],[17,R[1177],E,E,N,N],[17,R[1178],E,E,N,N],[17,R[1179],E,E,N,N],[17,R[1180],E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,R[1181],E,E,N,N],[17,R[1182],E,E,N,N],[17,R[1183],E,E,N,N],[17,R[1184],E,E,N,N],[17,R[1185],E,E,N,N],[17,R[1186],E,E,N,N],[17,R[1187],E,E,N,N],[17,R[1188],E,E,N,N],[17,R[1189],E,E,N,N],[17,R[1190],E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,R[1108],E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,R[1146],E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,R[1147],E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,R[1137],E,E,N,N],[17,R[1138],E,E,N,N],[17,R[1139],E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,R[1140],E,E,N,N],[17,R[1141],E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,R[1142],E,E,N,N],[17,R[1143],E,E,N,N],[17,R[1135],E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,R[1136],E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,R[1071],E,E,N,N],[17,R[1072],E,E,N,N],[17,R[1073],E,E,N,N],[17,R[1074],E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,R[1243],E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,R[1244],E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,R[1051],E,E,N,N],[17,R[1052],E,E,N,N],[17,R[1053],E,E,N,N],[17,R[1054],E,E,N,N],[17,R[1055],E,E,N,N],[17,R[1056],E,E,N,N],[17,R[1057],E,E,N,N],[17,R[1058],E,E,N,N],[17,R[1059],E,E,N,N],[17,R[1060],E,E,N,N],[17,R[1061],E,E,N,N],[17,R[1062],E,E,N,N],[17,R[1063],E,E,N,N],[17,R[1064],E,E,N,N],[17,R[1065],E,E,N,N],[17,R[1066],E,E,N,N],[17,R[1067],E,E,N,N],[17,R[1068],E,E,N,N],[17,R[1069],E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,R[1231],E,E,N,N],[17,R[1232],E,E,N,N],[17,R[1233],E,E,N,N],[17,R[1234],E,E,N,N],[17,R[1235],E,E,N,N],[17,R[1236],E,E,N,N],[17,R[1237],E,E,N,N],[17,R[1238],E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,R[1224],E,E,N,N],[17,R[1225],E,E,N,N],[17,R[1226],E,E,N,N],[17,R[1227],E,E,N,N],[17,R[1228],E,E,N,N],[17,R[1229],E,E,N,N],[17,R[1230],E,E,N,N],[17,R[1165],E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,R[1023],E,E,N,N],[17,R[1024],E,E,N,N],[17,R[1025],E,E,N,N],[17,R[1026],E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,R[1076],E,E,N,N],[17,R[1240],E,E,N,N],[17,R[1241],E,E,N,N],[17,R[1242],E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,R[1078],E,E,N,N],[17,R[1079],E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,R[1148],E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,R[1168],E,E,N,N],[17,R[1170],E,E,N,N],[17,R[1171],E,E,N,N],[17,R[1173],E,E,N,N],[17,R[1174],E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,R[991],E,E,N,N],[17,R[1106],E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,R[1107],E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,R[1246],E,E,N,N],[17,R[1248],E,E,N,N],[17,R[1249],E,E,N,N],[17,R[1250],E,E,N,N],[17,R[1251],E,E,N,N],[17,R[1252],E,E,N,N],[17,R[1253],E,E,N,N],[17,R[1254],E,E,N,N],[17,R[1255],E,E,N,N],[17,R[1256],E,E,N,N],[17,R[1257],E,E,N,N],[17,R[1258],E,E,N,N],[17,R[1259],E,E,N,N],[17,R[1260],E,E,N,N],[17,R[1261],E,E,N,N],[17,R[1262],E,E,N,N],[17,R[1263],E,E,N,N],[17,R[1264],E,E,N,N],[17,R[1265],E,E,N,N],[17,R[1266],E,E,N,N],[17,R[1267],E,E,N,N],[17,R[1268],E,E,N,N],[17,R[1269],E,E,N,N],[17,R[1270],E,E,N,N],[17,R[1271],E,E,N,N],[17,R[1272],E,E,N,N],[17,"VEOF",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,R[1195],E,E,N,N],[17,R[1196],E,E,N,N],[17,R[1197],E,E,N,N],[17,R[1198],E,E,N,N],[17,R[1199],E,E,N,N],[17,R[1200],E,E,N,N],[17,R[1201],E,E,N,N],[17,R[1202],E,E,N,N],[17,R[1203],E,E,N,N],[17,R[1204],E,E,N,N],[17,R[1209],E,E,N,N],[17,R[1213],E,E,N,N],[17,R[1214],E,E,N,N],[17,R[1215],E,E,N,N],[17,R[1216],E,E,N,N],[17,R[1217],E,E,N,N],[17,R[1218],E,E,N,N],[17,R[1219],E,E,N,N],[17,R[1220],E,E,N,N],[17,R[1221],E,E,N,N],[17,R[1222],E,E,N,N],[17,R[1223],E,E,N,N],[17,R[1075],E,E,N,N],[17,R[1175],E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,R[1027],E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,R[1045],E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,R[1169],E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,R[966],E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,R[967],E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,R[968],E,E,N,N],[17,R[969],E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,R[970],E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,R[971],E,E,N,N],[17,R[972],E,E,N,N],[17,R[973],E,E,N,N],[17,R[974],E,E,N,N],[17,R[975],E,E,N,N],[17,R[976],E,E,N,N],[17,R[977],E,E,N,N],[17,R[978],E,E,N,N],[17,R[979],E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,R[980],E,E,N,N],[17,R[981],E,E,N,N],[17,R[982],E,E,N,N],[17,R[983],E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,R[984],E,E,N,N],[17,R[985],E,E,N,N],[17,R[986],E,E,N,N],[17,R[987],E,E,N,N],[17,R[988],E,E,N,N],[17,R[989],E,E,N,N],[17,"EALREADY",E,E,N,N],[17,R[990],E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,R[992],E,E,N,N],[17,R[993],E,E,N,N],[17,R[994],E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,R[995],E,E,N,N],[17,R[996],E,E,N,N],[17,R[997],E,E,N,N],[17,R[998],E,E,N,N],[17,R[999],E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,R[1129],E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,R[1116],E,E,N,N],[17,R[1114],E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,R[1132],E,E,N,N],[17,R[1124],E,E,N,N],[17,R[1117],E,E,N,N],[17,R[1118],E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,R[1122],E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,R[1115],E,E,N,N],[17,R[1130],E,E,N,N],[17,R[1119],E,E,N,N],[17,R[1121],E,E,N,N],[17,R[1125],E,E,N,N],[17,R[1126],E,E,N,N],[17,R[1127],E,E,N,N],[17,R[1128],E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,R[1113],E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,R[1133],E,E,N,N],[17,R[1112],E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,R[1123],E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,R[1131],E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,R[1120],E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,R[1134],E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,R[1083],E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,R[1086],E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,R[1085],E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,R[1210],E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,R[1084],E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,R[1082],E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,R[1028],E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,R[1172],E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,R[1207],E,E,N,N],[17,R[1208],E,E,N,N],[17,R[1211],E,E,N,N],[17,R[1212],E,E,N,N],[17,R[1205],E,E,N,N],[17,R[1206],E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"],[T]]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"],[T]]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[44],E,E,23,[[["self"],[T]]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"],[T]]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"],[T]]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[43],E,E,27,[[["self"]],[T]]],[11,R[44],E,E,27,[[["self"],[T]]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[43],E,E,100,[[["self"]],[T]]],[11,R[44],E,E,100,[[["self"],[T]]]],[11,R[45],E,E,100,[[[U]],[R[48]]]],[11,R[46],E,E,100,[[],[R[48]]]],[11,R[50],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"]],[T]]],[11,R[49],E,E,100,[[["self"]],[R[51]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[43],E,E,28,[[["self"]],[T]]],[11,R[44],E,E,28,[[["self"],[T]]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[43],E,E,29,[[["self"]],[T]]],[11,R[44],E,E,29,[[["self"],[T]]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[43],E,E,30,[[["self"]],[T]]],[11,R[44],E,E,30,[[["self"],[T]]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[44],E,E,31,[[["self"],[T]]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[44],E,E,35,[[["self"],[T]]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[44],E,E,36,[[["self"],[T]]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[44],E,E,37,[[["self"],[T]]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[44],E,E,39,[[["self"],[T]]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[43],E,E,101,[[["self"]],[T]]],[11,R[44],E,E,101,[[["self"],[T]]]],[11,R[45],E,E,101,[[[U]],[R[48]]]],[11,R[46],E,E,101,[[],[R[48]]]],[11,R[50],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"]],[T]]],[11,R[49],E,E,101,[[["self"]],[R[51]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[43],E,E,102,[[["self"]],[T]]],[11,R[44],E,E,102,[[["self"],[T]]]],[11,R[45],E,E,102,[[[U]],[R[48]]]],[11,R[46],E,E,102,[[],[R[48]]]],[11,R[50],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"]],[T]]],[11,R[49],E,E,102,[[["self"]],[R[51]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[43],E,E,103,[[["self"]],[T]]],[11,R[44],E,E,103,[[["self"],[T]]]],[11,R[45],E,E,103,[[[U]],[R[48]]]],[11,R[46],E,E,103,[[],[R[48]]]],[11,R[50],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"]],[T]]],[11,R[49],E,E,103,[[["self"]],[R[51]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[43],E,E,104,[[["self"]],[T]]],[11,R[44],E,E,104,[[["self"],[T]]]],[11,R[45],E,E,104,[[[U]],[R[48]]]],[11,R[46],E,E,104,[[],[R[48]]]],[11,R[50],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"]],[T]]],[11,R[49],E,E,104,[[["self"]],[R[51]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[43],E,E,105,[[["self"]],[T]]],[11,R[44],E,E,105,[[["self"],[T]]]],[11,R[45],E,E,105,[[[U]],[R[48]]]],[11,R[46],E,E,105,[[],[R[48]]]],[11,R[50],E,E,105,[[["self"]],[T]]],[11,R[47],E,E,105,[[["self"]],[T]]],[11,R[49],E,E,105,[[["self"]],[R[51]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[43],E,E,106,[[["self"]],[T]]],[11,R[44],E,E,106,[[["self"],[T]]]],[11,R[45],E,E,106,[[[U]],[R[48]]]],[11,R[46],E,E,106,[[],[R[48]]]],[11,R[50],E,E,106,[[["self"]],[T]]],[11,R[47],E,E,106,[[["self"]],[T]]],[11,R[49],E,E,106,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[43],E,E,41,[[["self"]],[T]]],[11,R[44],E,E,41,[[["self"],[T]]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[43],E,E,42,[[["self"]],[T]]],[11,R[44],E,E,42,[[["self"],[T]]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[43],E,E,43,[[["self"]],[T]]],[11,R[44],E,E,43,[[["self"],[T]]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[43],E,E,44,[[["self"]],[T]]],[11,R[44],E,E,44,[[["self"],[T]]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[43],E,E,45,[[["self"]],[T]]],[11,R[44],E,E,45,[[["self"],[T]]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[43],E,E,107,[[["self"]],[T]]],[11,R[44],E,E,107,[[["self"],[T]]]],[11,R[45],E,E,107,[[[U]],[R[48]]]],[11,R[46],E,E,107,[[],[R[48]]]],[11,R[50],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"]],[T]]],[11,R[49],E,E,107,[[["self"]],[R[51]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[43],E,E,46,[[["self"]],[T]]],[11,R[44],E,E,46,[[["self"],[T]]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[43],E,E,108,[[["self"]],[T]]],[11,R[44],E,E,108,[[["self"],[T]]]],[11,R[45],E,E,108,[[[U]],[R[48]]]],[11,R[46],E,E,108,[[],[R[48]]]],[11,R[50],E,E,108,[[["self"]],[T]]],[11,R[47],E,E,108,[[["self"]],[T]]],[11,R[49],E,E,108,[[["self"]],[R[51]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[43],E,E,48,[[["self"]],[T]]],[11,R[44],E,E,48,[[["self"],[T]]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[43],E,E,49,[[["self"]],[T]]],[11,R[44],E,E,49,[[["self"],[T]]]],[11,R[45],E,E,49,[[[U]],[R[48]]]],[11,R[46],E,E,49,[[],[R[48]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[51]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[43],E,E,50,[[["self"]],[T]]],[11,R[44],E,E,50,[[["self"],[T]]]],[11,R[45],E,E,50,[[[U]],[R[48]]]],[11,R[46],E,E,50,[[],[R[48]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[51]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[43],E,E,51,[[["self"]],[T]]],[11,R[44],E,E,51,[[["self"],[T]]]],[11,R[45],E,E,51,[[[U]],[R[48]]]],[11,R[46],E,E,51,[[],[R[48]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[51]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[43],E,E,52,[[["self"]],[T]]],[11,R[44],E,E,52,[[["self"],[T]]]],[11,R[45],E,E,52,[[[U]],[R[48]]]],[11,R[46],E,E,52,[[],[R[48]]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[["self"]],[R[51]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[43],E,E,53,[[["self"]],[T]]],[11,R[44],E,E,53,[[["self"],[T]]]],[11,R[45],E,E,53,[[[U]],[R[48]]]],[11,R[46],E,E,53,[[],[R[48]]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[["self"]],[R[51]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[43],E,E,54,[[["self"]],[T]]],[11,R[44],E,E,54,[[["self"],[T]]]],[11,R[45],E,E,54,[[[U]],[R[48]]]],[11,R[46],E,E,54,[[],[R[48]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[51]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[43],E,E,55,[[["self"]],[T]]],[11,R[44],E,E,55,[[["self"],[T]]]],[11,R[45],E,E,55,[[[U]],[R[48]]]],[11,R[46],E,E,55,[[],[R[48]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[51]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[43],E,E,56,[[["self"]],[T]]],[11,R[44],E,E,56,[[["self"],[T]]]],[11,R[45],E,E,56,[[[U]],[R[48]]]],[11,R[46],E,E,56,[[],[R[48]]]],[11,R[50],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"]],[T]]],[11,R[49],E,E,56,[[["self"]],[R[51]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[43],E,E,57,[[["self"]],[T]]],[11,R[44],E,E,57,[[["self"],[T]]]],[11,R[45],E,E,57,[[[U]],[R[48]]]],[11,R[46],E,E,57,[[],[R[48]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[51]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[43],E,E,58,[[["self"]],[T]]],[11,R[44],E,E,58,[[["self"],[T]]]],[11,R[45],E,E,58,[[[U]],[R[48]]]],[11,R[46],E,E,58,[[],[R[48]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[51]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[43],E,E,59,[[["self"]],[T]]],[11,R[44],E,E,59,[[["self"],[T]]]],[11,R[45],E,E,59,[[[U]],[R[48]]]],[11,R[46],E,E,59,[[],[R[48]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[51]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[43],E,E,60,[[["self"]],[T]]],[11,R[44],E,E,60,[[["self"],[T]]]],[11,R[45],E,E,60,[[[U]],[R[48]]]],[11,R[46],E,E,60,[[],[R[48]]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[["self"]],[R[51]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[43],E,E,61,[[["self"]],[T]]],[11,R[44],E,E,61,[[["self"],[T]]]],[11,R[45],E,E,61,[[[U]],[R[48]]]],[11,R[46],E,E,61,[[],[R[48]]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[["self"]],[R[51]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[43],E,E,62,[[["self"]],[T]]],[11,R[44],E,E,62,[[["self"],[T]]]],[11,R[45],E,E,62,[[[U]],[R[48]]]],[11,R[46],E,E,62,[[],[R[48]]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"]],[T]]],[11,R[49],E,E,62,[[["self"]],[R[51]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[43],E,E,63,[[["self"]],[T]]],[11,R[44],E,E,63,[[["self"],[T]]]],[11,R[45],E,E,63,[[[U]],[R[48]]]],[11,R[46],E,E,63,[[],[R[48]]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[["self"]],[R[51]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[43],E,E,64,[[["self"]],[T]]],[11,R[44],E,E,64,[[["self"],[T]]]],[11,R[45],E,E,64,[[[U]],[R[48]]]],[11,R[46],E,E,64,[[],[R[48]]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[["self"]],[R[51]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[43],E,E,65,[[["self"]],[T]]],[11,R[44],E,E,65,[[["self"],[T]]]],[11,R[45],E,E,65,[[[U]],[R[48]]]],[11,R[46],E,E,65,[[],[R[48]]]],[11,R[50],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"]],[T]]],[11,R[49],E,E,65,[[["self"]],[R[51]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[43],E,E,66,[[["self"]],[T]]],[11,R[44],E,E,66,[[["self"],[T]]]],[11,R[45],E,E,66,[[[U]],[R[48]]]],[11,R[46],E,E,66,[[],[R[48]]]],[11,R[50],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[["self"]],[R[51]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[43],E,E,67,[[["self"]],[T]]],[11,R[44],E,E,67,[[["self"],[T]]]],[11,R[45],E,E,67,[[[U]],[R[48]]]],[11,R[46],E,E,67,[[],[R[48]]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[["self"]],[R[51]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[43],E,E,68,[[["self"]],[T]]],[11,R[44],E,E,68,[[["self"],[T]]]],[11,R[45],E,E,68,[[[U]],[R[48]]]],[11,R[46],E,E,68,[[],[R[48]]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[["self"]],[R[51]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[43],E,E,69,[[["self"]],[T]]],[11,R[44],E,E,69,[[["self"],[T]]]],[11,R[45],E,E,69,[[[U]],[R[48]]]],[11,R[46],E,E,69,[[],[R[48]]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[["self"]],[R[51]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[43],E,E,70,[[["self"]],[T]]],[11,R[44],E,E,70,[[["self"],[T]]]],[11,R[45],E,E,70,[[[U]],[R[48]]]],[11,R[46],E,E,70,[[],[R[48]]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[["self"]],[R[51]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[43],E,E,71,[[["self"]],[T]]],[11,R[44],E,E,71,[[["self"],[T]]]],[11,R[45],E,E,71,[[[U]],[R[48]]]],[11,R[46],E,E,71,[[],[R[48]]]],[11,R[50],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[["self"]],[R[51]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[43],E,E,72,[[["self"]],[T]]],[11,R[44],E,E,72,[[["self"],[T]]]],[11,R[45],E,E,72,[[[U]],[R[48]]]],[11,R[46],E,E,72,[[],[R[48]]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[["self"]],[R[51]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[43],E,E,73,[[["self"]],[T]]],[11,R[44],E,E,73,[[["self"],[T]]]],[11,R[45],E,E,73,[[[U]],[R[48]]]],[11,R[46],E,E,73,[[],[R[48]]]],[11,R[50],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"]],[T]]],[11,R[49],E,E,73,[[["self"]],[R[51]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[43],E,E,74,[[["self"]],[T]]],[11,R[44],E,E,74,[[["self"],[T]]]],[11,R[45],E,E,74,[[[U]],[R[48]]]],[11,R[46],E,E,74,[[],[R[48]]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[["self"]],[R[51]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[43],E,E,75,[[["self"]],[T]]],[11,R[44],E,E,75,[[["self"],[T]]]],[11,R[45],E,E,75,[[[U]],[R[48]]]],[11,R[46],E,E,75,[[],[R[48]]]],[11,R[50],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"]],[T]]],[11,R[49],E,E,75,[[["self"]],[R[51]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[43],E,E,76,[[["self"]],[T]]],[11,R[44],E,E,76,[[["self"],[T]]]],[11,R[45],E,E,76,[[[U]],[R[48]]]],[11,R[46],E,E,76,[[],[R[48]]]],[11,R[50],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"]],[T]]],[11,R[49],E,E,76,[[["self"]],[R[51]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[43],E,E,77,[[["self"]],[T]]],[11,R[44],E,E,77,[[["self"],[T]]]],[11,R[45],E,E,77,[[[U]],[R[48]]]],[11,R[46],E,E,77,[[],[R[48]]]],[11,R[50],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"]],[T]]],[11,R[49],E,E,77,[[["self"]],[R[51]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[43],E,E,78,[[["self"]],[T]]],[11,R[44],E,E,78,[[["self"],[T]]]],[11,R[45],E,E,78,[[[U]],[R[48]]]],[11,R[46],E,E,78,[[],[R[48]]]],[11,R[50],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"]],[T]]],[11,R[49],E,E,78,[[["self"]],[R[51]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[43],E,E,79,[[["self"]],[T]]],[11,R[44],E,E,79,[[["self"],[T]]]],[11,R[45],E,E,79,[[[U]],[R[48]]]],[11,R[46],E,E,79,[[],[R[48]]]],[11,R[50],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"]],[T]]],[11,R[49],E,E,79,[[["self"]],[R[51]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[43],E,E,80,[[["self"]],[T]]],[11,R[44],E,E,80,[[["self"],[T]]]],[11,R[45],E,E,80,[[[U]],[R[48]]]],[11,R[46],E,E,80,[[],[R[48]]]],[11,R[50],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"]],[T]]],[11,R[49],E,E,80,[[["self"]],[R[51]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[43],E,E,81,[[["self"]],[T]]],[11,R[44],E,E,81,[[["self"],[T]]]],[11,R[45],E,E,81,[[[U]],[R[48]]]],[11,R[46],E,E,81,[[],[R[48]]]],[11,R[50],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"]],[T]]],[11,R[49],E,E,81,[[["self"]],[R[51]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[43],E,E,82,[[["self"]],[T]]],[11,R[44],E,E,82,[[["self"],[T]]]],[11,R[45],E,E,82,[[[U]],[R[48]]]],[11,R[46],E,E,82,[[],[R[48]]]],[11,R[50],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"]],[T]]],[11,R[49],E,E,82,[[["self"]],[R[51]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[43],E,E,109,[[["self"]],[T]]],[11,R[44],E,E,109,[[["self"],[T]]]],[11,R[45],E,E,109,[[[U]],[R[48]]]],[11,R[46],E,E,109,[[],[R[48]]]],[11,R[50],E,E,109,[[["self"]],[T]]],[11,R[47],E,E,109,[[["self"]],[T]]],[11,R[49],E,E,109,[[["self"]],[R[51]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[43],E,E,110,[[["self"]],[T]]],[11,R[44],E,E,110,[[["self"],[T]]]],[11,R[45],E,E,110,[[[U]],[R[48]]]],[11,R[46],E,E,110,[[],[R[48]]]],[11,R[50],E,E,110,[[["self"]],[T]]],[11,R[47],E,E,110,[[["self"]],[T]]],[11,R[49],E,E,110,[[["self"]],[R[51]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[43],E,E,83,[[["self"]],[T]]],[11,R[44],E,E,83,[[["self"],[T]]]],[11,R[45],E,E,83,[[[U]],[R[48]]]],[11,R[46],E,E,83,[[],[R[48]]]],[11,R[50],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"]],[T]]],[11,R[49],E,E,83,[[["self"]],[R[51]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[43],E,E,84,[[["self"]],[T]]],[11,R[44],E,E,84,[[["self"],[T]]]],[11,R[45],E,E,84,[[[U]],[R[48]]]],[11,R[46],E,E,84,[[],[R[48]]]],[11,R[50],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"]],[T]]],[11,R[49],E,E,84,[[["self"]],[R[51]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[43],E,E,85,[[["self"]],[T]]],[11,R[44],E,E,85,[[["self"],[T]]]],[11,R[45],E,E,85,[[[U]],[R[48]]]],[11,R[46],E,E,85,[[],[R[48]]]],[11,R[50],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"]],[T]]],[11,R[49],E,E,85,[[["self"]],[R[51]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[43],E,E,86,[[["self"]],[T]]],[11,R[44],E,E,86,[[["self"],[T]]]],[11,R[45],E,E,86,[[[U]],[R[48]]]],[11,R[46],E,E,86,[[],[R[48]]]],[11,R[50],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"]],[T]]],[11,R[49],E,E,86,[[["self"]],[R[51]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[43],E,E,87,[[["self"]],[T]]],[11,R[44],E,E,87,[[["self"],[T]]]],[11,R[45],E,E,87,[[[U]],[R[48]]]],[11,R[46],E,E,87,[[],[R[48]]]],[11,R[50],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"]],[T]]],[11,R[49],E,E,87,[[["self"]],[R[51]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[43],E,E,88,[[["self"]],[T]]],[11,R[44],E,E,88,[[["self"],[T]]]],[11,R[45],E,E,88,[[[U]],[R[48]]]],[11,R[46],E,E,88,[[],[R[48]]]],[11,R[50],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"]],[T]]],[11,R[49],E,E,88,[[["self"]],[R[51]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[43],E,E,111,[[["self"]],[T]]],[11,R[44],E,E,111,[[["self"],[T]]]],[11,R[45],E,E,111,[[[U]],[R[48]]]],[11,R[46],E,E,111,[[],[R[48]]]],[11,R[50],E,E,111,[[["self"]],[T]]],[11,R[47],E,E,111,[[["self"]],[T]]],[11,R[49],E,E,111,[[["self"]],[R[51]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[43],E,E,89,[[["self"]],[T]]],[11,R[44],E,E,89,[[["self"],[T]]]],[11,R[45],E,E,89,[[[U]],[R[48]]]],[11,R[46],E,E,89,[[],[R[48]]]],[11,R[50],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"]],[T]]],[11,R[49],E,E,89,[[["self"]],[R[51]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[43],E,E,90,[[["self"]],[T]]],[11,R[44],E,E,90,[[["self"],[T]]]],[11,R[45],E,E,90,[[[U]],[R[48]]]],[11,R[46],E,E,90,[[],[R[48]]]],[11,R[50],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"]],[T]]],[11,R[49],E,E,90,[[["self"]],[R[51]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[43],E,E,91,[[["self"]],[T]]],[11,R[44],E,E,91,[[["self"],[T]]]],[11,R[45],E,E,91,[[[U]],[R[48]]]],[11,R[46],E,E,91,[[],[R[48]]]],[11,R[50],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"]],[T]]],[11,R[49],E,E,91,[[["self"]],[R[51]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[43],E,E,92,[[["self"]],[T]]],[11,R[44],E,E,92,[[["self"],[T]]]],[11,R[45],E,E,92,[[[U]],[R[48]]]],[11,R[46],E,E,92,[[],[R[48]]]],[11,R[50],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"]],[T]]],[11,R[49],E,E,92,[[["self"]],[R[51]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[43],E,E,93,[[["self"]],[T]]],[11,R[44],E,E,93,[[["self"],[T]]]],[11,R[45],E,E,93,[[[U]],[R[48]]]],[11,R[46],E,E,93,[[],[R[48]]]],[11,R[50],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"]],[T]]],[11,R[49],E,E,93,[[["self"]],[R[51]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[43],E,E,94,[[["self"]],[T]]],[11,R[44],E,E,94,[[["self"],[T]]]],[11,R[45],E,E,94,[[[U]],[R[48]]]],[11,R[46],E,E,94,[[],[R[48]]]],[11,R[50],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"]],[T]]],[11,R[49],E,E,94,[[["self"]],[R[51]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[43],E,E,95,[[["self"]],[T]]],[11,R[44],E,E,95,[[["self"],[T]]]],[11,R[45],E,E,95,[[[U]],[R[48]]]],[11,R[46],E,E,95,[[],[R[48]]]],[11,R[50],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"]],[T]]],[11,R[49],E,E,95,[[["self"]],[R[51]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[43],E,E,96,[[["self"]],[T]]],[11,R[44],E,E,96,[[["self"],[T]]]],[11,R[45],E,E,96,[[[U]],[R[48]]]],[11,R[46],E,E,96,[[],[R[48]]]],[11,R[50],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"]],[T]]],[11,R[49],E,E,96,[[["self"]],[R[51]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[43],E,E,97,[[["self"]],[T]]],[11,R[44],E,E,97,[[["self"],[T]]]],[11,R[45],E,E,97,[[[U]],[R[48]]]],[11,R[46],E,E,97,[[],[R[48]]]],[11,R[50],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"]],[T]]],[11,R[49],E,E,97,[[["self"]],[R[51]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[43],E,E,98,[[["self"]],[T]]],[11,R[44],E,E,98,[[["self"],[T]]]],[11,R[45],E,E,98,[[[U]],[R[48]]]],[11,R[46],E,E,98,[[],[R[48]]]],[11,R[50],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"]],[T]]],[11,R[49],E,E,98,[[["self"]],[R[51]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[43],E,E,99,[[["self"]],[T]]],[11,R[44],E,E,99,[[["self"],[T]]]],[11,R[45],E,E,99,[[[U]],[R[48]]]],[11,R[46],E,E,99,[[],[R[48]]]],[11,R[50],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"]],[T]]],[11,R[49],E,E,99,[[["self"]],[R[51]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[45],E,E,112,[[[U]],[R[48]]]],[11,R[46],E,E,112,[[],[R[48]]]],[11,R[50],E,E,112,[[["self"]],[T]]],[11,R[47],E,E,112,[[["self"]],[T]]],[11,R[49],E,E,112,[[["self"]],[R[51]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[45],E,E,113,[[[U]],[R[48]]]],[11,R[46],E,E,113,[[],[R[48]]]],[11,R[50],E,E,113,[[["self"]],[T]]],[11,R[47],E,E,113,[[["self"]],[T]]],[11,R[49],E,E,113,[[["self"]],[R[51]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[45],E,E,114,[[[U]],[R[48]]]],[11,R[46],E,E,114,[[],[R[48]]]],[11,R[50],E,E,114,[[["self"]],[T]]],[11,R[47],E,E,114,[[["self"]],[T]]],[11,R[49],E,E,114,[[["self"]],[R[51]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[45],E,E,115,[[[U]],[R[48]]]],[11,R[46],E,E,115,[[],[R[48]]]],[11,R[50],E,E,115,[[["self"]],[T]]],[11,R[47],E,E,115,[[["self"]],[T]]],[11,R[49],E,E,115,[[["self"]],[R[51]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[45],E,E,116,[[[U]],[R[48]]]],[11,R[46],E,E,116,[[],[R[48]]]],[11,R[50],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"]],[T]]],[11,R[49],E,E,116,[[["self"]],[R[51]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[45],E,E,117,[[[U]],[R[48]]]],[11,R[46],E,E,117,[[],[R[48]]]],[11,R[50],E,E,117,[[["self"]],[T]]],[11,R[47],E,E,117,[[["self"]],[T]]],[11,R[49],E,E,117,[[["self"]],[R[51]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[45],E,E,118,[[[U]],[R[48]]]],[11,R[46],E,E,118,[[],[R[48]]]],[11,R[50],E,E,118,[[["self"]],[T]]],[11,R[47],E,E,118,[[["self"]],[T]]],[11,R[49],E,E,118,[[["self"]],[R[51]]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[52]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],["in_addr"]]],[11,"clone",E,E,7,[[["self"]],[R[53]]]],[11,"clone",E,E,8,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,9,[[["self"]],[R[54]]]],[11,"clone",E,E,10,[[["self"]],["hostent"]]],[11,"clone",E,E,11,[[["self"]],["iovec"]]],[11,"clone",E,E,12,[[["self"]],["pollfd"]]],[11,"clone",E,E,13,[[["self"]],["winsize"]]],[11,"clone",E,E,14,[[["self"]],["linger"]]],[11,"clone",E,E,15,[[["self"]],["sigval"]]],[11,"clone",E,E,16,[[["self"]],[R[55]]]],[11,"clone",E,E,17,[[["self"]],["tms"]]],[11,"clone",E,E,18,[[["self"]],["servent"]]],[11,"clone",E,E,19,[[["self"]],[R[56]]]],[11,"clone",E,E,20,[[["self"]],[R[57]]]],[11,"clone",E,E,21,[[["self"]],[R[58]]]],[11,"clone",E,E,22,[[["self"]],[R[59]]]],[11,"clone",E,E,23,[[["self"]],[R[60]]]],[11,"clone",E,E,24,[[["self"]],[R[61]]]],[11,"clone",E,E,25,[[["self"]],[R[62]]]],[11,"clone",E,E,26,[[["self"]],[R[63]]]],[11,"clone",E,E,27,[[["self"]],[R[64]]]],[11,"clone",E,E,100,[[["self"]],["fd_set"]]],[11,"clone",E,E,28,[[["self"]],["tm"]]],[11,"clone",E,E,29,[[["self"]],[R[65]]]],[11,"clone",E,E,30,[[["self"]],["dl_info"]]],[11,"clone",E,E,31,[[["self"]],[R[66]]]],[11,"clone",E,E,32,[[["self"]],["utsname"]]],[11,"clone",E,E,33,[[["self"]],["lconv"]]],[11,"clone",E,E,34,[[["self"]],[R[67]]]],[11,"clone",E,E,35,[[["self"]],["dirent"]]],[11,"clone",E,E,36,[[["self"]],[R[68]]]],[11,"clone",E,E,37,[[["self"]],[R[69]]]],[11,"clone",E,E,38,[[["self"]],["glob_t"]]],[11,"clone",E,E,39,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,101,[[["self"]],[R[70]]]],[11,"clone",E,E,102,[[["self"]],[R[71]]]],[11,"clone",E,E,103,[[["self"]],[R[72]]]],[11,"clone",E,E,104,[[["self"]],[R[73]]]],[11,"clone",E,E,105,[[["self"]],[R[74]]]],[11,"clone",E,E,106,[[["self"]],[R[75]]]],[11,"clone",E,E,40,[[["self"]],["passwd"]]],[11,"clone",E,E,41,[[["self"]],["spwd"]]],[11,"clone",E,E,42,[[["self"]],[R[76]]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[77]]]],[11,"clone",E,E,45,[[["self"]],[R[78]]]],[11,"clone",E,E,107,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],["mq_attr"]]],[11,"clone",E,E,108,[[["self"]],[R[38]]]],[11,"clone",E,E,47,[[["self"]],[R[42]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,50,[[["self"]],["sembuf"]]],[11,"clone",E,E,51,[[["self"]],[R[79]]]],[11,"clone",E,E,52,[[["self"]],[R[80]]]],[11,"clone",E,E,53,[[["self"]],[R[81]]]],[11,"clone",E,E,54,[[["self"]],[R[82]]]],[11,"clone",E,E,55,[[["self"]],[R[83]]]],[11,"clone",E,E,56,[[["self"]],[R[84]]]],[11,"clone",E,E,57,[[["self"]],[R[85]]]],[11,"clone",E,E,58,[[["self"]],[R[86]]]],[11,"clone",E,E,59,[[["self"]],[R[87]]]],[11,"clone",E,E,60,[[["self"]],[R[88]]]],[11,"clone",E,E,61,[[["self"]],[R[89]]]],[11,"clone",E,E,62,[[["self"]],[R[90]]]],[11,"clone",E,E,63,[[["self"]],[R[91]]]],[11,"clone",E,E,64,[[["self"]],[R[92]]]],[11,"clone",E,E,65,[[["self"]],[R[93]]]],[11,"clone",E,E,66,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,67,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,68,[[["self"]],["ucred"]]],[11,"clone",E,E,69,[[["self"]],["mntent"]]],[11,"clone",E,E,70,[[["self"]],["aiocb"]]],[11,"clone",E,E,71,[[["self"]],[R[94]]]],[11,"clone",E,E,72,[[["self"]],[R[95]]]],[11,"clone",E,E,73,[[["self"]],["utmpx"]]],[11,"clone",E,E,74,[[["self"]],[R[39]]]],[11,"clone",E,E,75,[[["self"]],["stack_t"]]],[11,"clone",E,E,76,[[["self"]],[R[96]]]],[11,"clone",E,E,77,[[["self"]],[R[97]]]],[11,"clone",E,E,78,[[["self"]],["statfs"]]],[11,"clone",E,E,79,[[["self"]],["msghdr"]]],[11,"clone",E,E,80,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,81,[[["self"]],["termios"]]],[11,"clone",E,E,82,[[["self"]],["flock"]]],[11,"clone",E,E,109,[[["self"]],["sem_t"]]],[11,"clone",E,E,110,[[["self"]],[R[98]]]],[11,"clone",E,E,83,[[["self"]],[R[99]]]],[11,"clone",E,E,84,[[["self"]],[R[110]]]],[11,"clone",E,E,85,[[["self"]],["stat"]]],[11,"clone",E,E,86,[[["self"]],["stat64"]]],[11,"clone",E,E,87,[[["self"]],[R[40]]]],[11,"clone",E,E,88,[[["self"]],[R[41]]]],[11,"clone",E,E,111,[[["self"]],[R[100]]]],[11,"clone",E,E,89,[[["self"]],[R[101]]]],[11,"clone",E,E,90,[[["self"]],[R[102]]]],[11,"clone",E,E,91,[[["self"]],[R[103]]]],[11,"clone",E,E,92,[[["self"]],[R[104]]]],[11,"clone",E,E,93,[[["self"]],[R[105]]]],[11,"clone",E,E,94,[[["self"]],["user"]]],[11,"clone",E,E,95,[[["self"]],[R[106]]]],[11,"clone",E,E,96,[[["self"]],[R[107]]]],[11,"clone",E,E,97,[[["self"]],[R[111]]]],[11,"clone",E,E,98,[[["self"]],[R[112]]]],[11,"clone",E,E,99,[[["self"]],[R[113]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[52]],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,R[53]],[3,"ip_mreq"],[3,R[54]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[55]],[3,"tms"],[3,"servent"],[3,R[56]],[3,R[57]],[3,R[58]],[3,R[59]],[3,R[60]],[3,R[61]],[3,R[62]],[3,R[63]],[3,R[64]],[3,"tm"],[3,R[65]],[3,"Dl_info"],[3,R[66]],[3,"utsname"],[3,"lconv"],[3,R[67]],[3,"dirent"],[3,R[68]],[3,R[69]],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,R[76]],[3,"dqblk"],[3,R[77]],[3,R[78]],[3,"mq_attr"],[3,R[42]],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,R[79]],[3,R[80]],[3,R[81]],[3,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[3,R[86]],[3,R[87]],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[108]],[3,R[109]],[3,"ucred"],[3,"mntent"],[3,"aiocb"],[3,R[94]],[3,R[95]],[3,"utmpx"],[3,R[39]],[3,"stack_t"],[3,R[96]],[3,R[97]],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,R[99]],[3,R[110]],[3,"stat"],[3,"stat64"],[3,R[40]],[3,R[41]],[3,R[101]],[3,R[102]],[3,R[103]],[3,R[104]],[3,R[105]],[3,"user"],[3,R[106]],[3,R[107]],[3,R[111]],[3,R[112]],[3,R[113]],[3,"fd_set"],[3,R[70]],[3,R[71]],[3,R[72]],[3,R[73]],[3,R[74]],[3,R[75]],[3,"fsid_t"],[3,R[38]],[3,"sem_t"],[3,R[98]],[3,R[100]],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["light_arena"]={"doc":"Temporarily a more simple memory pool for keeping stack…","i":[[3,R[692],"light_arena","Provides the backing storage to serve allocations…",N,N],[3,R[686],E,"The allocator provides exclusive access to the memory…",N,N],[11,"new",E,"Create a new `MemoryArena` with the requested block size…",0,[[["usize"]],["memoryarena"]]],[11,R[691],E,"Get an allocator for the arena. Only a single `Allocator`…",0,[[["self"]],[R[691]]]],[11,"alloc_slice",E,"Get a dynamically sized slice of data from the allocator.…",1,[[["self"],["usize"]]]],[11,"alloc",E,E,1,[[["sized"],["self"],["copy"]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"drop",E,"Upon dropping the allocator we mark all the blocks in the…",1,[[["self"]]]]],"p":[[3,R[692]],[3,R[686]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"LogRecord","log","The \"payload\" of a log message.",N,N],[3,R[1499],E,"Metadata about a log message.",N,N],[3,R[1500],E,"The location of a log message.",N,N],[3,R[1501],E,"A token providing read and write access to the global…",N,N],[3,R[898],E,"The type returned by `set_logger` if `set_logger` has…",N,N],[3,R[1502],E,"The type returned by `shutdown_logger_raw` if…",N,N],[4,"LogLevel",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[1498],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"max_log_level",E,"Returns the current maximum log level.",N,[[],[R[1494]]]],[5,"set_logger",E,"Sets the global logger.",N,[[["m"]],[[R[48],[R[885]]],[R[885]]]]],[5,"set_logger_raw",E,"Sets the global logger from a raw pointer.",N,[[["m"]],[[R[48],[R[885]]],[R[885]]]]],[5,"shutdown_logger",E,R[1493],N,[[],[[R[1492]],["box",["log"]],[R[48],["box",R[1492]]]]]],[5,"shutdown_logger_raw",E,R[1493],N,[[],[[R[48],[R[1492]]],[R[1492]]]]],[8,"Log",E,"A trait encapsulating the operations required of a logger",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[[R[1495]],["self"]],["bool"]]],[10,"log",E,"Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],[R[1497]]]],[11,"to_log_level_filter",E,"Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],[R[1494]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[1494]]]],[11,"to_log_level",E,"Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],[["option",[R[1497]]],[R[1497]]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[888]]]],[11,R[886],E,"Metadata about the log directive.",3,[[["self"]],[R[1495]]]],[11,"location",E,"The location of the log directive.",3,[[["self"]],[R[1496]]]],[11,"level",E,R[891],3,[[["self"]],[R[1497]]]],[11,"target",E,R[892],3,[[["self"]],["str"]]],[11,"level",E,R[891],4,[[["self"]],[R[1497]]]],[11,"target",E,R[892],4,[[["self"]],["str"]]],[11,R[889],E,"The module path of the message.",5,[[["self"]],["str"]]],[11,"file",E,"The source file containing the message.",5,[[["self"]],["str"]]],[11,"line",E,"The line containing the message.",5,[[["self"]],["u32"]]],[11,"get",E,"Gets the current maximum log level filter.",6,[[["self"]],[R[1494]]]],[11,"set",E,"Sets the maximum log level.",6,[[[R[1494]],["self"]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[205],E,E,7,[[["self"]],["string"]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[205],E,E,8,[[["self"]],["string"]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"clone",E,E,0,[[["self"]],[R[1497]]]],[11,"clone",E,E,1,[[["self"]],[R[1494]]]],[11,"clone",E,E,5,[[["self"]],[R[1496]]]],[11,"cmp",E,E,0,[[[R[1497]],["self"]],[R[313]]]],[11,"cmp",E,E,1,[[[R[1494]],["self"]],[R[313]]]],[11,"eq",E,E,0,[[[R[1497]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[1494]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[1494]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[1497]],["self"]],["bool"]]],[11,R[314],E,E,0,[[[R[1497]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,0,[[[R[1494]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,1,[[[R[1494]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,1,[[[R[1497]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,R[815],E,E,0,[[["str"]],[[R[1497]],[R[48],[R[1497]]]]]],[11,R[815],E,E,1,[[["str"]],[[R[1494]],[R[48],[R[1494]]]]]],[11,R[256],E,E,7,[[["self"]],["str"]]],[11,R[256],E,E,8,[[["self"]],["str"]]]],"p":[[4,"LogLevel"],[4,R[1498]],[8,"Log"],[3,"LogRecord"],[3,R[1499]],[3,R[1500]],[3,R[1501]],[3,R[898]],[3,R[1502]]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","i":[[3,R[391],"lzw","Decoder for a LZW compressed stream (this algorithm is…",N,N],[3,R[384],E,"Decoder for a LZW compressed stream using an “early…",N,N],[3,R[392],E,"LZW encoder using the algorithm of GIF files.",N,N],[3,R[385],E,"Reads bits from a byte stream, LSB first.",N,N],[3,R[387],E,"Writes bits to a byte stream, LSB first.",N,N],[3,R[386],E,"Reads bits from a byte stream, MSB first.",N,N],[3,R[388],E,"Writes bits to a byte stream, MSB first.",N,N],[4,"Bits",E,"Containes either the consumed bytes and reconstructed bits…",N,N],[13,"Some",E,"Consumed bytes, reconstructed bits",0,N],[13,"None",E,"Consumed bytes",0,N],[5,"encode",E,"Convenience function that reads and compresses all bytes…",N,[[["w"],["u8"],["r"]],[R[48]]]],[11,"new",E,R[378],1,[[["u8"],["r"]],["decoder"]]],[11,R[379],E,R[380],1,[[["self"]],[R[48]]]],[11,"new",E,R[378],2,[[["u8"],["r"]],["decoderearlychange"]]],[11,R[379],E,R[380],2,[[["self"]],[R[48]]]],[11,"new",E,"Creates a new LZW encoder.",3,[[["w"],["u8"]],[[R[48],["encoder"]],["encoder"]]]],[11,"encode_bytes",E,"Compresses `bytes` and writes the result into the writer.",3,[[["self"]],[R[48]]]],[11,"new",E,R[381],4,[[],["lsbreader"]]],[11,"new",E,R[381],5,[[],["msbreader"]]],[11,"new",E,R[381],6,[[["w"]],["lsbwriter"]]],[11,"new",E,R[381],7,[[["w"]],["msbwriter"]]],[8,R[389],E,"A bit reader.",N,N],[10,R[382],E,"Returns the next `n` bits.",8,[[["self"],["u8"]],["bits"]]],[8,R[390],E,"A bit writer.",N,N],[10,R[383],E,"Writes the next `n` bits.",9,[[["u16"],["self"],["u8"]],[R[48]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,R[382],E,E,4,[[["self"],["u8"]],["bits"]]],[11,R[382],E,E,5,[[["self"],["u8"]],["bits"]]],[11,R[383],E,E,6,[[["u16"],["self"],["u8"]],[R[48]]]],[11,R[383],E,E,7,[[["u16"],["self"],["u8"]],[R[48]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"write",E,E,6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,6,[[["self"]],[R[48]]]],[11,"write",E,E,7,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,7,[[["self"]],[R[48]]]]],"p":[[4,"Bits"],[3,R[391]],[3,R[384]],[3,R[392]],[3,R[385]],[3,R[386]],[3,R[387]],[3,R[388]],[8,R[389]],[8,R[390]]]};
searchIndex["memchr"]={"doc":"This crate defines two functions, `memchr` and `memrchr`,…","i":[[3,"Memchr","memchr","An iterator for memchr",N,N],[3,"Memchr2",E,"An iterator for Memchr2",N,N],[3,"Memchr3",E,"An iterator for Memchr3",N,N],[5,"memchr",E,"A safe interface to `memchr`.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr",E,"A safe interface to `memrchr`.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[11,"new",E,R[745],0,[[["u8"]],["memchr"]]],[11,"new",E,R[745],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new Memchr2 that's initalized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[364],E,E,0,[[],["i"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[364],E,E,1,[[],["i"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"next",E,E,0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[425],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[425],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[425],E,E,2,[[["self"]]]],[11,R[746],E,E,0,[[["self"]],["option"]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Ipv4Addr","mio","An IPv4 address.",N,N],[3,"Ipv6Addr",E,"An IPv6 address.",N,N],[3,"PollOpt",E,E,N,N],[3,"EventSet",E,E,N,N],[3,"IoEvent",E,E,N,N],[12,"kind",E,E,0,N],[12,"token",E,E,0,N],[3,"EventLoop",E,R[2055],N,N],[3,R[2087],E,"Configure EventLoop runtime details",N,N],[3,"Sender",E,"Sends messages to the EventLoop from other threads.",N,N],[3,"Poll",E,E,N,N],[3,"Events",E,E,N,N],[3,"Timeout",E,E,N,N],[3,R[769],E,E,N,N],[3,"Token",E,E,N,N],[12,"0",E,E,1,N],[3,"Io",E,E,N,N],[3,"Selector",E,E,N,N],[4,"IpAddr",E,"An IP address, either a IPv4 or IPv6 address.",N,N],[13,"V4",E,E,2,N],[13,"V6",E,E,2,N],[4,R[2085],E,E,N,N],[13,"Io",E,E,3,N],[13,"Full",E,E,3,N],[13,"Closed",E,E,3,N],[0,"util",E,"Utilities for non-blocking IO programs",N,N],[3,R[2086],"mio::util",E,N,N],[11,R[2094],E,E,4,[[["usize"]],["queue"]]],[11,"push",E,E,4,[[["self"],[T]],[R[48]]]],[11,"pop",E,E,4,[[["self"]],["option"]]],[6,"Slab",E,E,N,N],[11,"edge","mio",E,5,[[],["pollopt"]]],[11,"empty",E,E,5,[[],["pollopt"]]],[11,"level",E,E,5,[[],["pollopt"]]],[11,"oneshot",E,E,5,[[],["pollopt"]]],[11,"all",E,E,5,[[],["pollopt"]]],[11,"is_edge",E,E,5,[[["self"]],["bool"]]],[11,"is_level",E,E,5,[[["self"]],["bool"]]],[11,"is_oneshot",E,E,5,[[["self"]],["bool"]]],[11,"bits",E,E,5,[[["self"]],["usize"]]],[11,R[801],E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"insert",E,E,5,[[["self"],["pollopt"]]]],[11,"remove",E,E,5,[[["self"],["pollopt"]]]],[11,"none",E,E,6,[[],[R[2048]]]],[11,"readable",E,E,6,[[],[R[2048]]]],[11,"writable",E,E,6,[[],[R[2048]]]],[11,"error",E,E,6,[[],[R[2048]]]],[11,"hup",E,E,6,[[],[R[2048]]]],[11,"all",E,E,6,[[],[R[2048]]]],[11,"is_readable",E,E,6,[[["self"]],["bool"]]],[11,"is_writable",E,E,6,[[["self"]],["bool"]]],[11,"is_error",E,E,6,[[["self"]],["bool"]]],[11,"is_hup",E,E,6,[[["self"]],["bool"]]],[11,"insert",E,E,6,[[["self"],[R[2048]]]]],[11,"remove",E,E,6,[[["self"],[R[2048]]]]],[11,"bits",E,E,6,[[["self"]],["usize"]]],[11,R[801],E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"new",E,"Create a new IoEvent.",0,[[[R[2048]],["token"]],["ioevent"]]],[11,"new",E,"Creates a new configuration for the event loop with all…",7,[[],[R[2049]]]],[11,"notify_capacity",E,"Sets the maximum number of messages that can be buffered…",7,[[["self"],["usize"]],["self"]]],[11,"messages_per_tick",E,"Sets the maximum number of messages that can be processed…",7,[[["self"],["usize"]],["self"]]],[11,"timer_tick_ms",E,E,7,[[["self"],["u64"]],["self"]]],[11,"timer_wheel_size",E,E,7,[[["self"],["usize"]],["self"]]],[11,"timer_capacity",E,E,7,[[["self"],["usize"]],["self"]]],[11,"new",E,"Initializes a new event loop using default configuration…",8,[[],[[R[48],[R[2050]]],[R[2050]]]]],[11,"configured",E,E,8,[[[R[2049]]],[[R[48],[R[2050]]],[R[2050]]]]],[11,"channel",E,"Returns a sender that allows sending messages to the event…",8,[[["self"]],["sender"]]],[11,"timeout_ms",E,"Schedules a timeout after the requested time interval.…",8,[[["self"],["u64"]],[["timeout"],["timerresult",["timeout"]]]]],[11,"clear_timeout",E,"If the supplied timeout has not been triggered, cancel it…",8,[[["self"],["timeout"]],["bool"]]],[11,R[2093],E,"Tells the event loop to exit after it is done handling all…",8,[[["self"]]]],[11,"is_running",E,"Indicates whether the event loop is currently running. If…",8,[[["self"]],["bool"]]],[11,R[2061],E,"Registers an IO handle with the event loop.",8,[[["token"],["pollopt"],["self"],["e"],[R[2048]]],[R[48]]]],[11,R[2052],E,"Re-Registers an IO handle with the event loop.",8,[[["token"],["pollopt"],["self"],["e"],[R[2048]]],[R[48]]]],[11,"run",E,"Keep spinning the event loop indefinitely, and notify the…",8,[[["self"],["h"]],[R[48]]]],[11,R[2054],E,"Deregisters an IO handle with the event loop.",8,[[["self"],["e"]],[R[48]]]],[11,"run_once",E,"Spin the event loop once, with a timeout of one second,…",8,[[["option",["usize"]],["usize"],["h"],["self"]],[R[48]]]],[11,"send",E,E,9,[[["m"],["self"]],[[R[2051]],[R[48],[R[2051]]]]]],[11,"new",E,E,10,[[],[["poll"],[R[48],["poll"]]]]],[11,R[2061],E,E,10,[[["token"],["pollopt"],["self"],["e"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,10,[[["token"],["pollopt"],["self"],["e"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,10,[[["self"],["e"]],[R[48]]]],[11,"poll",E,E,10,[[["option",["usize"]],["self"],["usize"]],[[R[48],["usize"]],["usize"]]]],[11,"event",E,E,10,[[["self"],["usize"]],["ioevent"]]],[11,R[1],E,E,10,[[["self"]],[R[1]]]],[11,"new",E,E,11,[[],[[R[2060]],[R[48],[R[2060]]]]]],[11,"id",E,E,11,[[["self"]],["usize"]]],[11,"select",E,"Wait for events from the OS",11,[[[R[1]],["option",["usize"]],["usize"],["self"]],[R[48]]]],[11,R[2061],E,R[2053],11,[[["token"],["pollopt"],["self"],[R[2048]],["rawfd"]],[R[48]]]],[11,R[2052],E,R[2053],11,[[["token"],["pollopt"],["self"],[R[2048]],["rawfd"]],[R[48]]]],[11,R[2054],E,"Deregister event interests for the given IO handle with…",11,[[["self"],["rawfd"]],[R[48]]]],[11,R[876],E,E,12,[[["rawfd"]],["io"]]],[11,"as_usize",E,E,1,[[],["usize"]]],[0,"tcp",E,E,N,N],[4,"Shutdown",R[2063],"Possible values which can be passed to the [`shutdown`]…",N,N],[13,"Read",E,"The reading portion of the [`TcpStream`] should be shut…",13,N],[13,"Write",E,"The writing portion of the [`TcpStream`] should be shut…",13,N],[13,"Both",E,"Both the reading and the writing portions of the…",13,N],[3,"TcpStream",E,E,N,N],[3,R[2088],E,E,N,N],[0,"udp","mio",E,N,N],[3,"UdpSocket",R[2079],E,N,N],[0,"unix","mio",E,N,N],[3,"PipeReader",R[2062],E,N,N],[3,"PipeWriter",E,E,N,N],[3,R[2089],E,E,N,N],[3,"UnixSocket",E,E,N,N],[3,"UnixStream",E,E,N,N],[3,"EventedFd",E,E,N,N],[12,"0",E,E,14,N],[5,"pipe",E,E,N,[[],[R[48]]]],[0,"prelude","mio",E,N,N],[3,"EventLoop",R[2057],R[2055],N,N],[8,"TryRead",E,E,N,N],[11,R[2056],E,E,15,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[10,"try_read",E,E,15,[[["self"]],[["option",["usize"]],[R[48],["option"]]]]],[8,"TryWrite",E,E,N,N],[11,R[2058],E,E,16,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[10,"try_write",E,E,16,[[["self"]],[["option",["usize"]],[R[48],["option"]]]]],[6,"TimerResult","mio",E,N,N],[8,"Handler",E,E,N,N],[16,"Timeout",E,E,17,N],[16,"Message",E,E,17,N],[11,"ready",E,R[2072],17,[[[R[2050]],["token"],["self"],[R[2048]]]]],[11,"notify",E,R[2073],17,[[["self"],[R[2050]]]]],[11,"timeout",E,R[2074],17,[[["self"],[R[2050]]]]],[11,R[2075],E,R[2076],17,[[["self"],[R[2050]]]]],[11,"tick",E,R[2077],17,[[["self"],[R[2050]]]]],[8,"TryRead",E,E,N,N],[11,R[2056],R[2057],E,15,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[10,"try_read","mio",E,15,[[["self"]],[["option",["usize"]],[R[48],["option"]]]]],[8,"TryWrite",E,E,N,N],[11,R[2058],R[2057],E,16,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[10,"try_write","mio",E,16,[[["self"]],[["option",["usize"]],[R[48],["option"]]]]],[8,"Evented",E,"A value that may be registered with an `EventLoop`",N,N],[8,"TryAccept",E,E,N,N],[16,"Output",E,E,18,N],[10,"accept",E,E,18,[[["self"]],[["option"],[R[48],["option"]]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[205],E,E,19,[[["self"]],["string"]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[205],E,E,20,[[["self"]],["string"]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[364],E,E,21,[[],["i"]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into","mio::util",E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",R[2063],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",R[2079],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",R[2062],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"cmp","mio",E,19,[[[R[1101]],["self"]],[R[313]]]],[11,"cmp",E,E,20,[[[R[1103]],["self"]],[R[313]]]],[11,"from",E,E,20,[[],[R[1103]]]],[11,"from",E,E,20,[[],[R[1103]]]],[11,"from",E,"Converts a host byte order `u32` into an `Ipv4Addr`.",19,[[["u32"]],[R[1101]]]],[11,"from",E,"Convert a host byte order `u128` into an `Ipv6Addr`.",20,[[["u128"]],[R[1103]]]],[11,"from",E,"Examples",19,[[],[R[1101]]]],[11,R[815],E,E,19,[[["str"]],[[R[48],[R[1101],R[2059]]],[R[1101]],[R[2059]]]]],[11,R[815],E,E,20,[[["str"]],[[R[2059]],[R[1103]],[R[48],[R[1103],R[2059]]]]]],[11,"eq",E,E,19,[[["ipaddr"],["self"]],["bool"]]],[11,"eq",E,E,20,[[[R[1103]],["self"]],["bool"]]],[11,"eq",R[2063],E,13,[[[R[2093]],["self"]],["bool"]]],[11,"eq","mio",E,20,[[["ipaddr"],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[1101]],["self"]],["bool"]]],[11,R[314],E,E,19,[[["ipaddr"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,19,[[[R[1101]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,20,[[[R[1103]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,20,[[["ipaddr"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,20,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,19,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",R[2063],E,13,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"clone",E,E,13,[[["self"]],[R[2093]]]],[11,"clone","mio",E,19,[[["self"]],[R[1101]]]],[11,"clone",E,E,20,[[["self"]],[R[1103]]]],[11,"hash",E,E,20,[[["self"],["h"]]]],[11,"hash",E,E,19,[[["self"],["h"]]]],[11,"fmt",E,E,19,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,20,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[2061],R[2063],E,24,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,24,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,24,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,25,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,25,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,25,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],R[2079],E,26,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,26,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,26,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],R[2062],E,27,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,27,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,27,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,28,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,28,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,28,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,29,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,29,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,29,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,30,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,30,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,30,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,31,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,31,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,31,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],E,E,14,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,14,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,14,[[[R[2060]],["self"]],[R[48]]]],[11,R[2061],"mio",E,12,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2052],E,E,12,[[[R[2060]],["token"],["pollopt"],["self"],[R[2048]]],[R[48]]]],[11,R[2054],E,E,12,[[[R[2060]],["self"]],[R[48]]]],[11,"accept",R[2063],E,25,[[["self"]],[[R[48],["option"]],["option",[R[828]]]]]],[11,"accept",R[2062],E,29,[[["self"]],[["option",[R[2084]]],[R[48],["option"]]]]],[11,"drop","mio",E,8,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,"drop",E,E,12,[[["self"]]]],[11,"from",R[2062],E,30,[[["io"]],["pipereader"]]],[11,"from",E,E,31,[[["io"]],["pipewriter"]]],[11,"from","mio",E,12,[[["rawfd"]],["io"]]],[11,"next",E,E,21,[[["self"]],[["ioevent"],["option",["ioevent"]]]]],[11,"clone","mio::util",E,4,[[["self"]],["queue"]]],[11,"clone","mio",E,5,[[["self"]],["pollopt"]]],[11,"clone",E,E,6,[[["self"]],[R[2048]]]],[11,"clone",E,E,0,[[["self"]],["ioevent"]]],[11,"clone",E,E,7,[[["self"]],[R[2049]]]],[11,"clone",E,E,9,[[["self"]],["sender"]]],[11,"clone",E,E,22,[[["self"]],["timeout"]]],[11,"clone",E,E,1,[[["self"]],["token"]]],[11,R[744],E,E,7,[[],[R[2049]]]],[11,"cmp",E,E,5,[[["self"],["pollopt"]],[R[313]]]],[11,"cmp",E,E,6,[[["self"],[R[2048]]],[R[313]]]],[11,"cmp",E,E,1,[[["token"],["self"]],[R[313]]]],[11,"eq",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["ioevent"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["ioevent"]],["bool"]]],[11,"eq",E,E,1,[[["token"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["token"],["self"]],["bool"]]],[11,R[314],E,E,5,[[["self"],["pollopt"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"le",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["pollopt"]],["bool"]]],[11,R[314],E,E,6,[[["self"],[R[2048]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[2048]]],["bool"]]],[11,R[314],E,E,1,[[["token"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,1,[[["token"],["self"]],["bool"]]],[11,"le",E,E,1,[[["token"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["token"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["token"],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2063],E,24,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,25,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2079],E,26,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2062],E,27,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,28,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,29,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,30,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,31,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","mio",E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2062],E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","mio",E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,23,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"sub",E,E,5,[[["pollopt"]],["pollopt"]]],[11,"sub",E,E,6,[[[R[2048]]],[R[2048]]]],[11,R[815],E,E,2,[[["str"]],[["ipaddr"],[R[48],["ipaddr",R[2059]]],[R[2059]]]]],[11,"not",E,E,5,[[],["pollopt"]]],[11,"not",E,E,6,[[],[R[2048]]]],[11,"bitand",E,E,5,[[["pollopt"]],["pollopt"]]],[11,"bitand",E,E,6,[[[R[2048]]],[R[2048]]]],[11,"bitor",E,E,5,[[["pollopt"]],["pollopt"]]],[11,"bitor",E,E,6,[[[R[2048]]],[R[2048]]]],[11,"bitxor",E,E,5,[[["pollopt"]],["pollopt"]]],[11,"bitxor",E,E,6,[[[R[2048]]],[R[2048]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[256],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[["option",["error"]],["error"]]]],[11,"read",R[2063],E,24,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",R[2062],E,28,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read",E,E,30,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"read","mio",E,12,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"write",R[2063],E,24,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,24,[[["self"]],[R[48]]]],[11,"write",R[2062],E,28,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,28,[[["self"]],[R[48]]]],[11,"write",E,E,31,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,31,[[["self"]],[R[48]]]],[11,"write","mio",E,12,[[["self"]],[[R[48],["usize"]],["usize"]]]],[11,"flush",E,E,12,[[["self"]],[R[48]]]],[11,R[875],R[2063],E,24,[[["self"]],["rawfd"]]],[11,R[875],E,E,25,[[["self"]],["rawfd"]]],[11,R[875],R[2079],E,26,[[["self"]],["rawfd"]]],[11,R[875],R[2062],E,27,[[["self"]],["rawfd"]]],[11,R[875],E,E,28,[[["self"]],["rawfd"]]],[11,R[875],E,E,29,[[["self"]],["rawfd"]]],[11,R[875],E,E,30,[[["self"]],["rawfd"]]],[11,R[875],E,E,31,[[["self"]],["rawfd"]]],[11,R[875],"mio",E,12,[[["self"]],["rawfd"]]],[11,R[876],R[2063],E,24,[[["rawfd"]],[R[828]]]],[11,R[876],E,E,25,[[["rawfd"]],[R[827]]]],[11,R[876],R[2079],E,26,[[["rawfd"]],[R[832]]]],[11,R[876],R[2062],E,27,[[["rawfd"]],[R[2081]]]],[11,R[876],E,E,28,[[["rawfd"]],[R[2084]]]],[11,R[876],E,E,29,[[["rawfd"]],[R[2082]]]],[11,R[876],E,E,30,[[["rawfd"]],["pipereader"]]],[11,R[876],E,E,31,[[["rawfd"]],["pipewriter"]]],[11,R[876],"mio",E,12,[[["rawfd"]],["io"]]],[11,R[689],E,E,1,[[["usize"]],["token"]]],[11,"as_usize",E,E,1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new IPv4 address from four eight-bit octets.",19,[[["u8"]],[R[1101]]]],[18,"LOCALHOST",E,"An IPv4 address with the address pointing to localhost:…",19,N],[18,R[2064],E,"An IPv4 address representing an unspecified address: 0.0.0.0",19,N],[18,"BROADCAST",E,"An IPv4 address representing the broadcast address:…",19,N],[11,"octets",E,"Returns the four eight-bit integers that make up this…",19,[[["self"]]]],[11,R[2065],E,"Returns [`true`] for the special 'unspecified' address…",19,[[["self"]],["bool"]]],[11,R[2066],E,"Returns [`true`] if this is a loopback address…",19,[[["self"]],["bool"]]],[11,"is_private",E,"Returns [`true`] if this is a private address.",19,[[["self"]],["bool"]]],[11,"is_link_local",E,"Returns [`true`] if the address is link-local…",19,[[["self"]],["bool"]]],[11,"is_global",E,R[2067],19,[[["self"]],["bool"]]],[11,"is_shared",E,"Returns [`true`] if this address is part of the Shared…",19,[[["self"]],["bool"]]],[11,"is_ietf_protocol_assignment",E,"Returns [`true`] if this address is part of…",19,[[["self"]],["bool"]]],[11,"is_benchmarking",E,"Returns [`true`] if this address part of the…",19,[[["self"]],["bool"]]],[11,"is_reserved",E,"Returns [`true`] if this address is reserved by IANA for…",19,[[["self"]],["bool"]]],[11,R[2071],E,"Returns [`true`] if this is a multicast address…",19,[[["self"]],["bool"]]],[11,"is_broadcast",E,"Returns [`true`] if this is a broadcast address…",19,[[["self"]],["bool"]]],[11,R[2069],E,"Returns [`true`] if this address is in a range designated…",19,[[["self"]],["bool"]]],[11,"to_ipv6_compatible",E,"Converts this address to an IPv4-compatible [IPv6 address].",19,[[["self"]],[R[1103]]]],[11,"to_ipv6_mapped",E,"Converts this address to an IPv4-mapped [IPv6 address].",19,[[["self"]],[R[1103]]]],[11,"new",E,"Creates a new IPv6 address from eight 16-bit segments.",20,[[["u16"]],[R[1103]]]],[18,"LOCALHOST",E,"An IPv6 address representing localhost: `::1`.",20,N],[18,R[2064],E,"An IPv6 address representing the unspecified address: `::`",20,N],[11,"segments",E,"Returns the eight 16-bit segments that make up this address.",20,[[["self"]]]],[11,R[2065],E,"Returns [`true`] for the special 'unspecified' address (::).",20,[[["self"]],["bool"]]],[11,R[2066],E,"Returns [`true`] if this is a loopback address (::1).",20,[[["self"]],["bool"]]],[11,"is_global",E,R[2067],20,[[["self"]],["bool"]]],[11,"is_unique_local",E,"Returns [`true`] if this is a unique local address…",20,[[["self"]],["bool"]]],[11,"is_unicast_link_local_strict",E,R[2068],20,[[["self"]],["bool"]]],[11,"is_unicast_link_local",E,R[2068],20,[[["self"]],["bool"]]],[11,"is_unicast_site_local",E,"Returns [`true`] if this is a deprecated unicast…",20,[[["self"]],["bool"]]],[11,R[2069],E,"Returns [`true`] if this is an address reserved for…",20,[[["self"]],["bool"]]],[11,"is_unicast_global",E,"Returns [`true`] if the address is a globally routable…",20,[[["self"]],["bool"]]],[11,"multicast_scope",E,"Returns the address's multicast scope if the address is…",20,[[["self"]],[["option",[R[2070]]],[R[2070]]]]],[11,R[2071],E,"Returns [`true`] if this is a multicast address (ff00::/8).",20,[[["self"]],["bool"]]],[11,"to_ipv4",E,"Converts this address to an [IPv4 address]. Returns…",20,[[["self"]],[["option",[R[1101]]],[R[1101]]]]],[11,"octets",E,"Returns the sixteen eight-bit integers the IPv6 address…",20,[[["self"]]]],[11,"ready",E,R[2072],17,[[[R[2050]],["token"],["self"],[R[2048]]]]],[11,"notify",E,R[2073],17,[[["self"],[R[2050]]]]],[11,"timeout",E,R[2074],17,[[["self"],[R[2050]]]]],[11,R[2075],E,R[2076],17,[[["self"],[R[2050]]]]],[11,"tick",E,R[2077],17,[[["self"],[R[2050]]]]],[11,R[2056],R[2057],E,15,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[11,R[2058],E,E,16,[[["self"],["b"]],[["option",["usize"]],[R[48],["option"]]]]],[11,"connect",R[2063],"Create a new TCP stream an issue a non-blocking connect to…",24,[[[R[829]]],[[R[828]],[R[48],[R[828]]]]]],[11,"connect_stream",E,"Creates a new `TcpStream` from the pending socket inside…",24,[[[R[828]],[R[829]]],[[R[828]],[R[48],[R[828]]]]]],[11,"peer_addr",E,E,24,[[["self"]],[[R[829]],[R[48],[R[829]]]]]],[11,R[2080],E,E,24,[[["self"]],[[R[829]],[R[48],[R[829]]]]]],[11,R[2083],E,E,24,[[["self"]],[[R[828]],[R[48],[R[828]]]]]],[11,R[2093],E,E,24,[[[R[2093]],["self"]],[R[48]]]],[11,R[2090],E,E,24,[[["self"],["bool"]],[R[48]]]],[11,R[2091],E,E,24,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[11,R[2078],E,E,24,[[["self"]],[R[48]]]],[11,"bind",E,"Convenience method to bind a new TCP listener to the…",25,[[[R[829]]],[[R[48],[R[827]]],[R[827]]]]],[11,"from_listener",E,"Creates a new `TcpListener` from an instance of a…",25,[[[R[827]],[R[829]]],[[R[48],[R[827]]],[R[827]]]]],[11,"accept",E,"Accepts a new `TcpStream`.",25,[[["self"]],[["option"],[R[48],["option"]]]]],[11,R[2080],E,E,25,[[["self"]],[[R[829]],[R[48],[R[829]]]]]],[11,R[2083],E,E,25,[[["self"]],[[R[48],[R[827]]],[R[827]]]]],[11,R[2078],E,E,25,[[["self"]],[R[48]]]],[11,"v4",R[2079],"Returns a new, unbound, non-blocking, IPv4 UDP socket",26,[[],[[R[832]],[R[48],[R[832]]]]]],[11,"v6",E,"Returns a new, unbound, non-blocking, IPv6 UDP socket",26,[[],[[R[832]],[R[48],[R[832]]]]]],[11,"bound",E,E,26,[[[R[829]]],[[R[832]],[R[48],[R[832]]]]]],[11,"bind",E,E,26,[[["self"],[R[829]]],[R[48]]]],[11,R[2080],E,E,26,[[["self"]],[[R[829]],[R[48],[R[829]]]]]],[11,R[2083],E,E,26,[[["self"]],[[R[832]],[R[48],[R[832]]]]]],[11,"send_to",E,E,26,[[["self"],[R[829]]],[["option",["usize"]],[R[48],["option"]]]]],[11,"recv_from",E,E,26,[[["self"]],[[R[48],["option"]],["option"]]]],[11,R[2092],E,E,26,[[["self"],["bool"]],[R[48]]]],[11,"set_multicast_loop",E,E,26,[[["self"],["bool"]],[R[48]]]],[11,"join_multicast",E,E,26,[[["ipaddr"],["self"]],[R[48]]]],[11,"leave_multicast",E,E,26,[[["ipaddr"],["self"]],[R[48]]]],[11,"set_multicast_time_to_live",E,E,26,[[["self"],["i32"]],[R[48]]]],[11,"stream",R[2062],"Returns a new, unbound, non-blocking Unix domain socket",27,[[],[[R[2081]],[R[48],[R[2081]]]]]],[11,"connect",E,"Connect the socket to the specified address",27,[[["p"]],[R[48]]]],[11,"bind",E,"Bind the socket to the specified address",27,[[["self"],["p"]],[R[48]]]],[11,"listen",E,"Listen for incoming requests",27,[[["usize"]],[[R[48],[R[2082]]],[R[2082]]]]],[11,R[2083],E,E,27,[[["self"]],[[R[2081]],[R[48],[R[2081]]]]]],[11,"connect",E,E,28,[[["p"]],[[R[48],[R[2084]]],[R[2084]]]]],[11,R[2083],E,E,28,[[["self"]],[[R[48],[R[2084]]],[R[2084]]]]],[11,"read_recv_fd",E,E,28,[[["self"]],[R[48]]]],[11,"try_read_recv_fd",E,E,28,[[["self"]],[[R[48],["option"]],["option"]]]],[11,"try_read_buf_recv_fd",E,E,28,[[["self"],["b"]],[[R[48],["option"]],["option"]]]],[11,"write_send_fd",E,E,28,[[["self"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[11,"try_write_send_fd",E,E,28,[[["self"],["rawfd"]],[["option",["usize"]],[R[48],["option"]]]]],[11,"try_write_buf_send_fd",E,E,28,[[["self"],["b"],["rawfd"]],[["option",["usize"]],[R[48],["option"]]]]],[11,"bind",E,E,29,[[["p"]],[[R[48],[R[2082]]],[R[2082]]]]],[11,"accept",E,E,29,[[["self"]],[["option",[R[2084]]],[R[48],["option"]]]]],[11,R[2083],E,E,29,[[["self"]],[[R[48],[R[2082]]],[R[2082]]]]]],"p":[[3,"IoEvent"],[3,"Token"],[4,"IpAddr"],[4,R[2085]],[3,R[2086]],[3,"PollOpt"],[3,"EventSet"],[3,R[2087]],[3,"EventLoop"],[3,"Sender"],[3,"Poll"],[3,"Selector"],[3,"Io"],[4,"Shutdown"],[3,"EventedFd"],[8,"TryRead"],[8,"TryWrite"],[8,"Handler"],[8,"TryAccept"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"Events"],[3,"Timeout"],[3,R[769]],[3,"TcpStream"],[3,R[2088]],[3,"UdpSocket"],[3,"UnixSocket"],[3,"UnixStream"],[3,R[2089]],[3,"PipeReader"],[3,"PipeWriter"]]};
searchIndex["miow"]={"doc":E,"i":[],"p":[]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","i":[[3,R[877],"net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,R[878],E,"An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4",E,"Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[[R[826]],[R[48],[R[826]]]]]],[11,"new_v6",E,"Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[[R[826]],[R[48],[R[826]]]]]],[11,"bind",E,R[831],0,[[["self"],[T]],[[R[826]],[R[48],[R[826]]]]]],[11,"listen",E,"Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],[[R[48],[R[827]]],[R[827]]]]],[11,"connect",E,"Initiate a connection on this socket to the specified…",0,[[["self"],[T]],[[R[828]],[R[48],[R[828]]]]]],[11,"to_tcp_stream",E,"Converts this builder into a `TcpStream`",0,[[["self"]],[[R[828]],[R[48],[R[828]]]]]],[11,"to_tcp_listener",E,"Converts this builder into a `TcpListener`",0,[[["self"]],[[R[48],[R[827]]],[R[827]]]]],[11,R[2080],E,"Returns the address of the local half of this TCP socket.",0,[[["self"]],[[R[829]],[R[48],[R[829]]]]]],[11,"new_v4",E,"Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[[R[830]],[R[48],[R[830]]]]]],[11,"new_v6",E,"Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[[R[830]],[R[48],[R[830]]]]]],[11,"bind",E,R[831],1,[[["self"],[T]],[[R[832]],[R[48],[R[832]]]]]],[11,"ttl",E,R[833],0,[[["u32"],["self"]],[[R[48]],["self"]]]],[11,"only_v6",E,R[834],0,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[835],E,R[836],0,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[837],E,R[838],0,[[["self"]],[[R[48],["bool"]],["bool"]]]],[11,R[839],E,R[840],0,[[["self"]],[[R[48],["option"]],["option",["error"]]]]],[11,"ttl",E,R[833],1,[[["u32"],["self"]],[[R[48]],["self"]]]],[11,"only_v6",E,R[834],1,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[835],E,R[836],1,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[837],E,R[838],1,[[["self"]],[[R[48],["bool"]],["bool"]]]],[11,R[839],E,R[840],1,[[["self"]],[[R[48],["option"]],["option",["error"]]]]],[0,"unix",E,"Unix-specific extensions to the `std::net` types.",N,N],[8,R[879],"net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,R[841],E,R[842],2,[[["self"],["bool"]],[[R[48]],["self"]]]],[10,R[843],E,R[844],2,[[["self"]],[[R[48],["bool"]],["bool"]]]],[8,R[880],E,"Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,R[841],E,R[842],3,[[["self"],["bool"]],[[R[48]],["self"]]]],[10,R[843],E,R[844],3,[[["self"]],[[R[48],["bool"]],["bool"]]]],[8,R[881],"net2","Extension methods for the standard [`TcpStream`…",N,N],[10,R[2090],E,"Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],[R[48]]]],[10,"nodelay",E,"Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,R[858],E,R[859],4,[[["self"],["usize"]],[R[48]]]],[10,R[860],E,R[861],4,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,R[862],E,R[863],4,[[["self"],["usize"]],[R[48]]]],[10,R[864],E,R[865],4,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,"set_keepalive_ms",E,R[845],4,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[10,"keepalive_ms",E,R[846],4,[[["self"]],[[R[48],["option"]],["option",["u32"]]]]],[10,R[2091],E,R[845],4,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,"keepalive",E,R[846],4,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[10,R[866],E,R[847],4,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[10,R[867],E,R[847],4,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,R[868],E,R[848],4,[[["self"]],[[R[48],["option"]],["option",["u32"]]]]],[10,R[869],E,R[848],4,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[10,R[870],E,R[849],4,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[10,R[871],E,R[849],4,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,R[872],E,R[850],4,[[["self"]],[[R[48],["option"]],["option",["u32"]]]]],[10,R[873],E,R[850],4,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[10,"set_ttl",E,R[833],4,[[["u32"],["self"]],[R[48]]]],[10,"ttl",E,R[851],4,[[["self"]],[[R[48],["u32"]],["u32"]]]],[10,R[852],E,R[834],4,[[["self"],["bool"]],[R[48]]]],[10,"only_v6",E,R[853],4,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,"connect",E,"Executes a `connect` operation on this socket,…",4,[[["self"],[R[874]]],[R[48]]]],[10,R[839],E,R[840],4,[[["self"]],[[R[48],["option"]],["option",["error"]]]]],[10,R[854],E,"Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],[R[48]]]],[10,R[855],E,R[856],4,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,"linger",E,R[857],4,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[8,R[882],E,"Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl",E,R[833],5,[[["u32"],["self"]],[R[48]]]],[10,"ttl",E,R[851],5,[[["self"]],[[R[48],["u32"]],["u32"]]]],[10,R[852],E,R[834],5,[[["self"],["bool"]],[R[48]]]],[10,"only_v6",E,R[853],5,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,R[839],E,R[840],5,[[["self"]],[[R[48],["option"]],["option",["error"]]]]],[10,R[854],E,"Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],[R[48]]]],[10,R[855],E,R[856],5,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,"linger",E,R[857],5,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[8,R[883],E,"Extension methods for the standard [`UdpSocket`…",N,N],[10,R[858],E,R[859],6,[[["self"],["usize"]],[R[48]]]],[10,R[860],E,R[861],6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,R[862],E,R[863],6,[[["self"],["usize"]],[R[48]]]],[10,R[864],E,R[865],6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,R[2092],E,"Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],[R[48]]]],[10,R[2232],E,"Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,"set_multicast_loop_v4",E,"Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],[R[48]]]],[10,"multicast_loop_v4",E,"Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,"set_multicast_ttl_v4",E,"Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["u32"],["self"]],[R[48]]]],[10,"multicast_ttl_v4",E,"Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],[[R[48],["u32"]],["u32"]]]],[10,"set_multicast_loop_v6",E,"Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],[R[48]]]],[10,"multicast_loop_v6",E,"Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,"set_ttl",E,R[833],6,[[["u32"],["self"]],[R[48]]]],[10,"ttl",E,R[851],6,[[["self"]],[[R[48],["u32"]],["u32"]]]],[10,R[852],E,R[834],6,[[["self"],["bool"]],[R[48]]]],[10,"only_v6",E,R[853],6,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,"join_multicast_v4",E,"Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],[R[1101]]],[R[48]]]],[10,"join_multicast_v6",E,"Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[[R[1103]],["u32"],["self"]],[R[48]]]],[10,"leave_multicast_v4",E,"Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],[R[1101]]],[R[48]]]],[10,"leave_multicast_v6",E,"Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[[R[1103]],["u32"],["self"]],[R[48]]]],[10,R[866],E,R[847],6,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[10,R[867],E,R[847],6,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,R[868],E,R[848],6,[[["self"]],[[R[48],["option"]],["option",["u32"]]]]],[10,R[869],E,R[848],6,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[10,R[870],E,R[849],6,[[["u32"],["self"],["option",["u32"]]],[R[48]]]],[10,R[871],E,R[849],6,[[["option",[R[750]]],["self"],[R[750]]],[R[48]]]],[10,R[872],E,R[850],6,[[["self"]],[[R[48],["option"]],["option",["u32"]]]]],[10,R[873],E,R[850],6,[[["self"]],[[R[48],["option"]],["option",[R[750]]]]]],[10,R[839],E,R[840],6,[[["self"]],[[R[48],["option"]],["option",["error"]]]]],[10,"connect",E,"Connects this UDP socket to a remote address, allowing the…",6,[[["self"],[R[874]]],[R[48]]]],[10,"send",E,"Sends data on the socket to the remote address to which it…",6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,"recv",E,"Receives data on the socket from the remote address to…",6,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,R[854],E,"Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],[R[48]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,R[841],E,E,0,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[843],E,E,0,[[["self"]],[[R[48],["bool"]],["bool"]]]],[11,R[841],E,E,1,[[["self"],["bool"]],[[R[48]],["self"]]]],[11,R[843],E,E,1,[[["self"]],[[R[48],["bool"]],["bool"]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,R[875],E,E,0,[[["self"]],["c_int"]]],[11,R[875],E,E,1,[[["self"]],["c_int"]]],[11,R[876],E,E,0,[[["c_int"]],[R[826]]]],[11,R[876],E,E,1,[[["c_int"]],[R[830]]]]],"p":[[3,R[877]],[3,R[878]],[8,R[879]],[8,R[880]],[8,R[881]],[8,R[882]],[8,R[883]]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","i":[[6,"c_int","nix",E,N,N],[4,"c_void",E,E,N,N],[4,"Errno",E,E,N,N],[13,R[1000],E,E,0,N],[13,"EPERM",E,E,0,N],[13,"ENOENT",E,E,0,N],[13,"ESRCH",E,E,0,N],[13,"EINTR",E,E,0,N],[13,"EIO",E,E,0,N],[13,"ENXIO",E,E,0,N],[13,"E2BIG",E,E,0,N],[13,"ENOEXEC",E,E,0,N],[13,"EBADF",E,E,0,N],[13,"ECHILD",E,E,0,N],[13,"EAGAIN",E,E,0,N],[13,"ENOMEM",E,E,0,N],[13,"EACCES",E,E,0,N],[13,"EFAULT",E,E,0,N],[13,"ENOTBLK",E,E,0,N],[13,"EBUSY",E,E,0,N],[13,"EEXIST",E,E,0,N],[13,"EXDEV",E,E,0,N],[13,"ENODEV",E,E,0,N],[13,"ENOTDIR",E,E,0,N],[13,"EISDIR",E,E,0,N],[13,"EINVAL",E,E,0,N],[13,"ENFILE",E,E,0,N],[13,"EMFILE",E,E,0,N],[13,"ENOTTY",E,E,0,N],[13,"ETXTBSY",E,E,0,N],[13,"EFBIG",E,E,0,N],[13,"ENOSPC",E,E,0,N],[13,"ESPIPE",E,E,0,N],[13,"EROFS",E,E,0,N],[13,"EMLINK",E,E,0,N],[13,"EPIPE",E,E,0,N],[13,"EDOM",E,E,0,N],[13,"ERANGE",E,E,0,N],[13,"EDEADLK",E,E,0,N],[13,R[966],E,E,0,N],[13,"ENOLCK",E,E,0,N],[13,"ENOSYS",E,E,0,N],[13,R[967],E,E,0,N],[13,"ELOOP",E,E,0,N],[13,"ENOMSG",E,E,0,N],[13,"EIDRM",E,E,0,N],[13,"ECHRNG",E,E,0,N],[13,"EL2NSYNC",E,E,0,N],[13,"EL3HLT",E,E,0,N],[13,"EL3RST",E,E,0,N],[13,"ELNRNG",E,E,0,N],[13,"EUNATCH",E,E,0,N],[13,"ENOCSI",E,E,0,N],[13,"EL2HLT",E,E,0,N],[13,"EBADE",E,E,0,N],[13,"EBADR",E,E,0,N],[13,"EXFULL",E,E,0,N],[13,"ENOANO",E,E,0,N],[13,"EBADRQC",E,E,0,N],[13,"EBADSLT",E,E,0,N],[13,"EBFONT",E,E,0,N],[13,"ENOSTR",E,E,0,N],[13,"ENODATA",E,E,0,N],[13,"ETIME",E,E,0,N],[13,"ENOSR",E,E,0,N],[13,"ENONET",E,E,0,N],[13,"ENOPKG",E,E,0,N],[13,"EREMOTE",E,E,0,N],[13,"ENOLINK",E,E,0,N],[13,"EADV",E,E,0,N],[13,"ESRMNT",E,E,0,N],[13,"ECOMM",E,E,0,N],[13,"EPROTO",E,E,0,N],[13,R[968],E,E,0,N],[13,"EDOTDOT",E,E,0,N],[13,"EBADMSG",E,E,0,N],[13,R[969],E,E,0,N],[13,"ENOTUNIQ",E,E,0,N],[13,"EBADFD",E,E,0,N],[13,"EREMCHG",E,E,0,N],[13,"ELIBACC",E,E,0,N],[13,"ELIBBAD",E,E,0,N],[13,"ELIBSCN",E,E,0,N],[13,"ELIBMAX",E,E,0,N],[13,"ELIBEXEC",E,E,0,N],[13,"EILSEQ",E,E,0,N],[13,"ERESTART",E,E,0,N],[13,"ESTRPIPE",E,E,0,N],[13,"EUSERS",E,E,0,N],[13,"ENOTSOCK",E,E,0,N],[13,R[970],E,E,0,N],[13,"EMSGSIZE",E,E,0,N],[13,R[971],E,E,0,N],[13,R[972],E,E,0,N],[13,R[973],E,E,0,N],[13,R[974],E,E,0,N],[13,R[975],E,E,0,N],[13,R[976],E,E,0,N],[13,R[977],E,E,0,N],[13,R[978],E,E,0,N],[13,R[979],E,E,0,N],[13,"ENETDOWN",E,E,0,N],[13,R[980],E,E,0,N],[13,R[981],E,E,0,N],[13,R[982],E,E,0,N],[13,R[983],E,E,0,N],[13,"ENOBUFS",E,E,0,N],[13,"EISCONN",E,E,0,N],[13,"ENOTCONN",E,E,0,N],[13,R[984],E,E,0,N],[13,R[985],E,E,0,N],[13,R[986],E,E,0,N],[13,R[987],E,E,0,N],[13,R[988],E,E,0,N],[13,R[989],E,E,0,N],[13,"EALREADY",E,E,0,N],[13,R[990],E,E,0,N],[13,"ESTALE",E,E,0,N],[13,"EUCLEAN",E,E,0,N],[13,"ENOTNAM",E,E,0,N],[13,"ENAVAIL",E,E,0,N],[13,"EISNAM",E,E,0,N],[13,R[991],E,E,0,N],[13,"EDQUOT",E,E,0,N],[13,R[992],E,E,0,N],[13,R[993],E,E,0,N],[13,R[994],E,E,0,N],[13,"ENOKEY",E,E,0,N],[13,R[995],E,E,0,N],[13,R[996],E,E,0,N],[13,R[997],E,E,0,N],[13,R[998],E,E,0,N],[13,R[999],E,E,0,N],[13,"ERFKILL",E,E,0,N],[13,"EHWPOISON",E,E,0,N],[4,"Error",E,E,N,N],[13,"Sys",E,E,1,N],[13,"InvalidPath",E,E,1,N],[0,"errno",E,E,N,N],[4,"Errno","nix::errno",E,N,N],[13,R[1000],E,E,0,N],[13,"EPERM",E,E,0,N],[13,"ENOENT",E,E,0,N],[13,"ESRCH",E,E,0,N],[13,"EINTR",E,E,0,N],[13,"EIO",E,E,0,N],[13,"ENXIO",E,E,0,N],[13,"E2BIG",E,E,0,N],[13,"ENOEXEC",E,E,0,N],[13,"EBADF",E,E,0,N],[13,"ECHILD",E,E,0,N],[13,"EAGAIN",E,E,0,N],[13,"ENOMEM",E,E,0,N],[13,"EACCES",E,E,0,N],[13,"EFAULT",E,E,0,N],[13,"ENOTBLK",E,E,0,N],[13,"EBUSY",E,E,0,N],[13,"EEXIST",E,E,0,N],[13,"EXDEV",E,E,0,N],[13,"ENODEV",E,E,0,N],[13,"ENOTDIR",E,E,0,N],[13,"EISDIR",E,E,0,N],[13,"EINVAL",E,E,0,N],[13,"ENFILE",E,E,0,N],[13,"EMFILE",E,E,0,N],[13,"ENOTTY",E,E,0,N],[13,"ETXTBSY",E,E,0,N],[13,"EFBIG",E,E,0,N],[13,"ENOSPC",E,E,0,N],[13,"ESPIPE",E,E,0,N],[13,"EROFS",E,E,0,N],[13,"EMLINK",E,E,0,N],[13,"EPIPE",E,E,0,N],[13,"EDOM",E,E,0,N],[13,"ERANGE",E,E,0,N],[13,"EDEADLK",E,E,0,N],[13,R[966],E,E,0,N],[13,"ENOLCK",E,E,0,N],[13,"ENOSYS",E,E,0,N],[13,R[967],E,E,0,N],[13,"ELOOP",E,E,0,N],[13,"ENOMSG",E,E,0,N],[13,"EIDRM",E,E,0,N],[13,"ECHRNG",E,E,0,N],[13,"EL2NSYNC",E,E,0,N],[13,"EL3HLT",E,E,0,N],[13,"EL3RST",E,E,0,N],[13,"ELNRNG",E,E,0,N],[13,"EUNATCH",E,E,0,N],[13,"ENOCSI",E,E,0,N],[13,"EL2HLT",E,E,0,N],[13,"EBADE",E,E,0,N],[13,"EBADR",E,E,0,N],[13,"EXFULL",E,E,0,N],[13,"ENOANO",E,E,0,N],[13,"EBADRQC",E,E,0,N],[13,"EBADSLT",E,E,0,N],[13,"EBFONT",E,E,0,N],[13,"ENOSTR",E,E,0,N],[13,"ENODATA",E,E,0,N],[13,"ETIME",E,E,0,N],[13,"ENOSR",E,E,0,N],[13,"ENONET",E,E,0,N],[13,"ENOPKG",E,E,0,N],[13,"EREMOTE",E,E,0,N],[13,"ENOLINK",E,E,0,N],[13,"EADV",E,E,0,N],[13,"ESRMNT",E,E,0,N],[13,"ECOMM",E,E,0,N],[13,"EPROTO",E,E,0,N],[13,R[968],E,E,0,N],[13,"EDOTDOT",E,E,0,N],[13,"EBADMSG",E,E,0,N],[13,R[969],E,E,0,N],[13,"ENOTUNIQ",E,E,0,N],[13,"EBADFD",E,E,0,N],[13,"EREMCHG",E,E,0,N],[13,"ELIBACC",E,E,0,N],[13,"ELIBBAD",E,E,0,N],[13,"ELIBSCN",E,E,0,N],[13,"ELIBMAX",E,E,0,N],[13,"ELIBEXEC",E,E,0,N],[13,"EILSEQ",E,E,0,N],[13,"ERESTART",E,E,0,N],[13,"ESTRPIPE",E,E,0,N],[13,"EUSERS",E,E,0,N],[13,"ENOTSOCK",E,E,0,N],[13,R[970],E,E,0,N],[13,"EMSGSIZE",E,E,0,N],[13,R[971],E,E,0,N],[13,R[972],E,E,0,N],[13,R[973],E,E,0,N],[13,R[974],E,E,0,N],[13,R[975],E,E,0,N],[13,R[976],E,E,0,N],[13,R[977],E,E,0,N],[13,R[978],E,E,0,N],[13,R[979],E,E,0,N],[13,"ENETDOWN",E,E,0,N],[13,R[980],E,E,0,N],[13,R[981],E,E,0,N],[13,R[982],E,E,0,N],[13,R[983],E,E,0,N],[13,"ENOBUFS",E,E,0,N],[13,"EISCONN",E,E,0,N],[13,"ENOTCONN",E,E,0,N],[13,R[984],E,E,0,N],[13,R[985],E,E,0,N],[13,R[986],E,E,0,N],[13,R[987],E,E,0,N],[13,R[988],E,E,0,N],[13,R[989],E,E,0,N],[13,"EALREADY",E,E,0,N],[13,R[990],E,E,0,N],[13,"ESTALE",E,E,0,N],[13,"EUCLEAN",E,E,0,N],[13,"ENOTNAM",E,E,0,N],[13,"ENAVAIL",E,E,0,N],[13,"EISNAM",E,E,0,N],[13,R[991],E,E,0,N],[13,"EDQUOT",E,E,0,N],[13,R[992],E,E,0,N],[13,R[993],E,E,0,N],[13,R[994],E,E,0,N],[13,"ENOKEY",E,E,0,N],[13,R[995],E,E,0,N],[13,R[996],E,E,0,N],[13,R[997],E,E,0,N],[13,R[998],E,E,0,N],[13,R[999],E,E,0,N],[13,"ERFKILL",E,E,0,N],[13,"EHWPOISON",E,E,0,N],[5,R[2031],E,E,N,[[["i32"]],["errno"]]],[5,"errno",E,"Returns the platform-specific value of errno",N,[[],["i32"]]],[17,R[1001],E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[8,R[1309],E,"The sentinel value indicates that a function failed and…",N,N],[10,"sentinel",E,E,2,[[],["self"]]],[11,"last","nix",E,0,[[],["self"]]],[11,"desc",E,E,0,[[],["str"]]],[11,R[2031],E,E,0,[[["i32"]],["errno"]]],[11,"clear",E,E,0,[[]]],[11,R[48],E,"Returns `Ok(value)` if it does not contain the sentinel…",0,[[[R[1002]],["partialeq"]],[["partialeq"],[R[48]],[R[1002]]]]],[0,"features",E,E,N,N],[5,"socket_atomic_cloexec","nix::features",E,N,[[],["bool"]]],[0,"fcntl","nix",E,N,N],[3,R[1310],R[1297],E,N,N],[3,"OFlag",E,E,N,N],[3,"FdFlag",E,E,N,N],[3,"SealFlag",E,E,N,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,3,N],[12,"l_whence",E,E,3,N],[12,"l_start",E,E,3,N],[12,"l_len",E,E,3,N],[12,"l_pid",E,E,3,N],[12,"l_sysid",E,E,3,N],[4,"FcntlArg",E,E,N,N],[13,"F_DUPFD",E,E,4,N],[13,R[1003],E,E,4,N],[13,"F_GETFD",E,E,4,N],[13,"F_SETFD",E,E,4,N],[13,"F_GETFL",E,E,4,N],[13,"F_SETFL",E,E,4,N],[13,"F_SETLK",E,E,4,N],[13,"F_SETLKW",E,E,4,N],[13,"F_GETLK",E,E,4,N],[13,"F_OFD_SETLK",E,E,4,N],[13,"F_OFD_SETLKW",E,E,4,N],[13,"F_OFD_GETLK",E,E,4,N],[13,R[1004],E,E,4,N],[13,R[1005],E,E,4,N],[4,"FlockArg",E,E,N,N],[13,"LockShared",E,E,5,N],[13,"LockExclusive",E,E,5,N],[13,"Unlock",E,E,5,N],[13,"LockSharedNonblock",E,E,5,N],[13,"LockExclusiveNonblock",E,E,5,N],[13,"UnlockNonblock",E,E,5,N],[5,"open",E,E,N,[[["oflag"],["p"],["mode"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"fcntl",E,E,N,[[["fcntlarg"],["rawfd"]],[["c_int"],[R[48],["c_int"]]]]],[5,"flock",E,E,N,[[["flockarg"],["rawfd"]],[R[48]]]],[5,"splice",E,E,N,[[["rawfd"],["usize"],["option",["loff_t"]],[R[1006]],["loff_t"]],[[R[48],["usize"]],["usize"]]]],[5,"tee",E,E,N,[[[R[1006]],["usize"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"vmsplice",E,E,N,[[[R[1006]],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[11,"empty",E,R[1007],6,[[],[R[1006]]]],[11,"all",E,R[1008],6,[[],[R[1006]]]],[11,"bits",E,R[1009],6,[[["self"]],["c_uint"]]],[11,R[1021],E,R[1010],6,[[["c_uint"]],[["option",[R[1006]]],[R[1006]]]]],[11,R[1011],E,R[1012],6,[[["c_uint"]],[R[1006]]]],[11,R[677],E,R[1013],6,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],6,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],6,[[["self"],[R[1006]]],["bool"]]],[11,R[801],E,R[1016],6,[[["self"],[R[1006]]],["bool"]]],[11,"insert",E,R[1017],6,[[["self"],[R[1006]]]]],[11,"remove",E,R[1018],6,[[["self"],[R[1006]]]]],[11,"toggle",E,R[1019],6,[[["self"],[R[1006]]]]],[11,"empty",E,R[1007],7,[[],["oflag"]]],[11,"all",E,R[1008],7,[[],["oflag"]]],[11,"bits",E,R[1009],7,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],7,[[["c_int"]],[["oflag"],["option",["oflag"]]]]],[11,R[1011],E,R[1012],7,[[["c_int"]],["oflag"]]],[11,R[677],E,R[1013],7,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],7,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],7,[[["oflag"],["self"]],["bool"]]],[11,R[801],E,R[1016],7,[[["oflag"],["self"]],["bool"]]],[11,"insert",E,R[1017],7,[[["self"],["oflag"]]]],[11,"remove",E,R[1018],7,[[["self"],["oflag"]]]],[11,"toggle",E,R[1019],7,[[["self"],["oflag"]]]],[11,"empty",E,R[1007],8,[[],["fdflag"]]],[11,"all",E,R[1008],8,[[],["fdflag"]]],[11,"bits",E,R[1009],8,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],8,[[["c_int"]],[["option",["fdflag"]],["fdflag"]]]],[11,R[1011],E,R[1012],8,[[["c_int"]],["fdflag"]]],[11,R[677],E,R[1013],8,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],8,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],8,[[["self"],["fdflag"]],["bool"]]],[11,R[801],E,R[1016],8,[[["self"],["fdflag"]],["bool"]]],[11,"insert",E,R[1017],8,[[["self"],["fdflag"]]]],[11,"remove",E,R[1018],8,[[["self"],["fdflag"]]]],[11,"toggle",E,R[1019],8,[[["self"],["fdflag"]]]],[11,"empty",E,R[1007],9,[[],[R[1022]]]],[11,"all",E,R[1008],9,[[],[R[1022]]]],[11,"bits",E,R[1009],9,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],9,[[["c_int"]],[["option",[R[1022]]],[R[1022]]]]],[11,R[1011],E,R[1012],9,[[["c_int"]],[R[1022]]]],[11,R[677],E,R[1013],9,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],9,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],9,[[[R[1022]],["self"]],["bool"]]],[11,R[801],E,R[1016],9,[[[R[1022]],["self"]],["bool"]]],[11,"insert",E,R[1017],9,[[[R[1022]],["self"]]]],[11,"remove",E,R[1018],9,[[[R[1022]],["self"]]]],[11,"toggle",E,R[1019],9,[[[R[1022]],["self"]]]],[17,R[1023],E,E,N,N],[17,R[1024],E,E,N,N],[17,R[1025],E,E,N,N],[17,R[1026],E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,R[1045],E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,R[1027],E,E,N,N],[17,R[1028],E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,R[1046],E,E,N,N],[17,R[1029],E,E,N,N],[17,R[1030],E,E,N,N],[17,R[1031],E,E,N,N],[17,R[1032],E,E,N,N],[0,"mount","nix",E,N,N],[3,"MsFlags",R[1298],E,N,N],[3,"MntFlags",E,E,N,N],[5,"mount",E,E,N,[[["msflags"],["option"],["p1"],["p3"],["option"],["option"],["p4"],["p2"]],[R[48]]]],[5,"umount",E,E,N,[[["p"]],[R[48]]]],[5,"umount2",E,E,N,[[["p"],[R[1043]]],[R[48]]]],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,R[1033],E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,R[1034],E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,R[1035],E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_VERBOSE",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,R[1036],E,E,N,N],[17,R[1037],E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,R[1038],E,E,N,N],[17,R[1039],E,E,N,N],[17,R[1040],E,E,N,N],[17,R[1041],E,E,N,N],[17,"MS_NOSEC",E,E,N,N],[17,"MS_BORN",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,R[1042],E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[11,"empty",E,R[1007],10,[[],["msflags"]]],[11,"all",E,R[1008],10,[[],["msflags"]]],[11,"bits",E,R[1009],10,[[["self"]],["c_ulong"]]],[11,R[1021],E,R[1010],10,[[["c_ulong"]],[["msflags"],["option",["msflags"]]]]],[11,R[1011],E,R[1012],10,[[["c_ulong"]],["msflags"]]],[11,R[677],E,R[1013],10,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],10,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],10,[[["msflags"],["self"]],["bool"]]],[11,R[801],E,R[1016],10,[[["msflags"],["self"]],["bool"]]],[11,"insert",E,R[1017],10,[[["msflags"],["self"]]]],[11,"remove",E,R[1018],10,[[["msflags"],["self"]]]],[11,"toggle",E,R[1019],10,[[["msflags"],["self"]]]],[11,"empty",E,R[1007],11,[[],[R[1043]]]],[11,"all",E,R[1008],11,[[],[R[1043]]]],[11,"bits",E,R[1009],11,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],11,[[["c_int"]],[[R[1043]],["option",[R[1043]]]]]],[11,R[1011],E,R[1012],11,[[["c_int"]],[R[1043]]]],[11,R[677],E,R[1013],11,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],11,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],11,[[["self"],[R[1043]]],["bool"]]],[11,R[801],E,R[1016],11,[[["self"],[R[1043]]],["bool"]]],[11,"insert",E,R[1017],11,[[["self"],[R[1043]]]]],[11,"remove",E,R[1018],11,[[["self"],[R[1043]]]]],[11,"toggle",E,R[1019],11,[[["self"],[R[1043]]]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag",R[1280],E,N,N],[3,"FdFlag",E,E,N,N],[3,"MqAttr",E,E,N,N],[12,"mq_flags",E,E,12,N],[12,"mq_maxmsg",E,E,12,N],[12,"mq_msgsize",E,E,12,N],[12,"mq_curmsgs",E,E,12,N],[5,"mq_open",E,E,N,[[[R[1044]],["mode"],["mqattr"],["cstring"],["option",["mqattr"]]],[[R[48],["mqd"]],["mqd"]]]],[5,"mq_unlink",E,E,N,[[["cstring"]],[R[48]]]],[5,"mq_close",E,E,N,[[["mqd"]],[R[48]]]],[5,"mq_receive",E,E,N,[[["u32"],["mqd"]],[[R[48],["usize"]],["usize"]]]],[5,"mq_send",E,E,N,[[["u32"],["mqd"]],[R[48]]]],[5,"mq_getattr",E,E,N,[[["mqd"]],[["mqattr"],[R[48],["mqattr"]]]]],[5,"mq_setattr",E,"Set the attributes of the message queue. Only O_NONBLOCK…",N,[[["mqattr"],["mqd"]],[["mqattr"],[R[48],["mqattr"]]]]],[5,"mq_set_nonblock",E,"Convenience function. Sets the O_NONBLOCK attribute for a…",N,[[["mqd"]],[["mqattr"],[R[48],["mqattr"]]]]],[5,"mq_remove_nonblock",E,"Convenience function. Removes O_NONBLOCK attribute for a…",N,[[["mqd"]],[["mqattr"],[R[48],["mqattr"]]]]],[11,"empty",E,R[1007],13,[[],[R[1044]]]],[11,"all",E,R[1008],13,[[],[R[1044]]]],[11,"bits",E,R[1009],13,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],13,[[["c_int"]],[[R[1044]],["option",[R[1044]]]]]],[11,R[1011],E,R[1012],13,[[["c_int"]],[R[1044]]]],[11,R[677],E,R[1013],13,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],13,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],13,[[[R[1044]],["self"]],["bool"]]],[11,R[801],E,R[1016],13,[[[R[1044]],["self"]],["bool"]]],[11,"insert",E,R[1017],13,[[["self"],[R[1044]]]]],[11,"remove",E,R[1018],13,[[["self"],[R[1044]]]]],[11,"toggle",E,R[1019],13,[[["self"],[R[1044]]]]],[11,"empty",E,R[1007],14,[[],["fdflag"]]],[11,"all",E,R[1008],14,[[],["fdflag"]]],[11,"bits",E,R[1009],14,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],14,[[["c_int"]],[["option",["fdflag"]],["fdflag"]]]],[11,R[1011],E,R[1012],14,[[["c_int"]],["fdflag"]]],[11,R[677],E,R[1013],14,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],14,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],14,[[["self"],["fdflag"]],["bool"]]],[11,R[801],E,R[1016],14,[[["self"],["fdflag"]],["bool"]]],[11,"insert",E,R[1017],14,[[["self"],["fdflag"]]]],[11,"remove",E,R[1018],14,[[["self"],["fdflag"]]]],[11,"toggle",E,R[1019],14,[[["self"],["fdflag"]]]],[6,"MQd",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,R[1045],E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,R[1046],E,E,N,N],[11,"new",E,E,12,[[["c_long"]],["mqattr"]]],[0,"poll","nix",E,N,N],[3,"PollFd",R[1301],E,N,N],[12,"fd",E,E,15,N],[12,R[1],E,E,15,N],[12,"revents",E,E,15,N],[3,"EventFlags",E,E,N,N],[5,"poll",E,E,N,[[["c_int"]],[["c_int"],[R[48],["c_int"]]]]],[11,"empty",E,R[1007],16,[[],[R[1047]]]],[11,"all",E,R[1008],16,[[],[R[1047]]]],[11,"bits",E,R[1009],16,[[["self"]],["c_short"]]],[11,R[1021],E,R[1010],16,[[["c_short"]],[[R[1047]],["option",[R[1047]]]]]],[11,R[1011],E,R[1012],16,[[["c_short"]],[R[1047]]]],[11,R[677],E,R[1013],16,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],16,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],16,[[[R[1047]],["self"]],["bool"]]],[11,R[801],E,R[1016],16,[[[R[1047]],["self"]],["bool"]]],[11,"insert",E,R[1017],16,[[[R[1047]],["self"]]]],[11,"remove",E,R[1018],16,[[[R[1047]],["self"]]]],[11,"toggle",E,R[1019],16,[[[R[1047]],["self"]]]],[6,"nfds_t",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[0,"net","nix",E,N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[5,R[1048],"nix::net::if_","Resolve an interface into a interface number.",N,[[["p"]],[["c_uint"],[R[48],["c_uint"]]]]],[0,"sched","nix",E,N,N],[3,"CloneFlags",R[1299],E,N,N],[3,"CpuSet",E,E,N,N],[5,R[1049],E,E,N,[[["isize"],["cpuset"]],[R[48]]]],[5,"clone",E,E,N,[[[R[1050]],["clonecb"]],[[R[48],["pid_t"]],["pid_t"]]]],[5,"unshare",E,E,N,[[[R[1050]]],[R[48]]]],[5,"setns",E,E,N,[[[R[1050]],["rawfd"]],[R[48]]]],[6,"CloneCb",E,E,N,N],[6,"CpuMask",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,R[1051],E,E,N,N],[17,R[1052],E,E,N,N],[17,R[1053],E,E,N,N],[17,R[1054],E,E,N,N],[17,R[1055],E,E,N,N],[17,R[1056],E,E,N,N],[17,R[1057],E,E,N,N],[17,R[1058],E,E,N,N],[17,R[1059],E,E,N,N],[17,R[1060],E,E,N,N],[17,R[1061],E,E,N,N],[17,R[1062],E,E,N,N],[17,R[1063],E,E,N,N],[17,R[1064],E,E,N,N],[17,R[1065],E,E,N,N],[17,R[1066],E,E,N,N],[17,R[1067],E,E,N,N],[17,R[1068],E,E,N,N],[17,R[1069],E,E,N,N],[17,"CLONE_IO",E,E,N,N],[11,"empty",E,R[1007],17,[[],[R[1050]]]],[11,"all",E,R[1008],17,[[],[R[1050]]]],[11,"bits",E,R[1009],17,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],17,[[["c_int"]],[[R[1050]],["option",[R[1050]]]]]],[11,R[1011],E,R[1012],17,[[["c_int"]],[R[1050]]]],[11,R[677],E,R[1013],17,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],17,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],17,[[["self"],[R[1050]]],["bool"]]],[11,R[801],E,R[1016],17,[[["self"],[R[1050]]],["bool"]]],[11,"insert",E,R[1017],17,[[["self"],[R[1050]]]]],[11,"remove",E,R[1018],17,[[["self"],[R[1050]]]]],[11,"toggle",E,R[1019],17,[[["self"],[R[1050]]]]],[11,"new",E,E,18,[[],["cpuset"]]],[11,"set",E,E,18,[[["self"],["usize"]]]],[11,"unset",E,E,18,[[["self"],["usize"]]]],[0,"sys","nix",E,N,N],[0,"epoll",R[1152],E,N,N],[3,R[1311],R[1281],E,N,N],[3,"EpollEvent",E,E,N,N],[12,R[1],E,E,19,N],[12,"data",E,E,19,N],[4,"EpollOp",E,E,N,N],[13,"EpollCtlAdd",E,E,20,N],[13,"EpollCtlDel",E,E,20,N],[13,"EpollCtlMod",E,E,20,N],[5,R[1070],E,E,N,[[],[[R[48],["rawfd"]],["rawfd"]]]],[5,"epoll_ctl",E,E,N,[[["epollop"],["epollevent"],["rawfd"]],[R[48]]]],[5,"epoll_wait",E,E,N,[[["isize"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,R[1071],E,E,N,N],[17,R[1072],E,E,N,N],[17,R[1073],E,E,N,N],[17,R[1074],E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,R[1075],E,E,N,N],[17,R[1076],E,E,N,N],[17,"EPOLLET",E,E,N,N],[11,"empty",E,R[1007],21,[[],[R[1077]]]],[11,"all",E,R[1008],21,[[],[R[1077]]]],[11,"bits",E,R[1009],21,[[["self"]],["u32"]]],[11,R[1021],E,R[1010],21,[[["u32"]],[["option",[R[1077]]],[R[1077]]]]],[11,R[1011],E,R[1012],21,[[["u32"]],[R[1077]]]],[11,R[677],E,R[1013],21,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],21,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],21,[[["self"],[R[1077]]],["bool"]]],[11,R[801],E,R[1016],21,[[["self"],[R[1077]]],["bool"]]],[11,"insert",E,R[1017],21,[[["self"],[R[1077]]]]],[11,"remove",E,R[1018],21,[[["self"],[R[1077]]]]],[11,"toggle",E,R[1019],21,[[["self"],[R[1077]]]]],[0,"memfd",R[1152],E,N,N],[3,R[1312],R[1282],E,N,N],[5,"memfd_create",E,E,N,[[["cstr"],[R[1080]]],[[R[48],["rawfd"]],["rawfd"]]]],[17,R[1078],E,E,N,N],[17,R[1079],E,E,N,N],[11,"empty",E,R[1007],22,[[],[R[1080]]]],[11,"all",E,R[1008],22,[[],[R[1080]]]],[11,"bits",E,R[1009],22,[[["self"]],["c_uint"]]],[11,R[1021],E,R[1010],22,[[["c_uint"]],[["option",[R[1080]]],[R[1080]]]]],[11,R[1011],E,R[1012],22,[[["c_uint"]],[R[1080]]]],[11,R[677],E,R[1013],22,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],22,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],22,[[["self"],[R[1080]]],["bool"]]],[11,R[801],E,R[1016],22,[[["self"],[R[1080]]],["bool"]]],[11,"insert",E,R[1017],22,[[["self"],[R[1080]]]]],[11,"remove",E,R[1018],22,[[["self"],[R[1080]]]]],[11,"toggle",E,R[1019],22,[[["self"],[R[1080]]]]],[0,"ioctl",R[1152],"Provide helpers for making ioctl system calls",N,N],[5,"ioc_dir","nix::sys::ioctl","Extracts the \"direction\" (read/write/none) from an encoded…",N,[[["u32"]],["u8"]]],[5,"ioc_type",E,"Extracts the type from an encoded ioctl command.",N,[[["u32"]],["u32"]]],[5,"ioc_nr",E,"Extracts the ioctl number from an encoded ioctl command.",N,[[["u32"]],["u32"]]],[5,"ioc_size",E,"Extracts the size from an encoded ioctl command.",N,[[["u32"]],["u32"]]],[17,"NRBITS",E,E,N,N],[17,"TYPEBITS",E,E,N,N],[17,"NONE",E,E,N,N],[17,"READ",E,E,N,N],[17,"WRITE",E,E,N,N],[17,"SIZEBITS",E,E,N,N],[17,"DIRBITS",E,E,N,N],[17,"NRSHIFT",E,E,N,N],[17,"TYPESHIFT",E,E,N,N],[17,"SIZESHIFT",E,E,N,N],[17,"DIRSHIFT",E,E,N,N],[17,"NRMASK",E,E,N,N],[17,"TYPEMASK",E,E,N,N],[17,"SIZEMASK",E,E,N,N],[17,"DIRMASK",E,E,N,N],[17,"IN",E,E,N,N],[17,"OUT",E,E,N,N],[17,"INOUT",E,E,N,N],[17,"SIZE_MASK",E,E,N,N],[0,"sendfile",R[1152],E,N,N],[5,"sendfile","nix::sys::sendfile",E,N,[[["usize"],["option",["off_t"]],["off_t"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[0,"signal",R[1152],E,N,N],[17,"SIGHUP",R[1283],E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[3,"SaFlag",E,E,N,N],[3,"SigFlag",E,E,N,N],[3,"SigSet",E,E,N,N],[3,"SigAction",E,E,N,N],[4,"SigHandler",E,E,N,N],[13,"SigDfl",E,E,23,N],[13,"SigIgn",E,E,23,N],[13,"Handler",E,E,23,N],[13,"SigAction",E,E,23,N],[5,R[39],E,E,N,[[["signum"],[R[39]]],[[R[48],[R[39]]],[R[39]]]]],[5,R[1081],E,"Manages the signal mask (set of blocked signals) for the…",N,[[["sigset"],["option",["sigset"]],["sigset"],["sigflag"],["option",["sigset"]]],[R[48]]]],[5,"kill",E,E,N,[[["signum"],["pid_t"]],[R[48]]]],[5,"raise",E,E,N,[[["signum"]],[R[48]]]],[6,"SigNum",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"NSIG",E,E,N,N],[17,R[1082],E,E,N,N],[17,R[1083],E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,R[1084],E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,R[1085],E,E,N,N],[17,R[1086],E,E,N,N],[11,"empty",E,R[1007],24,[[],["saflag"]]],[11,"all",E,R[1008],24,[[],["saflag"]]],[11,"bits",E,R[1009],24,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],24,[[["c_int"]],[["saflag"],["option",["saflag"]]]]],[11,R[1011],E,R[1012],24,[[["c_int"]],["saflag"]]],[11,R[677],E,R[1013],24,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],24,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],24,[[["self"],["saflag"]],["bool"]]],[11,R[801],E,R[1016],24,[[["self"],["saflag"]],["bool"]]],[11,"insert",E,R[1017],24,[[["self"],["saflag"]]]],[11,"remove",E,R[1018],24,[[["self"],["saflag"]]]],[11,"toggle",E,R[1019],24,[[["self"],["saflag"]]]],[11,"empty",E,R[1007],25,[[],["sigflag"]]],[11,"all",E,R[1008],25,[[],["sigflag"]]],[11,"bits",E,R[1009],25,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],25,[[["c_int"]],[["sigflag"],["option",["sigflag"]]]]],[11,R[1011],E,R[1012],25,[[["c_int"]],["sigflag"]]],[11,R[677],E,R[1013],25,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],25,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],25,[[["self"],["sigflag"]],["bool"]]],[11,R[801],E,R[1016],25,[[["self"],["sigflag"]],["bool"]]],[11,"insert",E,R[1017],25,[[["self"],["sigflag"]]]],[11,"remove",E,R[1018],25,[[["self"],["sigflag"]]]],[11,"toggle",E,R[1019],25,[[["self"],["sigflag"]]]],[11,"all",E,E,26,[[],["sigset"]]],[11,"empty",E,E,26,[[],["sigset"]]],[11,"add",E,E,26,[[["signum"],["self"]],[R[48]]]],[11,"remove",E,E,26,[[["signum"],["self"]],[R[48]]]],[11,R[801],E,E,26,[[["signum"],["self"]],[[R[48],["bool"]],["bool"]]]],[11,"thread_get_mask",E,"Gets the currently blocked (masked) set of signals for the…",26,[[],[[R[48],["sigset"]],["sigset"]]]],[11,"thread_set_mask",E,"Sets the set of signals as the signal mask for the calling…",26,[[["self"]],[R[48]]]],[11,"thread_block",E,"Adds the set of signals to the signal mask for the calling…",26,[[["self"]],[R[48]]]],[11,"thread_unblock",E,"Removes the set of signals from the signal mask for the…",26,[[["self"]],[R[48]]]],[11,"thread_swap_mask",E,"Sets the set of signals as the signal mask, and returns…",26,[[["self"],["sigflag"]],[[R[48],["sigset"]],["sigset"]]]],[11,"wait",E,"Suspends execution of the calling thread until one of the…",26,[[["self"]],[["signum"],[R[48],["signum"]]]]],[11,"new",E,"This function will set or unset the flag `SA_SIGINFO`…",27,[[[R[1302]],["saflag"],["sigset"]],[R[39]]]],[0,"socket",R[1152],"Socket interface functions",N,N],[3,"in_addr",R[1105],E,N,N],[12,"s_addr",E,E,28,N],[3,R[53],E,E,N,N],[12,"s6_addr",E,E,29,N],[3,R[57],E,E,N,N],[12,"sa_family",E,E,30,N],[12,"sa_data",E,E,30,N],[3,R[58],E,E,N,N],[12,"sin_family",E,E,31,N],[12,"sin_port",E,E,31,N],[12,"sin_addr",E,E,31,N],[12,"sin_zero",E,E,31,N],[3,R[59],E,E,N,N],[12,R[1087],E,E,32,N],[12,"sin6_port",E,E,32,N],[12,R[1088],E,E,32,N],[12,"sin6_addr",E,E,32,N],[12,R[1089],E,E,32,N],[3,R[60],E,E,N,N],[12,"sun_family",E,E,33,N],[12,"sun_path",E,E,33,N],[6,R[1090],E,E,N,N],[3,R[61],E,E,N,N],[12,"ss_family",E,E,34,N],[3,"UnixAddr",E,"A wrapper around sockaddr_un. We track the length of…",N,N],[12,"0",E,E,35,N],[12,"1",E,E,35,N],[3,"Ipv4Addr",E,E,N,N],[12,"0",E,E,36,N],[3,"Ipv6Addr",E,E,N,N],[12,"0",E,E,37,N],[3,R[1313],E,E,N,N],[12,"0",E,E,38,N],[3,"ip_mreq",E,E,N,N],[12,R[1091],E,E,39,N],[12,R[1092],E,E,39,N],[3,R[54],E,E,N,N],[12,R[1093],E,E,40,N],[12,R[1094],E,E,40,N],[3,"MsgFlags",E,E,N,N],[3,"SockFlag",E,E,N,N],[3,"CmsgSpace",E,"A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg",E,E,N,N],[12,"bytes",E,E,41,N],[12,"address",E,E,41,N],[12,"flags",E,E,41,N],[3,R[1320],E,E,N,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,42,N],[12,"l_linger",E,E,42,N],[3,"ucred",E,E,N,N],[4,R[1314],E,E,N,N],[13,"Unix",E,E,43,N],[13,"Inet",E,E,43,N],[13,"Inet6",E,E,43,N],[13,"Netlink",E,E,43,N],[13,"Packet",E,E,43,N],[4,"SockAddr",E,"Represents a socket address",N,N],[13,"Inet",E,E,44,N],[13,"Unix",E,E,44,N],[13,"Netlink",E,E,44,N],[4,"InetAddr",E,E,N,N],[13,"V4",E,E,45,N],[13,"V6",E,E,45,N],[4,"IpAddr",E,E,N,N],[13,"V4",E,E,46,N],[13,"V6",E,E,46,N],[4,"SockType",E,E,N,N],[13,"Stream",E,E,47,N],[13,"Datagram",E,E,47,N],[13,"SeqPacket",E,E,47,N],[13,"Raw",E,E,47,N],[13,"Rdm",E,E,47,N],[4,R[1315],E,"A type-safe wrapper around a single control message. More…",N,N],[13,"ScmRights",E,"A message of type SCM_RIGHTS, containing an array of file…",48,N],[4,"SockLevel",E,"The protocol level at which to get / set socket options.…",N,N],[13,"Socket",E,E,49,N],[13,"Tcp",E,E,49,N],[13,"Ip",E,E,49,N],[13,"Ipv6",E,E,49,N],[13,"Udp",E,E,49,N],[13,"Netlink",E,E,49,N],[4,"Shutdown",E,E,N,N],[13,"Read",E,"Further receptions will be disallowed.",50,N],[13,"Write",E,"Further  transmissions will be disallowed.",50,N],[13,"Both",E,"Further receptions and transmissions will be disallowed.",50,N],[5,"sendmsg",E,"Send data in scatter-gather vectors to a socket, possibly…",N,[[["rawfd"],[R[1102]],["option",[R[57]]],[R[57]]],[[R[48],["usize"]],["usize"]]]],[5,"recvmsg",E,"Receive message in scatter-gather vectors from a socket,…",N,[[["cmsgspace"],[R[1102]],["option",["cmsgspace"]],["rawfd"]],[["recvmsg"],[R[48],["recvmsg"]]]]],[5,"socket",E,"Create an endpoint for communication",N,[[[R[1095]],[R[1151]],["c_int"],[R[1303]]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"socketpair",E,"Create a pair of connected sockets",N,[[[R[1095]],["c_int"],[R[1151]],[R[1303]]],[R[48]]]],[5,"listen",E,"Listen for connections on a socket",N,[[["usize"],["rawfd"]],[R[48]]]],[5,"bind",E,"Bind a name to a socket",N,[[[R[57]],["rawfd"]],[R[48]]]],[5,"accept",E,R[1096],N,[[["rawfd"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"accept4",E,R[1096],N,[[[R[1151]],["rawfd"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"connect",E,"Initiate a connection on a socket",N,[[[R[57]],["rawfd"]],[R[48]]]],[5,"recv",E,"Receive data from a connection-oriented socket. Returns…",N,[[[R[1102]],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"recvfrom",E,"Receive data from a connectionless or connection-oriented…",N,[[["rawfd"]],[R[48]]]],[5,"sendto",E,E,N,[[[R[1102]],[R[57]],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"send",E,"Send data to a connection-oriented socket. Returns the…",N,[[[R[1102]],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,R[1097],E,"Get the current value for the requested socket option",N,[[[R[1097]],["rawfd"]],[R[48]]]],[5,R[1098],E,"Sets the value for the requested socket option",N,[[[R[1098]],["rawfd"]],[R[48]]]],[5,R[1099],E,"Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],[[R[48],[R[57]]],[R[57]]]]],[5,R[1100],E,"Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],[[R[48],[R[57]]],[R[57]]]]],[5,"sockaddr_storage_to_addr",E,E,N,[[[R[61]],["usize"]],[[R[48],[R[57]]],[R[57]]]]],[5,R[2093],E,"Shut down part of a full-duplex connection.",N,[[[R[2093]],["rawfd"]],[R[48]]]],[11,"new",E,E,38,[[["u32"]],[R[1300]]]],[11,"pid",E,E,38,[[["self"]],["u32"]]],[11,"groups",E,E,38,[[["self"]],["u32"]]],[11,"from_std",E,E,45,[[[R[829]]],["inetaddr"]]],[11,"new",E,E,45,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip",E,"Gets the IP address associated with this socket address.",45,[[["self"]],["ipaddr"]]],[11,"port",E,"Gets the port number associated with this socket address",45,[[["self"]],["u16"]]],[11,"to_std",E,E,45,[[["self"]],[R[829]]]],[11,"to_str",E,E,45,[[["self"]],["string"]]],[11,"new_v4",E,"Create a new IpAddr that contains an IPv4 address.",46,[[["u8"]],["ipaddr"]]],[11,"new_v6",E,"Create a new IpAddr that contains an IPv6 address.",46,[[["u16"]],["ipaddr"]]],[11,"new",E,E,36,[[["u8"]],[R[1101]]]],[11,"from_std",E,E,36,[[[R[1101]]],[R[1101]]]],[11,"any",E,E,36,[[],[R[1101]]]],[11,"octets",E,E,36,[[["self"]]]],[11,"to_std",E,E,36,[[["self"]],[R[1101]]]],[11,"new",E,E,37,[[["u16"]],[R[1103]]]],[11,"from_std",E,E,37,[[[R[1103]]],[R[1103]]]],[11,"segments",E,"Return the eight 16-bit segments that make up this address",37,[[["self"]]]],[11,"to_std",E,E,37,[[["self"]],[R[1103]]]],[11,"new",E,"Create a new sockaddr_un representing a filesystem path.",35,[[["p"]],[["unixaddr"],[R[48],["unixaddr"]]]]],[11,"new_abstract",E,"Create a new sockaddr_un representing an address in the…",35,[[],[["unixaddr"],[R[48],["unixaddr"]]]]],[11,"path",E,"If this address represents a filesystem path, return that…",35,[[["self"]],[["option",["path"]],["path"]]]],[11,"new_inet",E,E,44,[[["inetaddr"]],[R[57]]]],[11,"new_unix",E,E,44,[[["p"]],[[R[48],[R[57]]],[R[57]]]]],[11,"new_netlink",E,E,44,[[["u32"]],[R[57]]]],[11,"family",E,E,44,[[["self"]],[R[1095]]]],[11,"to_str",E,E,44,[[["self"]],["string"]]],[11,"as_ffi_pair",E,E,44,[[["self"]]]],[11,"empty",E,R[1007],51,[[],[R[1102]]]],[11,"all",E,R[1008],51,[[],[R[1102]]]],[11,"bits",E,R[1009],51,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],51,[[["c_int"]],[[R[1102]],["option",[R[1102]]]]]],[11,R[1011],E,R[1012],51,[[["c_int"]],[R[1102]]]],[11,R[677],E,R[1013],51,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],51,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],51,[[[R[1102]],["self"]],["bool"]]],[11,R[801],E,R[1016],51,[[[R[1102]],["self"]],["bool"]]],[11,"insert",E,R[1017],51,[[[R[1102]],["self"]]]],[11,"remove",E,R[1018],51,[[[R[1102]],["self"]]]],[11,"toggle",E,R[1019],51,[[[R[1102]],["self"]]]],[11,"new",E,E,39,[[[R[1101]],["option",[R[1101]]]],["ip_mreq"]]],[11,"new",E,E,40,[[[R[1103]]],[R[54]]]],[0,"sockopt",E,E,N,N],[3,"ReuseAddr",R[1284],E,N,N],[3,"ReusePort",E,E,N,N],[3,"TcpNoDelay",E,E,N,N],[3,"Linger",E,E,N,N],[3,R[1321],E,E,N,N],[3,R[1322],E,E,N,N],[3,R[1323],E,E,N,N],[3,R[1324],E,E,N,N],[3,R[1104],E,E,N,N],[3,R[1325],E,E,N,N],[3,R[1326],E,E,N,N],[3,R[1327],E,E,N,N],[3,"Broadcast",E,E,N,N],[3,"OobInline",E,E,N,N],[3,R[1328],E,E,N,N],[3,"KeepAlive",E,E,N,N],[3,R[1329],E,E,N,N],[3,R[1330],E,E,N,N],[3,"RcvBuf",E,E,N,N],[3,"SndBuf",E,E,N,N],[3,R[1331],E,E,N,N],[3,R[1332],E,E,N,N],[3,"SockType",E,E,N,N],[3,"AcceptConn",E,E,N,N],[6,R[1104],R[1105],E,N,N],[6,"InAddrT",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,R[1106],E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,R[1107],E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,R[1108],E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,R[1109],E,E,N,N],[17,R[1110],E,E,N,N],[17,R[1111],E,E,N,N],[17,R[1112],E,E,N,N],[17,R[1113],E,E,N,N],[17,R[1114],E,E,N,N],[17,R[1115],E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,R[1116],E,E,N,N],[17,R[1117],E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,R[1118],E,E,N,N],[17,R[1119],E,E,N,N],[17,R[1120],E,E,N,N],[17,R[1121],E,E,N,N],[17,R[1122],E,E,N,N],[17,R[1123],E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,R[1124],E,E,N,N],[17,R[1125],E,E,N,N],[17,R[1126],E,E,N,N],[17,R[1127],E,E,N,N],[17,R[1128],E,E,N,N],[17,R[1129],E,E,N,N],[17,R[1130],E,E,N,N],[17,R[1131],E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,R[1132],E,E,N,N],[17,R[1133],E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,R[1134],E,E,N,N],[17,R[1135],E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,R[1136],E,E,N,N],[17,R[1137],E,E,N,N],[17,R[1138],E,E,N,N],[17,R[1139],E,E,N,N],[17,R[1140],E,E,N,N],[17,R[1141],E,E,N,N],[17,R[1142],E,E,N,N],[17,R[1143],E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,R[1144],E,E,N,N],[17,R[1145],E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,R[1146],E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,R[1147],E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,R[1148],E,E,N,N],[17,R[1149],E,E,N,N],[8,"GetSockOpt",E,R[1150],N,N],[16,"Val",E,E,52,N],[8,"SetSockOpt",E,R[1150],N,N],[16,"Val",E,E,53,N],[11,"empty",E,R[1007],54,[[],[R[1151]]]],[11,"all",E,R[1008],54,[[],[R[1151]]]],[11,"bits",E,R[1009],54,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],54,[[["c_int"]],[[R[1151]],["option",[R[1151]]]]]],[11,R[1011],E,R[1012],54,[[["c_int"]],[R[1151]]]],[11,R[677],E,R[1013],54,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],54,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],54,[[[R[1151]],["self"]],["bool"]]],[11,R[801],E,R[1016],54,[[[R[1151]],["self"]],["bool"]]],[11,"insert",E,R[1017],54,[[[R[1151]],["self"]]]],[11,"remove",E,R[1018],54,[[[R[1151]],["self"]]]],[11,"toggle",E,R[1019],54,[[[R[1151]],["self"]]]],[11,"new",E,"Create a CmsgSpace. The structure is used only for space,…",55,[[],["self"]]],[11,"cmsgs",E,"Iterate over the valid control messages pointed to by this…",41,[[["self"]],["cmsgiterator"]]],[0,"stat",R[1152],E,N,N],[6,"dev_t",R[1285],E,N,N],[3,"FileStat",E,E,N,N],[12,"st_dev",E,E,56,N],[12,"st_ino",E,E,56,N],[12,R[19],E,E,56,N],[12,"st_mode",E,E,56,N],[12,"st_uid",E,E,56,N],[12,"st_gid",E,E,56,N],[12,"st_rdev",E,E,56,N],[12,"st_size",E,E,56,N],[12,R[20],E,E,56,N],[12,R[21],E,E,56,N],[12,R[22],E,E,56,N],[12,R[23],E,E,56,N],[12,R[24],E,E,56,N],[12,R[25],E,E,56,N],[12,R[26],E,E,56,N],[12,R[27],E,E,56,N],[5,"FileStat",E,E,N,[[],["i32"]]],[3,"SFlag",E,E,N,N],[3,"Mode",E,E,N,N],[5,"mknod",E,E,N,[[["mode"],["dev_t"],["sflag"],["p"]],[R[48]]]],[5,"mkdev",E,E,N,[[["u64"]],["dev_t"]]],[5,"umask",E,E,N,[[["mode"]],["mode"]]],[5,"stat",E,E,N,[[["p"]],[["filestat"],[R[48],["filestat"]]]]],[5,"lstat",E,E,N,[[["p"]],[["filestat"],[R[48],["filestat"]]]]],[5,"fstat",E,E,N,[[["rawfd"]],[["filestat"],[R[48],["filestat"]]]]],[17,"S_IFREG",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[11,"empty",E,R[1007],57,[[],["sflag"]]],[11,"all",E,R[1008],57,[[],["sflag"]]],[11,"bits",E,R[1009],57,[[["self"]],["mode_t"]]],[11,R[1021],E,R[1010],57,[[["mode_t"]],[["option",["sflag"]],["sflag"]]]],[11,R[1011],E,R[1012],57,[[["mode_t"]],["sflag"]]],[11,R[677],E,R[1013],57,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],57,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],57,[[["sflag"],["self"]],["bool"]]],[11,R[801],E,R[1016],57,[[["sflag"],["self"]],["bool"]]],[11,"insert",E,R[1017],57,[[["self"],["sflag"]]]],[11,"remove",E,R[1018],57,[[["self"],["sflag"]]]],[11,"toggle",E,R[1019],57,[[["self"],["sflag"]]]],[11,"empty",E,R[1007],58,[[],["mode"]]],[11,"all",E,R[1008],58,[[],["mode"]]],[11,"bits",E,R[1009],58,[[["self"]],["mode_t"]]],[11,R[1021],E,R[1010],58,[[["mode_t"]],[["mode"],["option",["mode"]]]]],[11,R[1011],E,R[1012],58,[[["mode_t"]],["mode"]]],[11,R[677],E,R[1013],58,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],58,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],58,[[["mode"],["self"]],["bool"]]],[11,R[801],E,R[1016],58,[[["mode"],["self"]],["bool"]]],[11,"insert",E,R[1017],58,[[["self"],["mode"]]]],[11,"remove",E,R[1018],58,[[["self"],["mode"]]]],[11,"toggle",E,R[1019],58,[[["self"],["mode"]]]],[0,"syscall",R[1152],"Indirect system call",N,N],[5,"syscall","nix::sys::syscall",E,N,N],[6,"Syscall",E,E,N,N],[7,"SYSPIVOTROOT",E,E,N,N],[7,"MEMFD_CREATE",E,E,N,N],[0,"termios",R[1152],E,N,N],[3,"Termios",R[1286],E,N,N],[12,"c_iflag",E,E,59,N],[12,"c_oflag",E,E,59,N],[12,"c_cflag",E,E,59,N],[12,"c_lflag",E,E,59,N],[12,"c_line",E,E,59,N],[12,"c_cc",E,E,59,N],[12,R[36],E,E,59,N],[12,R[37],E,E,59,N],[3,"InputFlags",E,E,N,N],[3,R[1316],E,E,N,N],[3,R[1317],E,E,N,N],[3,"LocalFlags",E,E,N,N],[4,"SetArg",E,E,N,N],[13,"TCSANOW",E,E,60,N],[13,"TCSADRAIN",E,E,60,N],[13,"TCSAFLUSH",E,E,60,N],[4,"FlushArg",E,E,N,N],[13,"TCIFLUSH",E,E,61,N],[13,"TCOFLUSH",E,E,61,N],[13,"TCIOFLUSH",E,E,61,N],[4,"FlowArg",E,E,N,N],[13,"TCOOFF",E,E,62,N],[13,"TCOON",E,E,62,N],[13,"TCIOFF",E,E,62,N],[13,"TCION",E,E,62,N],[5,R[1153],E,E,N,[[["termios"]],["speed_t"]]],[5,R[1154],E,E,N,[[["termios"]],["speed_t"]]],[5,R[1155],E,E,N,[[["termios"],["speed_t"]],[R[48]]]],[5,R[1156],E,E,N,[[["termios"],["speed_t"]],[R[48]]]],[5,"tcgetattr",E,E,N,[[["rawfd"]],[[R[48],["termios"]],["termios"]]]],[5,"tcsetattr",E,E,N,[[["setarg"],["termios"],["rawfd"]],[R[48]]]],[5,"tcdrain",E,E,N,[[["rawfd"]],[R[48]]]],[5,"tcflow",E,E,N,[[["flowarg"],["rawfd"]],[R[48]]]],[5,"tcflush",E,E,N,[[["flusharg"],["rawfd"]],[R[48]]]],[5,R[1157],E,E,N,[[["c_int"],["rawfd"]],[R[48]]]],[11,"empty",E,R[1007],63,[[],[R[1158]]]],[11,"all",E,R[1008],63,[[],[R[1158]]]],[11,"bits",E,R[1009],63,[[["self"]],[R[1160]]]],[11,R[1021],E,R[1010],63,[[[R[1160]]],[["option",[R[1158]]],[R[1158]]]]],[11,R[1011],E,R[1012],63,[[[R[1160]]],[R[1158]]]],[11,R[677],E,R[1013],63,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],63,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],63,[[[R[1158]],["self"]],["bool"]]],[11,R[801],E,R[1016],63,[[[R[1158]],["self"]],["bool"]]],[11,"insert",E,R[1017],63,[[[R[1158]],["self"]]]],[11,"remove",E,R[1018],63,[[[R[1158]],["self"]]]],[11,"toggle",E,R[1019],63,[[[R[1158]],["self"]]]],[11,"empty",E,R[1007],64,[[],[R[1159]]]],[11,"all",E,R[1008],64,[[],[R[1159]]]],[11,"bits",E,R[1009],64,[[["self"]],[R[1160]]]],[11,R[1021],E,R[1010],64,[[[R[1160]]],[["option",[R[1159]]],[R[1159]]]]],[11,R[1011],E,R[1012],64,[[[R[1160]]],[R[1159]]]],[11,R[677],E,R[1013],64,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],64,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],64,[[["self"],[R[1159]]],["bool"]]],[11,R[801],E,R[1016],64,[[["self"],[R[1159]]],["bool"]]],[11,"insert",E,R[1017],64,[[["self"],[R[1159]]]]],[11,"remove",E,R[1018],64,[[["self"],[R[1159]]]]],[11,"toggle",E,R[1019],64,[[["self"],[R[1159]]]]],[11,"empty",E,R[1007],65,[[],[R[1161]]]],[11,"all",E,R[1008],65,[[],[R[1161]]]],[11,"bits",E,R[1009],65,[[["self"]],[R[1160]]]],[11,R[1021],E,R[1010],65,[[[R[1160]]],[["option",[R[1161]]],[R[1161]]]]],[11,R[1011],E,R[1012],65,[[[R[1160]]],[R[1161]]]],[11,R[677],E,R[1013],65,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],65,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],65,[[[R[1161]],["self"]],["bool"]]],[11,R[801],E,R[1016],65,[[[R[1161]],["self"]],["bool"]]],[11,"insert",E,R[1017],65,[[[R[1161]],["self"]]]],[11,"remove",E,R[1018],65,[[[R[1161]],["self"]]]],[11,"toggle",E,R[1019],65,[[[R[1161]],["self"]]]],[11,"empty",E,R[1007],66,[[],[R[1162]]]],[11,"all",E,R[1008],66,[[],[R[1162]]]],[11,"bits",E,R[1009],66,[[["self"]],[R[1160]]]],[11,R[1021],E,R[1010],66,[[[R[1160]]],[["option",[R[1162]]],[R[1162]]]]],[11,R[1011],E,R[1012],66,[[[R[1160]]],[R[1162]]]],[11,R[677],E,R[1013],66,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],66,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],66,[[["self"],[R[1162]]],["bool"]]],[11,R[801],E,R[1016],66,[[["self"],[R[1162]]],["bool"]]],[11,"insert",E,R[1017],66,[[["self"],[R[1162]]]]],[11,"remove",E,R[1018],66,[[["self"],[R[1162]]]]],[11,"toggle",E,R[1019],66,[[["self"],[R[1162]]]]],[6,R[1160],E,E,N,N],[6,"cc_t",E,E,N,N],[6,"speed_t",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[0,"utsname",R[1152],E,N,N],[3,"UtsName",R[1287],E,N,N],[5,"uname",E,E,N,[[],["utsname"]]],[11,"sysname",E,E,67,[[["self"]],["str"]]],[11,"nodename",E,E,67,[[["self"]],["str"]]],[11,"release",E,E,67,[[["self"]],["str"]]],[11,R[9],E,E,67,[[["self"]],["str"]]],[11,"machine",E,E,67,[[["self"]],["str"]]],[0,"wait",R[1152],E,N,N],[3,R[1318],R[1288],E,N,N],[4,"WaitStatus",E,E,N,N],[13,"Exited",E,E,68,N],[13,"Signaled",E,E,68,N],[13,"Stopped",E,E,68,N],[13,"Continued",E,E,68,N],[13,"StillAlive",E,E,68,N],[5,"waitpid",E,E,N,[[["option",[R[1163]]],[R[1163]],["pid_t"]],[[R[1164]],[R[48],[R[1164]]]]]],[5,"wait",E,E,N,[[],[[R[1164]],[R[48],[R[1164]]]]]],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,R[1165],E,E,N,N],[17,"__WALL",E,E,N,N],[11,"empty",E,R[1007],69,[[],[R[1163]]]],[11,"all",E,R[1008],69,[[],[R[1163]]]],[11,"bits",E,R[1009],69,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],69,[[["c_int"]],[["option",[R[1163]]],[R[1163]]]]],[11,R[1011],E,R[1012],69,[[["c_int"]],[R[1163]]]],[11,R[677],E,R[1013],69,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],69,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],69,[[["self"],[R[1163]]],["bool"]]],[11,R[801],E,R[1016],69,[[["self"],[R[1163]]],["bool"]]],[11,"insert",E,R[1017],69,[[["self"],[R[1163]]]]],[11,"remove",E,R[1018],69,[[["self"],[R[1163]]]]],[11,"toggle",E,R[1019],69,[[["self"],[R[1163]]]]],[0,"mman",R[1152],E,N,N],[3,"MapFlags",R[1289],E,N,N],[3,"MsFlags",E,E,N,N],[3,"ProtFlags",E,E,N,N],[5,"mlock",E,E,N,[[["size_t"]],[R[48]]]],[5,"munlock",E,E,N,[[["size_t"]],[R[48]]]],[5,"mmap",E,"Calls to mmap are inherently unsafe, so they must be made…",N,[[["size_t"],[R[1194]],[R[1166]],["off_t"],["rawfd"]],[R[48]]]],[5,"munmap",E,E,N,[[["size_t"]],[R[48]]]],[5,"madvise",E,E,N,[[["size_t"],["mmapadvise"]],[R[48]]]],[5,"msync",E,E,N,[[["size_t"],["msflags"]],[R[48]]]],[5,"shm_open",E,E,N,[[["oflag"],["p"],["mode"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"shm_unlink",E,E,N,[[["p"]],[R[48]]]],[11,"empty",E,R[1007],70,[[],[R[1166]]]],[11,"all",E,R[1008],70,[[],[R[1166]]]],[11,"bits",E,R[1009],70,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],70,[[["c_int"]],[[R[1166]],["option",[R[1166]]]]]],[11,R[1011],E,R[1012],70,[[["c_int"]],[R[1166]]]],[11,R[677],E,R[1013],70,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],70,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],70,[[[R[1166]],["self"]],["bool"]]],[11,R[801],E,R[1016],70,[[[R[1166]],["self"]],["bool"]]],[11,"insert",E,R[1017],70,[[[R[1166]],["self"]]]],[11,"remove",E,R[1018],70,[[[R[1166]],["self"]]]],[11,"toggle",E,R[1019],70,[[[R[1166]],["self"]]]],[11,"empty",E,R[1007],71,[[],["msflags"]]],[11,"all",E,R[1008],71,[[],["msflags"]]],[11,"bits",E,R[1009],71,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],71,[[["c_int"]],[["msflags"],["option",["msflags"]]]]],[11,R[1011],E,R[1012],71,[[["c_int"]],["msflags"]]],[11,R[677],E,R[1013],71,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],71,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],71,[[["msflags"],["self"]],["bool"]]],[11,R[801],E,R[1016],71,[[["msflags"],["self"]],["bool"]]],[11,"insert",E,R[1017],71,[[["msflags"],["self"]]]],[11,"remove",E,R[1018],71,[[["msflags"],["self"]]]],[11,"toggle",E,R[1019],71,[[["msflags"],["self"]]]],[6,"MmapAdvise",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,R[1167],E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,R[1168],E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,R[1169],E,E,N,N],[17,R[1170],E,E,N,N],[17,R[1171],E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,R[1172],E,E,N,N],[17,R[1173],E,E,N,N],[17,R[1174],E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,R[1175],E,E,N,N],[17,R[1176],E,E,N,N],[17,R[1177],E,E,N,N],[17,R[1178],E,E,N,N],[17,R[1179],E,E,N,N],[17,R[1180],E,E,N,N],[17,R[1181],E,E,N,N],[17,R[1182],E,E,N,N],[17,R[1183],E,E,N,N],[17,R[1184],E,E,N,N],[17,R[1185],E,E,N,N],[17,R[1186],E,E,N,N],[17,R[1187],E,E,N,N],[17,R[1188],E,E,N,N],[17,R[1189],E,E,N,N],[17,R[1190],E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[1191],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,R[1192],E,E,N,N],[17,R[1193],E,E,N,N],[11,"empty",E,R[1007],72,[[],[R[1194]]]],[11,"all",E,R[1008],72,[[],[R[1194]]]],[11,"bits",E,R[1009],72,[[["self"]],["c_int"]]],[11,R[1021],E,R[1010],72,[[["c_int"]],[[R[1194]],["option",[R[1194]]]]]],[11,R[1011],E,R[1012],72,[[["c_int"]],[R[1194]]]],[11,R[677],E,R[1013],72,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],72,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],72,[[[R[1194]],["self"]],["bool"]]],[11,R[801],E,R[1016],72,[[[R[1194]],["self"]],["bool"]]],[11,"insert",E,R[1017],72,[[[R[1194]],["self"]]]],[11,"remove",E,R[1018],72,[[[R[1194]],["self"]]]],[11,"toggle",E,R[1019],72,[[[R[1194]],["self"]]]],[0,"uio",R[1152],E,N,N],[3,"IoVec",R[1290],E,N,N],[5,"writev",E,E,N,[[["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"readv",E,E,N,[[["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"pwrite",E,E,N,[[["off_t"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"pread",E,E,N,[[["off_t"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[11,"as_slice",E,E,73,[[["self"]]]],[11,R[674],E,E,73,[[],["iovec"]]],[11,"from_mut_slice",E,E,73,[[],["iovec"]]],[0,"time",R[1152],E,N,N],[3,"TimeVal",R[1291],E,N,N],[12,R[0],E,E,74,N],[12,"tv_usec",E,E,74,N],[11,"zero",E,E,74,[[],["timeval"]]],[11,"hours",E,E,74,[[["i64"]],["timeval"]]],[11,"minutes",E,E,74,[[["i64"]],["timeval"]]],[11,"seconds",E,E,74,[[["i64"]],["timeval"]]],[11,R[1333],E,E,74,[[["i64"]],["timeval"]]],[11,R[1334],E,"Makes a new `TimeVal` with given number of microseconds.",74,[[["i64"]],["timeval"]]],[11,"num_hours",E,E,74,[[["self"]],["i64"]]],[11,R[1335],E,E,74,[[["self"]],["i64"]]],[11,R[1336],E,E,74,[[["self"]],["i64"]]],[11,R[1337],E,E,74,[[["self"]],["i64"]]],[11,R[1338],E,E,74,[[["self"]],["i64"]]],[0,"ptrace",R[1152],E,N,N],[5,"ptrace","nix::sys::ptrace",E,N,[[["pid_t"],["ptracerequest"]],[[R[48],["c_long"]],["c_long"]]]],[5,"ptrace_setoptions",E,"Set options, as with ptrace(PTRACE_SETOPTIONS,...).",N,[[["ptraceoptions"],["pid_t"]],[R[48]]]],[0,"ptrace",E,E,N,N],[6,"PtraceRequest","nix::sys::ptrace::ptrace",E,N,N],[6,"PtraceEvent",E,E,N,N],[6,"PtraceOptions",E,E,N,N],[17,R[1195],E,E,N,N],[17,R[1196],E,E,N,N],[17,R[1197],E,E,N,N],[17,R[1198],E,E,N,N],[17,R[1199],E,E,N,N],[17,R[1200],E,E,N,N],[17,R[1201],E,E,N,N],[17,R[1202],E,E,N,N],[17,R[1203],E,E,N,N],[17,R[1204],E,E,N,N],[17,R[1205],E,E,N,N],[17,R[1206],E,E,N,N],[17,R[1207],E,E,N,N],[17,R[1208],E,E,N,N],[17,R[1209],E,E,N,N],[17,R[1210],E,E,N,N],[17,R[1211],E,E,N,N],[17,R[1212],E,E,N,N],[17,R[1213],E,E,N,N],[17,R[1214],E,E,N,N],[17,R[1215],E,E,N,N],[17,R[1216],E,E,N,N],[17,R[1217],E,E,N,N],[17,R[1218],E,E,N,N],[17,R[1219],E,E,N,N],[17,R[1220],E,E,N,N],[17,R[1221],E,E,N,N],[17,R[1222],E,E,N,N],[17,R[1223],E,E,N,N],[17,R[1224],E,E,N,N],[17,R[1225],E,E,N,N],[17,R[1226],E,E,N,N],[17,R[1227],E,E,N,N],[17,R[1228],E,E,N,N],[17,R[1229],E,E,N,N],[17,R[1230],E,E,N,N],[17,"PTRACE_EVENT_STOP",E,E,N,N],[17,R[1231],E,E,N,N],[17,R[1232],E,E,N,N],[17,R[1233],E,E,N,N],[17,R[1234],E,E,N,N],[17,R[1235],E,E,N,N],[17,R[1236],E,E,N,N],[17,R[1237],E,E,N,N],[17,R[1238],E,E,N,N],[0,"select",R[1152],E,N,N],[3,"FdSet",R[1292],E,N,N],[5,"select",E,E,N,[[["option",["timeval"]],["option",["fdset"]],["c_int"],["fdset"],["timeval"]],[["c_int"],[R[48],["c_int"]]]]],[17,"FD_SETSIZE",E,E,N,N],[11,"new",E,E,75,[[],["fdset"]]],[11,"insert",E,E,75,[[["self"],["rawfd"]]]],[11,"remove",E,E,75,[[["self"],["rawfd"]]]],[11,R[801],E,E,75,[[["self"],["rawfd"]],["bool"]]],[11,"clear",E,E,75,[[["self"]]]],[0,"quota",R[1152],E,N,N],[5,"quotactl_on","nix::sys::quota",E,N,[[[R[1239]],["p"],["quotafmt"]],[R[48]]]],[5,"quotactl_off",E,E,N,[[[R[1239]],["p"]],[R[48]]]],[5,"quotactl_sync",E,E,N,[[[R[1239]],["option"],["p"]],[R[48]]]],[5,"quotactl_get",E,E,N,[[[R[1239]],["c_int"],["p"],["dqblk"]],[R[48]]]],[5,"quotactl_set",E,E,N,[[[R[1239]],["c_int"],["p"],["dqblk"]],[R[48]]]],[0,"quota",E,E,N,N],[3,"QuotaCmd",R[1293],E,N,N],[12,"0",E,E,76,N],[12,"1",E,E,76,N],[3,R[1319],E,E,N,N],[3,"Dqblk",E,E,N,N],[12,"bhardlimit",E,E,77,N],[12,"bsoftlimit",E,E,77,N],[12,"curspace",E,E,77,N],[12,"ihardlimit",E,E,77,N],[12,"isoftlimit",E,E,77,N],[12,"curinodes",E,E,77,N],[12,"btime",E,E,77,N],[12,"itime",E,E,77,N],[12,"valid",E,E,77,N],[6,"QuotaSubCmd",E,E,N,N],[6,"QuotaType",E,E,N,N],[6,"QuotaFmt",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,R[1240],E,E,N,N],[17,R[1241],E,E,N,N],[17,R[1242],E,E,N,N],[17,R[1243],E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,R[1244],E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[11,"as_int",E,E,76,[[["self"]],["c_int"]]],[11,"empty",E,R[1007],78,[[],[R[1245]]]],[11,"all",E,R[1008],78,[[],[R[1245]]]],[11,"bits",E,R[1009],78,[[["self"]],["u32"]]],[11,R[1021],E,R[1010],78,[[["u32"]],[[R[1245]],["option",[R[1245]]]]]],[11,R[1011],E,R[1012],78,[[["u32"]],[R[1245]]]],[11,R[677],E,R[1013],78,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],78,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],78,[[[R[1245]],["self"]],["bool"]]],[11,R[801],E,R[1016],78,[[[R[1245]],["self"]],["bool"]]],[11,"insert",E,R[1017],78,[[[R[1245]],["self"]]]],[11,"remove",E,R[1018],78,[[[R[1245]],["self"]]]],[11,"toggle",E,R[1019],78,[[[R[1245]],["self"]]]],[0,"statfs",R[1152],E,N,N],[5,"statfs","nix::sys::statfs",E,N,[[["statfs"],["p"]],[R[48]]]],[5,"fstatfs",E,E,N,[[["statfs"],[T]],[R[48]]]],[0,"vfs",E,E,N,N],[3,"Statfs",R[1247],E,N,N],[12,"f_type",E,E,79,N],[12,R[28],E,E,79,N],[12,R[16],E,E,79,N],[12,R[29],E,E,79,N],[12,R[17],E,E,79,N],[12,R[30],E,E,79,N],[12,R[31],E,E,79,N],[12,"f_fsid",E,E,79,N],[12,R[32],E,E,79,N],[12,R[18],E,E,79,N],[12,"f_spare",E,E,79,N],[0,"hwdep",E,E,N,N],[6,"FsType","nix::sys::statfs::vfs::hwdep",E,N,N],[6,"BlockSize",E,E,N,N],[6,"NameLen",E,E,N,N],[6,"FragmentSize",E,E,N,N],[6,"SwordType",E,E,N,N],[17,R[1246],R[1247],E,N,N],[17,R[1248],E,E,N,N],[17,"BEFS_SUPER_MAGIC",E,E,N,N],[17,"BFS_MAGIC",E,E,N,N],[17,"CIFS_MAGIC_NUMBER",E,E,N,N],[17,R[1249],E,E,N,N],[17,"COH_SUPER_MAGIC",E,E,N,N],[17,R[1250],E,E,N,N],[17,"DEVFS_SUPER_MAGIC",E,E,N,N],[17,R[1251],E,E,N,N],[17,"EXT_SUPER_MAGIC",E,E,N,N],[17,"EXT2_OLD_SUPER_MAGIC",E,E,N,N],[17,R[1252],E,E,N,N],[17,R[1253],E,E,N,N],[17,R[1254],E,E,N,N],[17,"HFS_SUPER_MAGIC",E,E,N,N],[17,R[1255],E,E,N,N],[17,R[1256],E,E,N,N],[17,R[1257],E,E,N,N],[17,R[1258],E,E,N,N],[17,"JFS_SUPER_MAGIC",E,E,N,N],[17,R[1259],E,E,N,N],[17,R[1260],E,E,N,N],[17,R[1261],E,E,N,N],[17,R[1262],E,E,N,N],[17,R[1263],E,E,N,N],[17,R[1264],E,E,N,N],[17,R[1265],E,E,N,N],[17,"NTFS_SB_MAGIC",E,E,N,N],[17,R[1266],E,E,N,N],[17,R[1267],E,E,N,N],[17,R[1268],E,E,N,N],[17,R[1269],E,E,N,N],[17,"ROMFS_MAGIC",E,E,N,N],[17,R[1270],E,E,N,N],[17,"SYSV2_SUPER_MAGIC",E,E,N,N],[17,"SYSV4_SUPER_MAGIC",E,E,N,N],[17,R[1271],E,E,N,N],[17,"UDF_SUPER_MAGIC",E,E,N,N],[17,"UFS_MAGIC",E,E,N,N],[17,R[1272],E,E,N,N],[17,"VXFS_SUPER_MAGIC",E,E,N,N],[17,"XENIX_SUPER_MAGIC",E,E,N,N],[17,"XFS_SUPER_MAGIC",E,E,N,N],[17,"_XIAFS_SUPER_MAGIC",E,E,N,N],[0,R[76],R[1152],"FFI for statvfs functions",N,N],[5,R[76],"nix::sys::statvfs",R[1273],N,[[["p"],[R[76]]],[R[48]]]],[5,"fstatvfs",E,R[1273],N,[[[T],[R[76]]],[R[48]]]],[0,"vfs",E,"Structs related to the `statvfs` and `fstatvfs` functions",N,N],[3,"FsFlags",R[1294],R[1274],N,N],[3,"Statvfs",E,"The posix statvfs struct",N,N],[12,R[28],E,"Filesystem block size. This is the value that will lead to…",80,N],[12,R[18],E,"Fragment Size -- actual minimum unit of allocation on this…",80,N],[12,R[16],E,"Total number of blocks on the filesystem",80,N],[12,R[29],E,"Number of unused blocks on the filesystem, including those…",80,N],[12,R[17],E,"Number of blocks available to non-root users",80,N],[12,R[30],E,"Total number of inodes available on the filesystem",80,N],[12,R[31],E,"Number of inodes available on the filesystem",80,N],[12,R[33],E,"Number of inodes available to non-root users",80,N],[12,"f_fsid",E,"File System ID",80,N],[12,"f_flag",E,R[1274],80,N],[12,R[34],E,"Maximum filename length",80,N],[17,"RDONLY",E,"Read Only",N,N],[17,"NOSUID",E,"Do not allow the set-uid bits to have an effect",N,N],[17,"NODEV",E,"Do not interpret character or block-special devices",N,N],[17,"NOEXEC",E,"Do not allow execution of binaries on the filesystem",N,N],[17,"SYNCHRONOUS",E,"All IO should be done synchronously",N,N],[17,"MANDLOCK",E,"Allow mandatory locks on the filesystem",N,N],[17,"WRITE",E,E,N,N],[17,"APPEND",E,E,N,N],[17,"IMMUTABLE",E,E,N,N],[17,"NOATIME",E,R[1275],N,N],[17,"NODIRATIME",E,R[1275],N,N],[17,"RELATIME",E,"Update access time relative to modify/change time",N,N],[11,"empty",E,R[1007],81,[[],["fsflags"]]],[11,"all",E,R[1008],81,[[],["fsflags"]]],[11,"bits",E,R[1009],81,[[["self"]],["c_ulong"]]],[11,R[1021],E,R[1010],81,[[["c_ulong"]],[["option",["fsflags"]],["fsflags"]]]],[11,R[1011],E,R[1012],81,[[["c_ulong"]],["fsflags"]]],[11,R[677],E,R[1013],81,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],81,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],81,[[["self"],["fsflags"]],["bool"]]],[11,R[801],E,R[1016],81,[[["self"],["fsflags"]],["bool"]]],[11,"insert",E,R[1017],81,[[["self"],["fsflags"]]]],[11,"remove",E,R[1018],81,[[["self"],["fsflags"]]]],[11,"toggle",E,R[1019],81,[[["self"],["fsflags"]]]],[11,"for_path",E,R[1276],80,[[["p"]],[[R[48],[R[76]]],[R[76]]]]],[11,"update_with_path",E,R[1277],80,[[["self"],["p"]],[R[48]]]],[11,"for_fd",E,R[1276],80,[[[T]],[[R[48],[R[76]]],[R[76]]]]],[11,"update_with_fd",E,R[1277],80,[[["self"],[T]],[R[48]]]],[0,"unistd","nix","Standard symbolic constants and types",N,N],[4,"Fork",R[1295],E,N,N],[13,"Parent",E,E,82,N],[13,"Child",E,E,82,N],[5,"pivot_root",E,E,N,[[["p1"],["p2"]],[R[48]]]],[5,"fork",E,E,N,[[],[[R[48],["fork"]],["fork"]]]],[5,"getpid",E,E,N,[[],["pid_t"]]],[5,"getppid",E,E,N,[[],["pid_t"]]],[5,"setpgid",E,E,N,[[["pid_t"]],[R[48]]]],[5,"dup",E,E,N,[[["rawfd"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"dup2",E,E,N,[[["rawfd"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"dup3",E,E,N,[[["oflag"],["rawfd"]],[[R[48],["rawfd"]],["rawfd"]]]],[5,"chdir",E,E,N,[[["p"]],[R[48]]]],[5,"chown",E,E,N,[[["option",["gid_t"]],["option",["uid_t"]],["gid_t"],["uid_t"],["p"]],[R[48]]]],[5,"execv",E,E,N,[[["cstring"]],[R[48]]]],[5,"execve",E,E,N,[[["cstring"]],[R[48]]]],[5,"execvp",E,E,N,[[["cstring"]],[R[48]]]],[5,"daemon",E,E,N,[[["bool"]],[R[48]]]],[5,R[1278],E,E,N,[[],[R[48]]]],[5,R[1279],E,E,N,[[],[R[48]]]],[5,"close",E,E,N,[[["rawfd"]],[R[48]]]],[5,"read",E,E,N,[[["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"write",E,E,N,[[["rawfd"]],[[R[48],["usize"]],["usize"]]]],[5,"pipe",E,E,N,[[],[R[48]]]],[5,"pipe2",E,E,N,[[["oflag"]],[R[48]]]],[5,"ftruncate",E,E,N,[[["off_t"],["rawfd"]],[R[48]]]],[5,"isatty",E,E,N,[[["rawfd"]],[[R[48],["bool"]],["bool"]]]],[5,"unlink",E,E,N,[[["p"]],[R[48]]]],[5,"chroot",E,E,N,[[["p"]],[R[48]]]],[5,"fsync",E,E,N,[[["rawfd"]],[R[48]]]],[5,"fdatasync",E,E,N,[[["rawfd"]],[R[48]]]],[5,"getuid",E,E,N,[[],["uid_t"]]],[5,"geteuid",E,E,N,[[],["uid_t"]]],[5,"getgid",E,E,N,[[],["gid_t"]]],[5,"getegid",E,E,N,[[],["gid_t"]]],[5,"setuid",E,E,N,[[["uid_t"]],[R[48]]]],[5,"setgid",E,E,N,[[["gid_t"]],[R[48]]]],[11,"is_child",E,E,82,[[["self"]],["bool"]]],[11,"is_parent",E,E,82,[[["self"]],["bool"]]],[6,"Result","nix",E,N,N],[8,"NixPath",E,E,N,N],[10,"len",E,E,83,[[["self"]],["usize"]]],[10,"with_nix_path",E,E,83,[[["self"],["f"]],[R[48]]]],[11,"from_errno",E,E,1,[[["errno"]],["error"]]],[11,"last",E,E,1,[[],["error"]]],[11,"invalid_argument",E,E,1,[[],["error"]]],[11,"errno",E,E,1,[[["self"]],["errno"]]],[14,"ioc",E,"Encode an ioctl command.",N,N],[14,"io",E,"Encode an ioctl command that has no associated data.",N,N],[14,"ior",E,"Encode an ioctl command that reads.",N,N],[14,"iow",E,"Encode an ioctl command that writes.",N,N],[14,"iorw",E,"Encode an ioctl command that both reads and writes.",N,N],[14,"convert_ioctl_res",E,"Convert raw ioctl return value to a Nix result",N,N],[14,"ioctl",E,"Declare a wrapper function around an ioctl.",N,N],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[45],E,E,84,[[[U]],[R[48]]]],[11,R[46],E,E,84,[[],[R[48]]]],[11,R[50],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"]],[T]]],[11,R[49],E,E,84,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",R[1297],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",R[1298],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",R[1280],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",R[1301],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",R[1299],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"],[T]]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",R[1281],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"],[T]]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",R[1282],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",R[1283],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"],[T]]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"],[T]]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[44],E,E,23,[[["self"],[T]]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",R[1105],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[43],E,E,28,[[["self"]],[T]]],[11,R[44],E,E,28,[[["self"],[T]]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[43],E,E,29,[[["self"]],[T]]],[11,R[44],E,E,29,[[["self"],[T]]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[43],E,E,30,[[["self"]],[T]]],[11,R[44],E,E,30,[[["self"],[T]]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[44],E,E,31,[[["self"],[T]]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[44],E,E,35,[[["self"],[T]]]],[11,R[205],E,E,35,[[["self"]],["string"]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[44],E,E,36,[[["self"],[T]]]],[11,R[205],E,E,36,[[["self"]],["string"]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[44],E,E,37,[[["self"],[T]]]],[11,R[205],E,E,37,[[["self"]],["string"]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[205],E,E,38,[[["self"]],["string"]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[44],E,E,39,[[["self"],[T]]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[43],E,E,51,[[["self"]],[T]]],[11,R[44],E,E,51,[[["self"],[T]]]],[11,R[45],E,E,51,[[[U]],[R[48]]]],[11,R[46],E,E,51,[[],[R[48]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[51]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[43],E,E,54,[[["self"]],[T]]],[11,R[44],E,E,54,[[["self"],[T]]]],[11,R[45],E,E,54,[[[U]],[R[48]]]],[11,R[46],E,E,54,[[],[R[48]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[51]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[45],E,E,55,[[[U]],[R[48]]]],[11,R[46],E,E,55,[[],[R[48]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[51]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[364],E,E,85,[[],["i"]]],[11,R[45],E,E,85,[[[U]],[R[48]]]],[11,R[46],E,E,85,[[],[R[48]]]],[11,R[50],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"]],[T]]],[11,R[49],E,E,85,[[["self"]],[R[51]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[43],E,E,42,[[["self"]],[T]]],[11,R[44],E,E,42,[[["self"],[T]]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[43],E,E,86,[[["self"]],[T]]],[11,R[44],E,E,86,[[["self"],[T]]]],[11,R[45],E,E,86,[[[U]],[R[48]]]],[11,R[46],E,E,86,[[],[R[48]]]],[11,R[50],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"]],[T]]],[11,R[49],E,E,86,[[["self"]],[R[51]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[43],E,E,43,[[["self"]],[T]]],[11,R[44],E,E,43,[[["self"],[T]]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[43],E,E,44,[[["self"]],[T]]],[11,R[44],E,E,44,[[["self"],[T]]]],[11,R[205],E,E,44,[[["self"]],["string"]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[43],E,E,45,[[["self"]],[T]]],[11,R[44],E,E,45,[[["self"],[T]]]],[11,R[205],E,E,45,[[["self"]],["string"]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[205],E,E,46,[[["self"]],["string"]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[45],E,E,49,[[[U]],[R[48]]]],[11,R[46],E,E,49,[[],[R[48]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[51]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[43],E,E,50,[[["self"]],[T]]],[11,R[44],E,E,50,[[["self"],[T]]]],[11,R[45],E,E,50,[[[U]],[R[48]]]],[11,R[46],E,E,50,[[],[R[48]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[51]]]],[11,"into",R[1284],E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[43],E,E,87,[[["self"]],[T]]],[11,R[44],E,E,87,[[["self"],[T]]]],[11,R[45],E,E,87,[[[U]],[R[48]]]],[11,R[46],E,E,87,[[],[R[48]]]],[11,R[50],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"]],[T]]],[11,R[49],E,E,87,[[["self"]],[R[51]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[43],E,E,88,[[["self"]],[T]]],[11,R[44],E,E,88,[[["self"],[T]]]],[11,R[45],E,E,88,[[[U]],[R[48]]]],[11,R[46],E,E,88,[[],[R[48]]]],[11,R[50],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"]],[T]]],[11,R[49],E,E,88,[[["self"]],[R[51]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[43],E,E,89,[[["self"]],[T]]],[11,R[44],E,E,89,[[["self"],[T]]]],[11,R[45],E,E,89,[[[U]],[R[48]]]],[11,R[46],E,E,89,[[],[R[48]]]],[11,R[50],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"]],[T]]],[11,R[49],E,E,89,[[["self"]],[R[51]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[43],E,E,90,[[["self"]],[T]]],[11,R[44],E,E,90,[[["self"],[T]]]],[11,R[45],E,E,90,[[[U]],[R[48]]]],[11,R[46],E,E,90,[[],[R[48]]]],[11,R[50],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"]],[T]]],[11,R[49],E,E,90,[[["self"]],[R[51]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[43],E,E,91,[[["self"]],[T]]],[11,R[44],E,E,91,[[["self"],[T]]]],[11,R[45],E,E,91,[[[U]],[R[48]]]],[11,R[46],E,E,91,[[],[R[48]]]],[11,R[50],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"]],[T]]],[11,R[49],E,E,91,[[["self"]],[R[51]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[43],E,E,92,[[["self"]],[T]]],[11,R[44],E,E,92,[[["self"],[T]]]],[11,R[45],E,E,92,[[[U]],[R[48]]]],[11,R[46],E,E,92,[[],[R[48]]]],[11,R[50],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"]],[T]]],[11,R[49],E,E,92,[[["self"]],[R[51]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[43],E,E,93,[[["self"]],[T]]],[11,R[44],E,E,93,[[["self"],[T]]]],[11,R[45],E,E,93,[[[U]],[R[48]]]],[11,R[46],E,E,93,[[],[R[48]]]],[11,R[50],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"]],[T]]],[11,R[49],E,E,93,[[["self"]],[R[51]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[43],E,E,94,[[["self"]],[T]]],[11,R[44],E,E,94,[[["self"],[T]]]],[11,R[45],E,E,94,[[[U]],[R[48]]]],[11,R[46],E,E,94,[[],[R[48]]]],[11,R[50],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"]],[T]]],[11,R[49],E,E,94,[[["self"]],[R[51]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[43],E,E,95,[[["self"]],[T]]],[11,R[44],E,E,95,[[["self"],[T]]]],[11,R[45],E,E,95,[[[U]],[R[48]]]],[11,R[46],E,E,95,[[],[R[48]]]],[11,R[50],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"]],[T]]],[11,R[49],E,E,95,[[["self"]],[R[51]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[43],E,E,96,[[["self"]],[T]]],[11,R[44],E,E,96,[[["self"],[T]]]],[11,R[45],E,E,96,[[[U]],[R[48]]]],[11,R[46],E,E,96,[[],[R[48]]]],[11,R[50],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"]],[T]]],[11,R[49],E,E,96,[[["self"]],[R[51]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[43],E,E,97,[[["self"]],[T]]],[11,R[44],E,E,97,[[["self"],[T]]]],[11,R[45],E,E,97,[[[U]],[R[48]]]],[11,R[46],E,E,97,[[],[R[48]]]],[11,R[50],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"]],[T]]],[11,R[49],E,E,97,[[["self"]],[R[51]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[43],E,E,98,[[["self"]],[T]]],[11,R[44],E,E,98,[[["self"],[T]]]],[11,R[45],E,E,98,[[[U]],[R[48]]]],[11,R[46],E,E,98,[[],[R[48]]]],[11,R[50],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"]],[T]]],[11,R[49],E,E,98,[[["self"]],[R[51]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[43],E,E,99,[[["self"]],[T]]],[11,R[44],E,E,99,[[["self"],[T]]]],[11,R[45],E,E,99,[[[U]],[R[48]]]],[11,R[46],E,E,99,[[],[R[48]]]],[11,R[50],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"]],[T]]],[11,R[49],E,E,99,[[["self"]],[R[51]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[43],E,E,100,[[["self"]],[T]]],[11,R[44],E,E,100,[[["self"],[T]]]],[11,R[45],E,E,100,[[[U]],[R[48]]]],[11,R[46],E,E,100,[[],[R[48]]]],[11,R[50],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"]],[T]]],[11,R[49],E,E,100,[[["self"]],[R[51]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[43],E,E,101,[[["self"]],[T]]],[11,R[44],E,E,101,[[["self"],[T]]]],[11,R[45],E,E,101,[[[U]],[R[48]]]],[11,R[46],E,E,101,[[],[R[48]]]],[11,R[50],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"]],[T]]],[11,R[49],E,E,101,[[["self"]],[R[51]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[43],E,E,102,[[["self"]],[T]]],[11,R[44],E,E,102,[[["self"],[T]]]],[11,R[45],E,E,102,[[[U]],[R[48]]]],[11,R[46],E,E,102,[[],[R[48]]]],[11,R[50],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"]],[T]]],[11,R[49],E,E,102,[[["self"]],[R[51]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[43],E,E,103,[[["self"]],[T]]],[11,R[44],E,E,103,[[["self"],[T]]]],[11,R[45],E,E,103,[[[U]],[R[48]]]],[11,R[46],E,E,103,[[],[R[48]]]],[11,R[50],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"]],[T]]],[11,R[49],E,E,103,[[["self"]],[R[51]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[43],E,E,104,[[["self"]],[T]]],[11,R[44],E,E,104,[[["self"],[T]]]],[11,R[45],E,E,104,[[[U]],[R[48]]]],[11,R[46],E,E,104,[[],[R[48]]]],[11,R[50],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"]],[T]]],[11,R[49],E,E,104,[[["self"]],[R[51]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[43],E,E,105,[[["self"]],[T]]],[11,R[44],E,E,105,[[["self"],[T]]]],[11,R[45],E,E,105,[[[U]],[R[48]]]],[11,R[46],E,E,105,[[],[R[48]]]],[11,R[50],E,E,105,[[["self"]],[T]]],[11,R[47],E,E,105,[[["self"]],[T]]],[11,R[49],E,E,105,[[["self"]],[R[51]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[43],E,E,106,[[["self"]],[T]]],[11,R[44],E,E,106,[[["self"],[T]]]],[11,R[45],E,E,106,[[[U]],[R[48]]]],[11,R[46],E,E,106,[[],[R[48]]]],[11,R[50],E,E,106,[[["self"]],[T]]],[11,R[47],E,E,106,[[["self"]],[T]]],[11,R[49],E,E,106,[[["self"]],[R[51]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[43],E,E,107,[[["self"]],[T]]],[11,R[44],E,E,107,[[["self"],[T]]]],[11,R[45],E,E,107,[[[U]],[R[48]]]],[11,R[46],E,E,107,[[],[R[48]]]],[11,R[50],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"]],[T]]],[11,R[49],E,E,107,[[["self"]],[R[51]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[43],E,E,108,[[["self"]],[T]]],[11,R[44],E,E,108,[[["self"],[T]]]],[11,R[45],E,E,108,[[[U]],[R[48]]]],[11,R[46],E,E,108,[[],[R[48]]]],[11,R[50],E,E,108,[[["self"]],[T]]],[11,R[47],E,E,108,[[["self"]],[T]]],[11,R[49],E,E,108,[[["self"]],[R[51]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[43],E,E,109,[[["self"]],[T]]],[11,R[44],E,E,109,[[["self"],[T]]]],[11,R[45],E,E,109,[[[U]],[R[48]]]],[11,R[46],E,E,109,[[],[R[48]]]],[11,R[50],E,E,109,[[["self"]],[T]]],[11,R[47],E,E,109,[[["self"]],[T]]],[11,R[49],E,E,109,[[["self"]],[R[51]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[43],E,E,110,[[["self"]],[T]]],[11,R[44],E,E,110,[[["self"],[T]]]],[11,R[45],E,E,110,[[[U]],[R[48]]]],[11,R[46],E,E,110,[[],[R[48]]]],[11,R[50],E,E,110,[[["self"]],[T]]],[11,R[47],E,E,110,[[["self"]],[T]]],[11,R[49],E,E,110,[[["self"]],[R[51]]]],[11,"into",R[1285],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[43],E,E,56,[[["self"]],[T]]],[11,R[44],E,E,56,[[["self"],[T]]]],[11,R[45],E,E,56,[[[U]],[R[48]]]],[11,R[46],E,E,56,[[],[R[48]]]],[11,R[50],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"]],[T]]],[11,R[49],E,E,56,[[["self"]],[R[51]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[43],E,E,57,[[["self"]],[T]]],[11,R[44],E,E,57,[[["self"],[T]]]],[11,R[45],E,E,57,[[[U]],[R[48]]]],[11,R[46],E,E,57,[[],[R[48]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[51]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[43],E,E,58,[[["self"]],[T]]],[11,R[44],E,E,58,[[["self"],[T]]]],[11,R[45],E,E,58,[[[U]],[R[48]]]],[11,R[46],E,E,58,[[],[R[48]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[51]]]],[11,"into",R[1286],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[43],E,E,59,[[["self"]],[T]]],[11,R[44],E,E,59,[[["self"],[T]]]],[11,R[45],E,E,59,[[[U]],[R[48]]]],[11,R[46],E,E,59,[[],[R[48]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[51]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[43],E,E,63,[[["self"]],[T]]],[11,R[44],E,E,63,[[["self"],[T]]]],[11,R[45],E,E,63,[[[U]],[R[48]]]],[11,R[46],E,E,63,[[],[R[48]]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[["self"]],[R[51]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[43],E,E,64,[[["self"]],[T]]],[11,R[44],E,E,64,[[["self"],[T]]]],[11,R[45],E,E,64,[[[U]],[R[48]]]],[11,R[46],E,E,64,[[],[R[48]]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[["self"]],[R[51]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[43],E,E,65,[[["self"]],[T]]],[11,R[44],E,E,65,[[["self"],[T]]]],[11,R[45],E,E,65,[[[U]],[R[48]]]],[11,R[46],E,E,65,[[],[R[48]]]],[11,R[50],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"]],[T]]],[11,R[49],E,E,65,[[["self"]],[R[51]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[43],E,E,66,[[["self"]],[T]]],[11,R[44],E,E,66,[[["self"],[T]]]],[11,R[45],E,E,66,[[[U]],[R[48]]]],[11,R[46],E,E,66,[[],[R[48]]]],[11,R[50],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[["self"]],[R[51]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[43],E,E,60,[[["self"]],[T]]],[11,R[44],E,E,60,[[["self"],[T]]]],[11,R[45],E,E,60,[[[U]],[R[48]]]],[11,R[46],E,E,60,[[],[R[48]]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[["self"]],[R[51]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[43],E,E,61,[[["self"]],[T]]],[11,R[44],E,E,61,[[["self"],[T]]]],[11,R[45],E,E,61,[[[U]],[R[48]]]],[11,R[46],E,E,61,[[],[R[48]]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[["self"]],[R[51]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[43],E,E,62,[[["self"]],[T]]],[11,R[44],E,E,62,[[["self"],[T]]]],[11,R[45],E,E,62,[[[U]],[R[48]]]],[11,R[46],E,E,62,[[],[R[48]]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"]],[T]]],[11,R[49],E,E,62,[[["self"]],[R[51]]]],[11,"into",R[1287],E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[43],E,E,67,[[["self"]],[T]]],[11,R[44],E,E,67,[[["self"],[T]]]],[11,R[45],E,E,67,[[[U]],[R[48]]]],[11,R[46],E,E,67,[[],[R[48]]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[["self"]],[R[51]]]],[11,"into",R[1288],E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[43],E,E,69,[[["self"]],[T]]],[11,R[44],E,E,69,[[["self"],[T]]]],[11,R[45],E,E,69,[[[U]],[R[48]]]],[11,R[46],E,E,69,[[],[R[48]]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[["self"]],[R[51]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[43],E,E,68,[[["self"]],[T]]],[11,R[44],E,E,68,[[["self"],[T]]]],[11,R[45],E,E,68,[[[U]],[R[48]]]],[11,R[46],E,E,68,[[],[R[48]]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[["self"]],[R[51]]]],[11,"into",R[1289],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[43],E,E,70,[[["self"]],[T]]],[11,R[44],E,E,70,[[["self"],[T]]]],[11,R[45],E,E,70,[[[U]],[R[48]]]],[11,R[46],E,E,70,[[],[R[48]]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[["self"]],[R[51]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[43],E,E,71,[[["self"]],[T]]],[11,R[44],E,E,71,[[["self"],[T]]]],[11,R[45],E,E,71,[[[U]],[R[48]]]],[11,R[46],E,E,71,[[],[R[48]]]],[11,R[50],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[["self"]],[R[51]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[43],E,E,72,[[["self"]],[T]]],[11,R[44],E,E,72,[[["self"],[T]]]],[11,R[45],E,E,72,[[[U]],[R[48]]]],[11,R[46],E,E,72,[[],[R[48]]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[["self"]],[R[51]]]],[11,"into",R[1290],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[45],E,E,73,[[[U]],[R[48]]]],[11,R[46],E,E,73,[[],[R[48]]]],[11,R[50],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"]],[T]]],[11,R[49],E,E,73,[[["self"]],[R[51]]]],[11,"into",R[1291],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[43],E,E,74,[[["self"]],[T]]],[11,R[44],E,E,74,[[["self"],[T]]]],[11,R[205],E,E,74,[[["self"]],["string"]]],[11,R[45],E,E,74,[[[U]],[R[48]]]],[11,R[46],E,E,74,[[],[R[48]]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[["self"]],[R[51]]]],[11,"into",R[1292],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[43],E,E,75,[[["self"]],[T]]],[11,R[44],E,E,75,[[["self"],[T]]]],[11,R[45],E,E,75,[[[U]],[R[48]]]],[11,R[46],E,E,75,[[],[R[48]]]],[11,R[50],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"]],[T]]],[11,R[49],E,E,75,[[["self"]],[R[51]]]],[11,"into",R[1293],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[45],E,E,76,[[[U]],[R[48]]]],[11,R[46],E,E,76,[[],[R[48]]]],[11,R[50],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"]],[T]]],[11,R[49],E,E,76,[[["self"]],[R[51]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[43],E,E,78,[[["self"]],[T]]],[11,R[44],E,E,78,[[["self"],[T]]]],[11,R[45],E,E,78,[[[U]],[R[48]]]],[11,R[46],E,E,78,[[],[R[48]]]],[11,R[50],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"]],[T]]],[11,R[49],E,E,78,[[["self"]],[R[51]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[43],E,E,77,[[["self"]],[T]]],[11,R[44],E,E,77,[[["self"],[T]]]],[11,R[45],E,E,77,[[[U]],[R[48]]]],[11,R[46],E,E,77,[[],[R[48]]]],[11,R[50],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"]],[T]]],[11,R[49],E,E,77,[[["self"]],[R[51]]]],[11,"into",R[1247],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[43],E,E,79,[[["self"]],[T]]],[11,R[44],E,E,79,[[["self"],[T]]]],[11,R[45],E,E,79,[[[U]],[R[48]]]],[11,R[46],E,E,79,[[],[R[48]]]],[11,R[50],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"]],[T]]],[11,R[49],E,E,79,[[["self"]],[R[51]]]],[11,"into",R[1294],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[43],E,E,81,[[["self"]],[T]]],[11,R[44],E,E,81,[[["self"],[T]]]],[11,R[45],E,E,81,[[[U]],[R[48]]]],[11,R[46],E,E,81,[[],[R[48]]]],[11,R[50],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"]],[T]]],[11,R[49],E,E,81,[[["self"]],[R[51]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[43],E,E,80,[[["self"]],[T]]],[11,R[44],E,E,80,[[["self"],[T]]]],[11,R[45],E,E,80,[[[U]],[R[48]]]],[11,R[46],E,E,80,[[],[R[48]]]],[11,R[50],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"]],[T]]],[11,R[49],E,E,80,[[["self"]],[R[51]]]],[11,"into",R[1295],E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[43],E,E,82,[[["self"]],[T]]],[11,R[44],E,E,82,[[["self"],[T]]]],[11,R[45],E,E,82,[[[U]],[R[48]]]],[11,R[46],E,E,82,[[],[R[48]]]],[11,R[50],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"]],[T]]],[11,R[49],E,E,82,[[["self"]],[R[51]]]],[11,"clone",R[1105],E,28,[[["self"]],["in_addr"]]],[11,"clone",E,E,32,[[["self"]],[R[59]]]],[11,"clone",R[1285],E,56,[[["self"]],["stat"]]],[11,"clone",R[1105],E,29,[[["self"]],[R[53]]]],[11,"clone",E,E,30,[[["self"]],[R[57]]]],[11,"clone",E,E,33,[[["self"]],[R[60]]]],[11,"clone",E,E,34,[[["self"]],[R[61]]]],[11,"clone",E,E,31,[[["self"]],[R[58]]]],[11,"get",R[1284],E,87,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,88,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,89,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,90,[[["self"],["rawfd"]],[["linger"],[R[48],["linger"]]]]],[11,"get",E,E,95,[[["self"],["rawfd"]],[[R[48],["u8"]],["u8"]]]],[11,"get",E,E,96,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,97,[[["self"],["rawfd"]],[["timeval"],[R[48],["timeval"]]]]],[11,"get",E,E,98,[[["self"],["rawfd"]],[["timeval"],[R[48],["timeval"]]]]],[11,"get",E,E,99,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,100,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,101,[[["self"],["rawfd"]],[[R[48],["i32"]],["i32"]]]],[11,"get",E,E,102,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"get",E,E,103,[[["self"],["rawfd"]],[["ucred"],[R[48],["ucred"]]]]],[11,"get",E,E,104,[[["self"],["rawfd"]],[[R[48],["u32"]],["u32"]]]],[11,"get",E,E,105,[[["self"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[11,"get",E,E,106,[[["self"],["rawfd"]],[[R[48],["usize"]],["usize"]]]],[11,"get",E,E,109,[[["self"],["rawfd"]],[[R[48],[R[1303]]],[R[1303]]]]],[11,"get",E,E,110,[[["self"],["rawfd"]],[[R[48],["bool"]],["bool"]]]],[11,"set",E,E,87,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,88,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,89,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,90,[[["linger"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,91,[[["ip_mreq"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,92,[[["ip_mreq"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,93,[[[R[54]],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,94,[[[R[54]],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,95,[[["u8"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,96,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,97,[[["timeval"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,98,[[["timeval"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,99,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,100,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,102,[[["bool"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,104,[[["u32"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,105,[[["usize"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,106,[[["usize"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,107,[[["usize"],["self"],["rawfd"]],[R[48]]]],[11,"set",E,E,108,[[["usize"],["self"],["rawfd"]],[R[48]]]],[11,"as_ref",R[1283],E,26,[[["self"]],[R[98]]]],[11,"from","nix",E,1,[[["errno"]],["error"]]],[11,"next",R[1105],E,85,[[["self"]],[["option",[R[1296]]],[R[1296]]]]],[11,"clone","nix",E,0,[[["self"]],["errno"]]],[11,"clone",R[1297],E,3,[[["self"]],["flock"]]],[11,"clone",E,E,6,[[["self"]],[R[1006]]]],[11,"clone",E,E,7,[[["self"]],["oflag"]]],[11,"clone",E,E,8,[[["self"]],["fdflag"]]],[11,"clone",E,E,9,[[["self"]],[R[1022]]]],[11,"clone",R[1298],E,10,[[["self"]],["msflags"]]],[11,"clone",E,E,11,[[["self"]],[R[1043]]]],[11,"clone",R[1280],E,13,[[["self"]],[R[1044]]]],[11,"clone",E,E,14,[[["self"]],["fdflag"]]],[11,"clone",E,E,12,[[["self"]],["mqattr"]]],[11,"clone",R[1301],E,15,[[["self"]],["pollfd"]]],[11,"clone",E,E,16,[[["self"]],[R[1047]]]],[11,"clone",R[1299],E,17,[[["self"]],[R[1050]]]],[11,"clone",E,E,18,[[["self"]],["cpuset"]]],[11,"clone",R[1281],E,21,[[["self"]],[R[1077]]]],[11,"clone",E,E,20,[[["self"]],["epollop"]]],[11,"clone",E,E,19,[[["self"]],["epollevent"]]],[11,"clone",R[1282],E,22,[[["self"]],[R[1080]]]],[11,"clone",R[1283],E,24,[[["self"]],["saflag"]]],[11,"clone",E,E,25,[[["self"]],["sigflag"]]],[11,"clone",E,E,26,[[["self"]],["sigset"]]],[11,"clone",E,E,23,[[["self"]],[R[1302]]]],[11,"clone",R[1105],E,43,[[["self"]],[R[1095]]]],[11,"clone",E,E,45,[[["self"]],["inetaddr"]]],[11,"clone",E,E,36,[[["self"]],[R[1101]]]],[11,"clone",E,E,37,[[["self"]],[R[1103]]]],[11,"clone",E,E,35,[[["self"]],["unixaddr"]]],[11,"clone",E,E,44,[[["self"]],[R[57]]]],[11,"clone",E,E,38,[[["self"]],[R[1300]]]],[11,"clone",E,E,51,[[["self"]],[R[1102]]]],[11,"clone",E,E,39,[[["self"]],["ip_mreq"]]],[11,"clone",R[1284],E,87,[[["self"]],["reuseaddr"]]],[11,"clone",E,E,88,[[["self"]],["reuseport"]]],[11,"clone",E,E,89,[[["self"]],["tcpnodelay"]]],[11,"clone",E,E,90,[[["self"]],["linger"]]],[11,"clone",E,E,91,[[["self"]],["ipaddmembership"]]],[11,"clone",E,E,92,[[["self"]],["ipdropmembership"]]],[11,"clone",E,E,93,[[["self"]],["ipv6addmembership"]]],[11,"clone",E,E,94,[[["self"]],["ipv6dropmembership"]]],[11,"clone",E,E,95,[[["self"]],["ipmulticastttl"]]],[11,"clone",E,E,96,[[["self"]],["ipmulticastloop"]]],[11,"clone",E,E,97,[[["self"]],["receivetimeout"]]],[11,"clone",E,E,98,[[["self"]],["sendtimeout"]]],[11,"clone",E,E,99,[[["self"]],[R[2232]]]],[11,"clone",E,E,100,[[["self"]],["oobinline"]]],[11,"clone",E,E,101,[[["self"]],["socketerror"]]],[11,"clone",E,E,102,[[["self"]],["keepalive"]]],[11,"clone",E,E,103,[[["self"]],["peercredentials"]]],[11,"clone",E,E,104,[[["self"]],["tcpkeepidle"]]],[11,"clone",E,E,105,[[["self"]],["rcvbuf"]]],[11,"clone",E,E,106,[[["self"]],["sndbuf"]]],[11,"clone",E,E,107,[[["self"]],["rcvbufforce"]]],[11,"clone",E,E,108,[[["self"]],["sndbufforce"]]],[11,"clone",E,E,109,[[["self"]],[R[1303]]]],[11,"clone",E,E,110,[[["self"]],["acceptconn"]]],[11,"clone",R[1105],E,47,[[["self"]],[R[1303]]]],[11,"clone",E,E,54,[[["self"]],[R[1151]]]],[11,"clone",E,E,42,[[["self"]],["linger"]]],[11,"clone",E,E,86,[[["self"]],["ucred"]]],[11,"clone",E,E,50,[[["self"]],[R[2093]]]],[11,"clone",R[1285],E,57,[[["self"]],["sflag"]]],[11,"clone",E,E,58,[[["self"]],["mode"]]],[11,"clone",R[1286],E,59,[[["self"]],["termios"]]],[11,"clone",E,E,63,[[["self"]],[R[1158]]]],[11,"clone",E,E,64,[[["self"]],[R[1159]]]],[11,"clone",E,E,65,[[["self"]],[R[1161]]]],[11,"clone",E,E,66,[[["self"]],[R[1162]]]],[11,"clone",E,E,60,[[["self"]],["setarg"]]],[11,"clone",E,E,61,[[["self"]],["flusharg"]]],[11,"clone",E,E,62,[[["self"]],["flowarg"]]],[11,"clone",R[1287],E,67,[[["self"]],["utsname"]]],[11,"clone",R[1288],E,69,[[["self"]],[R[1163]]]],[11,"clone",E,E,68,[[["self"]],[R[1164]]]],[11,"clone",R[1289],E,72,[[["self"]],[R[1194]]]],[11,"clone",E,E,70,[[["self"]],[R[1166]]]],[11,"clone",E,E,71,[[["self"]],["msflags"]]],[11,"clone",R[1291],E,74,[[["self"]],["timeval"]]],[11,"clone",R[1292],E,75,[[["self"]],["fdset"]]],[11,"clone",R[1293],E,78,[[["self"]],[R[1245]]]],[11,"clone",E,E,77,[[["self"]],["dqblk"]]],[11,"clone",R[1247],E,79,[[["self"]],["statfs"]]],[11,"clone",R[1294],E,81,[[["self"]],["fsflags"]]],[11,"clone",E,E,80,[[["self"]],[R[76]]]],[11,"clone",R[1295],E,82,[[["self"]],["fork"]]],[11,"clone","nix",E,1,[[["self"]],["error"]]],[11,R[744],R[1297],E,3,[[],["flock"]]],[11,R[744],R[1293],E,78,[[],[R[1245]]]],[11,R[744],E,E,77,[[],["dqblk"]]],[11,R[744],R[1294],E,81,[[],["fsflags"]]],[11,R[744],E,"Create a statvfs object initialized to all zeros",80,[[],["self"]]],[11,"cmp",R[1297],E,6,[[["self"],[R[1006]]],[R[313]]]],[11,"cmp",E,E,7,[[["oflag"],["self"]],[R[313]]]],[11,"cmp",E,E,8,[[["self"],["fdflag"]],[R[313]]]],[11,"cmp",E,E,9,[[[R[1022]],["self"]],[R[313]]]],[11,"cmp",R[1298],E,10,[[["msflags"],["self"]],[R[313]]]],[11,"cmp",E,E,11,[[["self"],[R[1043]]],[R[313]]]],[11,"cmp",R[1280],E,13,[[["self"],[R[1044]]],[R[313]]]],[11,"cmp",E,E,14,[[["self"],["fdflag"]],[R[313]]]],[11,"cmp",R[1301],E,16,[[[R[1047]],["self"]],[R[313]]]],[11,"cmp",R[1299],E,17,[[["self"],[R[1050]]],[R[313]]]],[11,"cmp",R[1281],E,21,[[[R[1077]],["self"]],[R[313]]]],[11,"cmp",R[1282],E,22,[[["self"],[R[1080]]],[R[313]]]],[11,"cmp",R[1283],E,24,[[["self"],["saflag"]],[R[313]]]],[11,"cmp",E,E,25,[[["sigflag"],["self"]],[R[313]]]],[11,"cmp",R[1105],E,51,[[["self"],[R[1102]]],[R[313]]]],[11,"cmp",E,E,54,[[["self"],[R[1151]]],[R[313]]]],[11,"cmp",R[1285],E,57,[[["sflag"],["self"]],[R[313]]]],[11,"cmp",E,E,58,[[["self"],["mode"]],[R[313]]]],[11,"cmp",R[1286],E,63,[[[R[1158]],["self"]],[R[313]]]],[11,"cmp",E,E,64,[[["self"],[R[1159]]],[R[313]]]],[11,"cmp",E,E,65,[[["self"],[R[1161]]],[R[313]]]],[11,"cmp",E,E,66,[[[R[1162]],["self"]],[R[313]]]],[11,"cmp",R[1288],E,69,[[["self"],[R[1163]]],[R[313]]]],[11,"cmp",R[1289],E,72,[[["self"],[R[1194]]],[R[313]]]],[11,"cmp",E,E,70,[[["self"],[R[1166]]],[R[313]]]],[11,"cmp",E,E,71,[[["msflags"],["self"]],[R[313]]]],[11,"cmp",R[1291],E,74,[[["self"],["timeval"]],[R[313]]]],[11,"cmp",R[1293],E,78,[[["self"],[R[1245]]],[R[313]]]],[11,"cmp",R[1294],E,81,[[["fsflags"],["self"]],[R[313]]]],[11,"eq","nix",E,0,[[["errno"],["self"]],["bool"]]],[11,"eq",R[1297],E,6,[[["self"],[R[1006]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1006]]],["bool"]]],[11,"eq",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,"eq",R[1298],E,10,[[["msflags"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["msflags"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,"eq",R[1280],E,13,[[["self"],[R[1044]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1044]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,12,[[["mqattr"],["self"]],["bool"]]],[11,"ne",E,E,12,[[["mqattr"],["self"]],["bool"]]],[11,"eq",R[1301],E,16,[[[R[1047]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[1047]],["self"]],["bool"]]],[11,"eq",R[1299],E,17,[[["self"],[R[1050]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1050]]],["bool"]]],[11,"eq",R[1281],E,21,[[[R[1077]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[1077]],["self"]],["bool"]]],[11,"eq",R[1282],E,22,[[["self"],[R[1080]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1080]]],["bool"]]],[11,"eq",R[1283],E,24,[[["self"],["saflag"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["saflag"]],["bool"]]],[11,"eq",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,"ne",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,"eq",E,E,23,[[[R[1302]],["self"]],["bool"]]],[11,"ne",E,E,23,[[[R[1302]],["self"]],["bool"]]],[11,"eq",R[1105],E,43,[[[R[1095]],["self"]],["bool"]]],[11,"eq",E,E,45,[[["inetaddr"],["self"]],["bool"]]],[11,"eq",E,E,36,[[[R[1101]],["self"]],["bool"]]],[11,"eq",E,E,35,[[["unixaddr"],["self"]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[57]]],["bool"]]],[11,"eq",E,E,38,[[["self"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,"eq",E,E,47,[[[R[1303]],["self"]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,"eq",E,E,86,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,86,[[["self"],["ucred"]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[2093]]],["bool"]]],[11,"eq",R[1285],E,57,[[["sflag"],["self"]],["bool"]]],[11,"ne",E,E,57,[[["sflag"],["self"]],["bool"]]],[11,"eq",E,E,58,[[["self"],["mode"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["mode"]],["bool"]]],[11,"eq",R[1286],E,63,[[[R[1158]],["self"]],["bool"]]],[11,"ne",E,E,63,[[[R[1158]],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,"eq",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,"eq",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,"ne",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,"eq",R[1288],E,69,[[["self"],[R[1163]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[1163]]],["bool"]]],[11,"eq",E,E,68,[[[R[1164]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[1164]],["self"]],["bool"]]],[11,"eq",R[1289],E,72,[[["self"],[R[1194]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[1194]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,"eq",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,"ne",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,"eq",R[1291],E,74,[[["self"],["timeval"]],["bool"]]],[11,"ne",E,E,74,[[["self"],["timeval"]],["bool"]]],[11,"eq",R[1293],E,78,[[["self"],[R[1245]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[1245]]],["bool"]]],[11,"eq",R[1294],E,81,[[["fsflags"],["self"]],["bool"]]],[11,"ne",E,E,81,[[["fsflags"],["self"]],["bool"]]],[11,"eq","nix",E,1,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["error"],["self"]],["bool"]]],[11,R[314],R[1297],E,6,[[["self"],[R[1006]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,6,[[["self"],[R[1006]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[1006]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[1006]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[1006]]],["bool"]]],[11,R[314],E,E,7,[[["oflag"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,"le",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,"gt",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,"ge",E,E,7,[[["oflag"],["self"]],["bool"]]],[11,R[314],E,E,8,[[["self"],["fdflag"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,8,[[["self"],["fdflag"]],["bool"]]],[11,R[314],E,E,9,[[[R[1022]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,"le",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,"gt",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,"ge",E,E,9,[[[R[1022]],["self"]],["bool"]]],[11,R[314],R[1298],E,10,[[["msflags"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,10,[[["msflags"],["self"]],["bool"]]],[11,"le",E,E,10,[[["msflags"],["self"]],["bool"]]],[11,"gt",E,E,10,[[["msflags"],["self"]],["bool"]]],[11,"ge",E,E,10,[[["msflags"],["self"]],["bool"]]],[11,R[314],E,E,11,[[["self"],[R[1043]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[1043]]],["bool"]]],[11,R[314],R[1280],E,13,[[["self"],[R[1044]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,13,[[["self"],[R[1044]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[1044]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[1044]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[1044]]],["bool"]]],[11,R[314],E,E,14,[[["self"],["fdflag"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,14,[[["self"],["fdflag"]],["bool"]]],[11,R[314],R[1301],E,16,[[[R[1047]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,16,[[[R[1047]],["self"]],["bool"]]],[11,"le",E,E,16,[[[R[1047]],["self"]],["bool"]]],[11,"gt",E,E,16,[[[R[1047]],["self"]],["bool"]]],[11,"ge",E,E,16,[[[R[1047]],["self"]],["bool"]]],[11,R[314],R[1299],E,17,[[["self"],[R[1050]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,17,[[["self"],[R[1050]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[1050]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[1050]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[1050]]],["bool"]]],[11,R[314],R[1281],E,21,[[[R[1077]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,21,[[[R[1077]],["self"]],["bool"]]],[11,"le",E,E,21,[[[R[1077]],["self"]],["bool"]]],[11,"gt",E,E,21,[[[R[1077]],["self"]],["bool"]]],[11,"ge",E,E,21,[[[R[1077]],["self"]],["bool"]]],[11,R[314],R[1282],E,22,[[["self"],[R[1080]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,22,[[["self"],[R[1080]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[1080]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[1080]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[1080]]],["bool"]]],[11,R[314],R[1283],E,24,[[["self"],["saflag"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,24,[[["self"],["saflag"]],["bool"]]],[11,"le",E,E,24,[[["self"],["saflag"]],["bool"]]],[11,"gt",E,E,24,[[["self"],["saflag"]],["bool"]]],[11,"ge",E,E,24,[[["self"],["saflag"]],["bool"]]],[11,R[314],E,E,25,[[["sigflag"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,"le",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,"gt",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,"ge",E,E,25,[[["sigflag"],["self"]],["bool"]]],[11,R[314],R[1105],E,51,[[["self"],[R[1102]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,"le",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,"gt",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,"ge",E,E,51,[[["self"],[R[1102]]],["bool"]]],[11,R[314],E,E,54,[[["self"],[R[1151]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,"le",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,"gt",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,"ge",E,E,54,[[["self"],[R[1151]]],["bool"]]],[11,R[314],R[1285],E,57,[[["sflag"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,57,[[["sflag"],["self"]],["bool"]]],[11,"le",E,E,57,[[["sflag"],["self"]],["bool"]]],[11,"gt",E,E,57,[[["sflag"],["self"]],["bool"]]],[11,"ge",E,E,57,[[["sflag"],["self"]],["bool"]]],[11,R[314],E,E,58,[[["self"],["mode"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,58,[[["self"],["mode"]],["bool"]]],[11,"le",E,E,58,[[["self"],["mode"]],["bool"]]],[11,"gt",E,E,58,[[["self"],["mode"]],["bool"]]],[11,"ge",E,E,58,[[["self"],["mode"]],["bool"]]],[11,R[314],R[1286],E,63,[[[R[1158]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,63,[[[R[1158]],["self"]],["bool"]]],[11,"le",E,E,63,[[[R[1158]],["self"]],["bool"]]],[11,"gt",E,E,63,[[[R[1158]],["self"]],["bool"]]],[11,"ge",E,E,63,[[[R[1158]],["self"]],["bool"]]],[11,R[314],E,E,64,[[["self"],[R[1159]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,"le",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,"gt",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,"ge",E,E,64,[[["self"],[R[1159]]],["bool"]]],[11,R[314],E,E,65,[[["self"],[R[1161]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,"le",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,"gt",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,"ge",E,E,65,[[["self"],[R[1161]]],["bool"]]],[11,R[314],E,E,66,[[[R[1162]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,"le",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,"gt",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,"ge",E,E,66,[[[R[1162]],["self"]],["bool"]]],[11,R[314],R[1288],E,69,[[["self"],[R[1163]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,69,[[["self"],[R[1163]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[1163]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[1163]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[1163]]],["bool"]]],[11,R[314],R[1289],E,72,[[["self"],[R[1194]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,72,[[["self"],[R[1194]]],["bool"]]],[11,"le",E,E,72,[[["self"],[R[1194]]],["bool"]]],[11,"gt",E,E,72,[[["self"],[R[1194]]],["bool"]]],[11,"ge",E,E,72,[[["self"],[R[1194]]],["bool"]]],[11,R[314],E,E,70,[[["self"],[R[1166]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,"le",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,"gt",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,"ge",E,E,70,[[["self"],[R[1166]]],["bool"]]],[11,R[314],E,E,71,[[["msflags"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,"le",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,"gt",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,"ge",E,E,71,[[["msflags"],["self"]],["bool"]]],[11,R[314],R[1291],E,74,[[["self"],["timeval"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,74,[[["self"],["timeval"]],["bool"]]],[11,"le",E,E,74,[[["self"],["timeval"]],["bool"]]],[11,"gt",E,E,74,[[["self"],["timeval"]],["bool"]]],[11,"ge",E,E,74,[[["self"],["timeval"]],["bool"]]],[11,R[314],R[1293],E,78,[[["self"],[R[1245]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,78,[[["self"],[R[1245]]],["bool"]]],[11,"le",E,E,78,[[["self"],[R[1245]]],["bool"]]],[11,"gt",E,E,78,[[["self"],[R[1245]]],["bool"]]],[11,"ge",E,E,78,[[["self"],[R[1245]]],["bool"]]],[11,R[314],R[1294],E,81,[[["fsflags"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,81,[[["fsflags"],["self"]],["bool"]]],[11,"le",E,E,81,[[["fsflags"],["self"]],["bool"]]],[11,"gt",E,E,81,[[["fsflags"],["self"]],["bool"]]],[11,"ge",E,E,81,[[["fsflags"],["self"]],["bool"]]],[11,"fmt","nix",E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1105],E,45,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,46,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,36,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,37,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,35,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,44,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,38,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1291],E,74,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","nix",E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1297],E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,7,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,8,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,9,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1298],E,10,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,11,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1280],E,13,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,14,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1301],E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1299],E,17,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1281],E,21,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1282],E,22,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1283],E,24,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,25,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1105],E,43,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,51,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,39,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1284],E,87,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,88,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,89,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,90,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,91,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,92,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,93,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,94,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,95,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,96,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,97,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,98,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,99,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,100,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,101,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,102,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,103,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,104,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,105,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,106,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,107,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,108,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,109,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,110,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1105],E,47,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,54,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,42,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,86,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,50,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1285],E,57,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,58,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1286],E,63,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,64,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,65,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,66,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1288],E,69,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,68,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1289],E,72,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,70,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,71,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",R[1291],E,74,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1293],E,78,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,77,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1247],E,79,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1294],E,81,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,80,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","nix",E,1,[[["self"],[R[176]]],[R[48]]]],[11,"div",R[1291],E,74,[[["i32"]],["timeval"]]],[11,"sub",R[1297],R[1304],6,[[[R[1006]]],[R[1006]]]],[11,"sub",E,R[1304],7,[[["oflag"]],["oflag"]]],[11,"sub",E,R[1304],8,[[["fdflag"]],["fdflag"]]],[11,"sub",E,R[1304],9,[[[R[1022]]],[R[1022]]]],[11,"sub",R[1298],R[1304],10,[[["msflags"]],["msflags"]]],[11,"sub",E,R[1304],11,[[[R[1043]]],[R[1043]]]],[11,"sub",R[1280],R[1304],13,[[[R[1044]]],[R[1044]]]],[11,"sub",E,R[1304],14,[[["fdflag"]],["fdflag"]]],[11,"sub",R[1301],R[1304],16,[[[R[1047]]],[R[1047]]]],[11,"sub",R[1299],R[1304],17,[[[R[1050]]],[R[1050]]]],[11,"sub",R[1281],R[1304],21,[[[R[1077]]],[R[1077]]]],[11,"sub",R[1282],R[1304],22,[[[R[1080]]],[R[1080]]]],[11,"sub",R[1283],R[1304],24,[[["saflag"]],["saflag"]]],[11,"sub",E,R[1304],25,[[["sigflag"]],["sigflag"]]],[11,"sub",R[1105],R[1304],51,[[[R[1102]]],[R[1102]]]],[11,"sub",E,R[1304],54,[[[R[1151]]],[R[1151]]]],[11,"sub",R[1285],R[1304],57,[[["sflag"]],["sflag"]]],[11,"sub",E,R[1304],58,[[["mode"]],["mode"]]],[11,"sub",R[1286],R[1304],63,[[[R[1158]]],[R[1158]]]],[11,"sub",E,R[1304],64,[[[R[1159]]],[R[1159]]]],[11,"sub",E,R[1304],65,[[[R[1161]]],[R[1161]]]],[11,"sub",E,R[1304],66,[[[R[1162]]],[R[1162]]]],[11,"sub",R[1288],R[1304],69,[[[R[1163]]],[R[1163]]]],[11,"sub",R[1289],R[1304],72,[[[R[1194]]],[R[1194]]]],[11,"sub",E,R[1304],70,[[[R[1166]]],[R[1166]]]],[11,"sub",E,R[1304],71,[[["msflags"]],["msflags"]]],[11,"sub",R[1291],E,74,[[["timeval"]],["timeval"]]],[11,"sub",R[1293],R[1304],78,[[[R[1245]]],[R[1245]]]],[11,"sub",R[1294],R[1304],81,[[["fsflags"]],["fsflags"]]],[11,"add",R[1291],E,74,[[["timeval"]],["timeval"]]],[11,"mul",E,E,74,[[["i32"]],["timeval"]]],[11,"neg",E,E,74,[[],["timeval"]]],[11,"not",R[1297],R[1305],6,[[],[R[1006]]]],[11,"not",E,R[1305],7,[[],["oflag"]]],[11,"not",E,R[1305],8,[[],["fdflag"]]],[11,"not",E,R[1305],9,[[],[R[1022]]]],[11,"not",R[1298],R[1305],10,[[],["msflags"]]],[11,"not",E,R[1305],11,[[],[R[1043]]]],[11,"not",R[1280],R[1305],13,[[],[R[1044]]]],[11,"not",E,R[1305],14,[[],["fdflag"]]],[11,"not",R[1301],R[1305],16,[[],[R[1047]]]],[11,"not",R[1299],R[1305],17,[[],[R[1050]]]],[11,"not",R[1281],R[1305],21,[[],[R[1077]]]],[11,"not",R[1282],R[1305],22,[[],[R[1080]]]],[11,"not",R[1283],R[1305],24,[[],["saflag"]]],[11,"not",E,R[1305],25,[[],["sigflag"]]],[11,"not",R[1105],R[1305],51,[[],[R[1102]]]],[11,"not",E,R[1305],54,[[],[R[1151]]]],[11,"not",R[1285],R[1305],57,[[],["sflag"]]],[11,"not",E,R[1305],58,[[],["mode"]]],[11,"not",R[1286],R[1305],63,[[],[R[1158]]]],[11,"not",E,R[1305],64,[[],[R[1159]]]],[11,"not",E,R[1305],65,[[],[R[1161]]]],[11,"not",E,R[1305],66,[[],[R[1162]]]],[11,"not",R[1288],R[1305],69,[[],[R[1163]]]],[11,"not",R[1289],R[1305],72,[[],[R[1194]]]],[11,"not",E,R[1305],70,[[],[R[1166]]]],[11,"not",E,R[1305],71,[[],["msflags"]]],[11,"not",R[1293],R[1305],78,[[],[R[1245]]]],[11,"not",R[1294],R[1305],81,[[],["fsflags"]]],[11,"bitand",R[1297],R[1306],6,[[[R[1006]]],[R[1006]]]],[11,"bitand",E,R[1306],7,[[["oflag"]],["oflag"]]],[11,"bitand",E,R[1306],8,[[["fdflag"]],["fdflag"]]],[11,"bitand",E,R[1306],9,[[[R[1022]]],[R[1022]]]],[11,"bitand",R[1298],R[1306],10,[[["msflags"]],["msflags"]]],[11,"bitand",E,R[1306],11,[[[R[1043]]],[R[1043]]]],[11,"bitand",R[1280],R[1306],13,[[[R[1044]]],[R[1044]]]],[11,"bitand",E,R[1306],14,[[["fdflag"]],["fdflag"]]],[11,"bitand",R[1301],R[1306],16,[[[R[1047]]],[R[1047]]]],[11,"bitand",R[1299],R[1306],17,[[[R[1050]]],[R[1050]]]],[11,"bitand",R[1281],R[1306],21,[[[R[1077]]],[R[1077]]]],[11,"bitand",R[1282],R[1306],22,[[[R[1080]]],[R[1080]]]],[11,"bitand",R[1283],R[1306],24,[[["saflag"]],["saflag"]]],[11,"bitand",E,R[1306],25,[[["sigflag"]],["sigflag"]]],[11,"bitand",R[1105],R[1306],51,[[[R[1102]]],[R[1102]]]],[11,"bitand",E,R[1306],54,[[[R[1151]]],[R[1151]]]],[11,"bitand",R[1285],R[1306],57,[[["sflag"]],["sflag"]]],[11,"bitand",E,R[1306],58,[[["mode"]],["mode"]]],[11,"bitand",R[1286],R[1306],63,[[[R[1158]]],[R[1158]]]],[11,"bitand",E,R[1306],64,[[[R[1159]]],[R[1159]]]],[11,"bitand",E,R[1306],65,[[[R[1161]]],[R[1161]]]],[11,"bitand",E,R[1306],66,[[[R[1162]]],[R[1162]]]],[11,"bitand",R[1288],R[1306],69,[[[R[1163]]],[R[1163]]]],[11,"bitand",R[1289],R[1306],72,[[[R[1194]]],[R[1194]]]],[11,"bitand",E,R[1306],70,[[[R[1166]]],[R[1166]]]],[11,"bitand",E,R[1306],71,[[["msflags"]],["msflags"]]],[11,"bitand",R[1293],R[1306],78,[[[R[1245]]],[R[1245]]]],[11,"bitand",R[1294],R[1306],81,[[["fsflags"]],["fsflags"]]],[11,"bitor",R[1297],R[1307],6,[[[R[1006]]],[R[1006]]]],[11,"bitor",E,R[1307],7,[[["oflag"]],["oflag"]]],[11,"bitor",E,R[1307],8,[[["fdflag"]],["fdflag"]]],[11,"bitor",E,R[1307],9,[[[R[1022]]],[R[1022]]]],[11,"bitor",R[1298],R[1307],10,[[["msflags"]],["msflags"]]],[11,"bitor",E,R[1307],11,[[[R[1043]]],[R[1043]]]],[11,"bitor",R[1280],R[1307],13,[[[R[1044]]],[R[1044]]]],[11,"bitor",E,R[1307],14,[[["fdflag"]],["fdflag"]]],[11,"bitor",R[1301],R[1307],16,[[[R[1047]]],[R[1047]]]],[11,"bitor",R[1299],R[1307],17,[[[R[1050]]],[R[1050]]]],[11,"bitor",R[1281],R[1307],21,[[[R[1077]]],[R[1077]]]],[11,"bitor",R[1282],R[1307],22,[[[R[1080]]],[R[1080]]]],[11,"bitor",R[1283],R[1307],24,[[["saflag"]],["saflag"]]],[11,"bitor",E,R[1307],25,[[["sigflag"]],["sigflag"]]],[11,"bitor",R[1105],R[1307],51,[[[R[1102]]],[R[1102]]]],[11,"bitor",E,R[1307],54,[[[R[1151]]],[R[1151]]]],[11,"bitor",R[1285],R[1307],57,[[["sflag"]],["sflag"]]],[11,"bitor",E,R[1307],58,[[["mode"]],["mode"]]],[11,"bitor",R[1286],R[1307],63,[[[R[1158]]],[R[1158]]]],[11,"bitor",E,R[1307],64,[[[R[1159]]],[R[1159]]]],[11,"bitor",E,R[1307],65,[[[R[1161]]],[R[1161]]]],[11,"bitor",E,R[1307],66,[[[R[1162]]],[R[1162]]]],[11,"bitor",R[1288],R[1307],69,[[[R[1163]]],[R[1163]]]],[11,"bitor",R[1289],R[1307],72,[[[R[1194]]],[R[1194]]]],[11,"bitor",E,R[1307],70,[[[R[1166]]],[R[1166]]]],[11,"bitor",E,R[1307],71,[[["msflags"]],["msflags"]]],[11,"bitor",R[1293],R[1307],78,[[[R[1245]]],[R[1245]]]],[11,"bitor",R[1294],R[1307],81,[[["fsflags"]],["fsflags"]]],[11,"bitxor",R[1297],R[1308],6,[[[R[1006]]],[R[1006]]]],[11,"bitxor",E,R[1308],7,[[["oflag"]],["oflag"]]],[11,"bitxor",E,R[1308],8,[[["fdflag"]],["fdflag"]]],[11,"bitxor",E,R[1308],9,[[[R[1022]]],[R[1022]]]],[11,"bitxor",R[1298],R[1308],10,[[["msflags"]],["msflags"]]],[11,"bitxor",E,R[1308],11,[[[R[1043]]],[R[1043]]]],[11,"bitxor",R[1280],R[1308],13,[[[R[1044]]],[R[1044]]]],[11,"bitxor",E,R[1308],14,[[["fdflag"]],["fdflag"]]],[11,"bitxor",R[1301],R[1308],16,[[[R[1047]]],[R[1047]]]],[11,"bitxor",R[1299],R[1308],17,[[[R[1050]]],[R[1050]]]],[11,"bitxor",R[1281],R[1308],21,[[[R[1077]]],[R[1077]]]],[11,"bitxor",R[1282],R[1308],22,[[[R[1080]]],[R[1080]]]],[11,"bitxor",R[1283],R[1308],24,[[["saflag"]],["saflag"]]],[11,"bitxor",E,R[1308],25,[[["sigflag"]],["sigflag"]]],[11,"bitxor",R[1105],R[1308],51,[[[R[1102]]],[R[1102]]]],[11,"bitxor",E,R[1308],54,[[[R[1151]]],[R[1151]]]],[11,"bitxor",R[1285],R[1308],57,[[["sflag"]],["sflag"]]],[11,"bitxor",E,R[1308],58,[[["mode"]],["mode"]]],[11,"bitxor",R[1286],R[1308],63,[[[R[1158]]],[R[1158]]]],[11,"bitxor",E,R[1308],64,[[[R[1159]]],[R[1159]]]],[11,"bitxor",E,R[1308],65,[[[R[1161]]],[R[1161]]]],[11,"bitxor",E,R[1308],66,[[[R[1162]]],[R[1162]]]],[11,"bitxor",R[1288],R[1308],69,[[[R[1163]]],[R[1163]]]],[11,"bitxor",R[1289],R[1308],72,[[[R[1194]]],[R[1194]]]],[11,"bitxor",E,R[1308],70,[[[R[1166]]],[R[1166]]]],[11,"bitxor",E,R[1308],71,[[["msflags"]],["msflags"]]],[11,"bitxor",R[1293],R[1308],78,[[[R[1245]]],[R[1245]]]],[11,"bitxor",R[1294],R[1308],81,[[["fsflags"]],["fsflags"]]],[11,"hash",R[1297],E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",R[1298],E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",R[1280],E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",R[1301],E,16,[[["self"],["__h"]]]],[11,"hash",R[1299],E,17,[[["self"],["__h"]]]],[11,"hash",R[1281],E,21,[[["self"],["__h"]]]],[11,"hash",R[1282],E,22,[[["self"],["__h"]]]],[11,"hash",R[1283],E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",R[1105],E,43,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["h"]]]],[11,"hash",E,E,36,[[["self"],["h"]]]],[11,"hash",E,E,35,[[["self"],["h"]]]],[11,"hash",E,E,44,[[["self"],["h"]]]],[11,"hash",E,E,38,[[["self"],["h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",R[1285],E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",R[1286],E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",R[1288],E,69,[[["self"],["__h"]]]],[11,"hash",R[1289],E,72,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",R[1293],E,78,[[["self"],["__h"]]]],[11,"hash",R[1294],E,81,[[["self"],["__h"]]]],[11,R[784],R[1297],E,6,[[[R[400]]],[R[1006]]]],[11,R[784],E,E,7,[[[R[400]]],["oflag"]]],[11,R[784],E,E,8,[[[R[400]]],["fdflag"]]],[11,R[784],E,E,9,[[[R[400]]],[R[1022]]]],[11,R[784],R[1298],E,10,[[[R[400]]],["msflags"]]],[11,R[784],E,E,11,[[[R[400]]],[R[1043]]]],[11,R[784],R[1280],E,13,[[[R[400]]],[R[1044]]]],[11,R[784],E,E,14,[[[R[400]]],["fdflag"]]],[11,R[784],R[1301],E,16,[[[R[400]]],[R[1047]]]],[11,R[784],R[1299],E,17,[[[R[400]]],[R[1050]]]],[11,R[784],R[1281],E,21,[[[R[400]]],[R[1077]]]],[11,R[784],R[1282],E,22,[[[R[400]]],[R[1080]]]],[11,R[784],R[1283],E,24,[[[R[400]]],["saflag"]]],[11,R[784],E,E,25,[[[R[400]]],["sigflag"]]],[11,R[784],R[1105],E,51,[[[R[400]]],[R[1102]]]],[11,R[784],E,E,54,[[[R[400]]],[R[1151]]]],[11,R[784],R[1285],E,57,[[[R[400]]],["sflag"]]],[11,R[784],E,E,58,[[[R[400]]],["mode"]]],[11,R[784],R[1286],E,63,[[[R[400]]],[R[1158]]]],[11,R[784],E,E,64,[[[R[400]]],[R[1159]]]],[11,R[784],E,E,65,[[[R[400]]],[R[1161]]]],[11,R[784],E,E,66,[[[R[400]]],[R[1162]]]],[11,R[784],R[1288],E,69,[[[R[400]]],[R[1163]]]],[11,R[784],R[1289],E,72,[[[R[400]]],[R[1194]]]],[11,R[784],E,E,70,[[[R[400]]],[R[1166]]]],[11,R[784],E,E,71,[[[R[400]]],["msflags"]]],[11,R[784],R[1293],E,78,[[[R[400]]],[R[1245]]]],[11,R[784],R[1294],E,81,[[[R[400]]],["fsflags"]]],[11,R[256],"nix",E,0,[[["self"]],["str"]]],[11,R[256],E,E,1,[[["self"]],["str"]]]],"p":[[4,"Errno"],[4,"Error"],[8,R[1309]],[3,"flock"],[4,"FcntlArg"],[4,"FlockArg"],[3,R[1310]],[3,"OFlag"],[3,"FdFlag"],[3,"SealFlag"],[3,"MsFlags"],[3,"MntFlags"],[3,"MqAttr"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"PollFd"],[3,"EventFlags"],[3,"CloneFlags"],[3,"CpuSet"],[3,"EpollEvent"],[4,"EpollOp"],[3,R[1311]],[3,R[1312]],[4,"SigHandler"],[3,"SaFlag"],[3,"SigFlag"],[3,"SigSet"],[3,"SigAction"],[3,"in_addr"],[3,R[53]],[3,R[57]],[3,R[58]],[3,R[59]],[3,R[60]],[3,R[61]],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,R[1313]],[3,"ip_mreq"],[3,R[54]],[3,"RecvMsg"],[3,"linger"],[4,R[1314]],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,R[1315]],[4,"SockLevel"],[4,"Shutdown"],[3,"MsgFlags"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"CmsgSpace"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[3,"Termios"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[3,"InputFlags"],[3,R[1316]],[3,R[1317]],[3,"LocalFlags"],[3,"UtsName"],[4,"WaitStatus"],[3,R[1318]],[3,"MapFlags"],[3,"MsFlags"],[3,"ProtFlags"],[3,"IoVec"],[3,"TimeVal"],[3,"FdSet"],[3,"QuotaCmd"],[3,"Dqblk"],[3,R[1319]],[3,"Statfs"],[3,"Statvfs"],[3,"FsFlags"],[4,"Fork"],[8,"NixPath"],[4,"c_void"],[3,R[1320]],[3,"ucred"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,R[1321]],[3,R[1322]],[3,R[1323]],[3,R[1324]],[3,R[1104]],[3,R[1325]],[3,R[1326]],[3,R[1327]],[3,"Broadcast"],[3,"OobInline"],[3,R[1328]],[3,"KeepAlive"],[3,R[1329]],[3,R[1330]],[3,"RcvBuf"],[3,"SndBuf"],[3,R[1331]],[3,R[1332]],[3,"SockType"],[3,"AcceptConn"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num",R[1800],N,N],[3,"BigUint",E,R[1798],N,N],[6,"Rational",E,R[1884],N,N],[6,R[1885],E,R[1886],N,N],[3,"Complex",E,R[1801],N,N],[12,"re",E,R[1802],0,N],[12,"im",E,R[1803],0,N],[8,"Integer",E,E,N,N],[10,R[773],E,R[1804],1,[[["self"]],["self"]]],[10,R[774],E,R[1805],1,[[["self"]],["self"]]],[10,"gcd",E,R[1806],1,[[["self"]],["self"]]],[10,"lcm",E,R[1807],1,[[["self"]],["self"]]],[10,"divides",E,R[1474],1,[[["self"]],["bool"]]],[10,R[1475],E,R[1808],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1809],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1810],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1811],1,[[["self"]]]],[11,R[775],E,R[1812],1,[[["self"]]]],[5,"range",E,R[1813],N,[[["a"]],["range"]]],[5,R[1814],E,R[1815],N,[[["a"]],[R[1434]]]],[5,R[1972],E,R[1816],N,[[["a"]],[R[1973]]]],[5,R[1817],E,R[1818],N,[[["a"]],[R[1435]]]],[8,"Num",E,R[1880],N,N],[16,R[1881],E,E,2,N],[10,R[814],E,R[1882],2,[[["str"],["u32"]],[R[48]]]],[8,"Zero",E,R[1819],N,N],[10,"zero",E,R[1820],3,[[],["self"]]],[10,"is_zero",E,R[1821],3,[[["self"]],["bool"]]],[8,"One",E,R[1822],N,N],[10,"one",E,R[1823],4,[[],["self"]]],[8,"Signed",E,R[1827],N,N],[10,"abs",E,R[116],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[117],5,[[["self"]],["self"]]],[10,"signum",E,R[118],5,[[["self"]],["self"]]],[10,R[1483],E,R[1828],5,[[["self"]],["bool"]]],[10,R[1484],E,R[1829],5,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1830],N,N],[8,"Bounded",E,R[1845],N,N],[10,R[121],E,R[1846],6,[[],["self"]]],[10,R[122],E,R[1847],6,[[],["self"]]],[5,"one",E,R[1825],N,[[],[T]]],[5,"zero",E,R[1824],N,[[],[T]]],[5,"abs",E,R[116],N,[[[T]],[T]]],[5,"abs_sub",E,R[117],N,[[[T]],[T]]],[5,"signum",E,R[118],N,[[[T]],[T]]],[8,R[179],E,R[1831],N,N],[10,R[1832],E,R[1833],7,[[],["self"]]],[10,R[1834],E,R[1835],7,[[],["self"]]],[8,R[180],E,R[1837],N,N],[10,R[751],E,R[1838],8,[[["self"]],["option"]]],[8,R[181],E,R[1839],N,N],[10,R[752],E,R[1840],9,[[["self"]],["option"]]],[8,R[182],E,R[1841],N,N],[10,R[1480],E,R[1842],10,[[["self"]],["option"]]],[8,R[183],E,R[1843],N,N],[10,R[1481],E,R[1844],11,[[["self"]],["option"]]],[8,"PrimInt",E,E,N,N],[10,R[2032],E,R[1863],12,[[],["u32"]]],[10,R[1864],E,R[1865],12,[[],["u32"]]],[10,R[1866],E,R[1867],12,[[],["u32"]]],[10,R[1868],E,R[1869],12,[[],["u32"]]],[10,R[1870],E,R[173],12,[[["u32"]],["self"]]],[10,R[1871],E,R[174],12,[[["u32"]],["self"]]],[10,R[2033],E,R[173],12,[[["u32"]],["self"]]],[10,R[2034],E,R[174],12,[[["u32"]],["self"]]],[10,R[1872],E,R[173],12,[[["u32"]],["self"]]],[10,R[1873],E,R[174],12,[[["u32"]],["self"]]],[10,R[2035],E,R[1874],12,[[],["self"]]],[10,"from_be",E,R[1875],12,[[],["self"]]],[10,"from_le",E,R[1876],12,[[],["self"]]],[10,"to_be",E,R[1877],12,[[],["self"]]],[10,"to_le",E,R[1878],12,[[],["self"]]],[10,"pow",E,R[1879],12,[[["u32"]],["self"]]],[8,"Float",E,E,N,N],[10,"nan",E,R[1848],13,[[],["self"]]],[10,"infinity",E,R[1849],13,[[],["self"]]],[10,R[1850],E,R[1851],13,[[],["self"]]],[10,"neg_zero",E,R[1852],13,[[],["self"]]],[10,R[121],E,R[123],13,[[],["self"]]],[10,R[124],E,R[125],13,[[],["self"]]],[11,"epsilon",E,R[126],13,[[],["self"]]],[10,R[122],E,R[127],13,[[],["self"]]],[10,"is_nan",E,R[1853],13,[[],["bool"]]],[10,R[811],E,R[1854],13,[[],["bool"]]],[10,R[812],E,R[1855],13,[[],["bool"]]],[10,R[813],E,R[1856],13,[[],["bool"]]],[10,"classify",E,R[1857],13,[[],[R[2010]]]],[10,"floor",E,R[128],13,[[],["self"]]],[10,"ceil",E,R[129],13,[[],["self"]]],[10,"round",E,R[130],13,[[],["self"]]],[10,"trunc",E,R[131],13,[[],["self"]]],[10,"fract",E,R[132],13,[[],["self"]]],[10,"abs",E,R[133],13,[[],["self"]]],[10,"signum",E,R[134],13,[[],["self"]]],[10,R[135],E,R[136],13,[[],["bool"]]],[10,R[137],E,R[138],13,[[],["bool"]]],[10,"mul_add",E,R[139],13,[[],["self"]]],[10,"recip",E,R[140],13,[[],["self"]]],[10,"powi",E,R[141],13,[[["i32"]],["self"]]],[10,"powf",E,R[1858],13,[[],["self"]]],[10,"sqrt",E,R[142],13,[[],["self"]]],[10,"exp",E,R[143],13,[[],["self"]]],[10,"exp2",E,R[144],13,[[],["self"]]],[10,"ln",E,R[145],13,[[],["self"]]],[10,"log",E,R[146],13,[[],["self"]]],[10,"log2",E,R[147],13,[[],["self"]]],[10,"log10",E,R[148],13,[[],["self"]]],[11,R[149],E,R[150],13,[[],["self"]]],[11,R[151],E,R[152],13,[[],["self"]]],[10,"max",E,R[153],13,[[],["self"]]],[10,"min",E,R[154],13,[[],["self"]]],[10,"abs_sub",E,R[117],13,[[],["self"]]],[10,"cbrt",E,R[155],13,[[],["self"]]],[10,"hypot",E,R[156],13,[[],["self"]]],[10,"sin",E,R[157],13,[[],["self"]]],[10,"cos",E,R[158],13,[[],["self"]]],[10,"tan",E,R[159],13,[[],["self"]]],[10,"asin",E,R[160],13,[[],["self"]]],[10,"acos",E,R[161],13,[[],["self"]]],[10,"atan",E,R[162],13,[[],["self"]]],[10,"atan2",E,R[163],13,[[],["self"]]],[10,"sin_cos",E,R[164],13,[[]]],[10,"exp_m1",E,R[165],13,[[],["self"]]],[10,"ln_1p",E,R[166],13,[[],["self"]]],[10,"sinh",E,R[167],13,[[],["self"]]],[10,"cosh",E,R[168],13,[[],["self"]]],[10,"tanh",E,R[169],13,[[],["self"]]],[10,"asinh",E,R[170],13,[[],["self"]]],[10,"acosh",E,R[171],13,[[],["self"]]],[10,"atanh",E,R[172],13,[[],["self"]]],[10,R[1859],E,R[1860],13,[[]]],[8,R[190],E,R[1779],N,N],[11,"to_isize",E,R[1780],14,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8",E,R[1781],14,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16",E,R[1782],14,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32",E,R[1783],14,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64",E,R[1784],14,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_usize",E,R[1785],14,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8",E,R[1786],14,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,R[1787],14,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32",E,R[1788],14,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64",E,R[1789],14,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,R[1790],14,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,R[1791],14,[[["self"]],[["option",["f64"]],["f64"]]]],[8,R[191],E,R[785],N,N],[11,R[786],E,R[787],15,[[["isize"]],["option"]]],[11,"from_i8",E,R[788],15,[[["i8"]],["option"]]],[11,"from_i16",E,R[789],15,[[["i16"]],["option"]]],[11,R[2031],E,R[790],15,[[["i32"]],["option"]]],[10,R[1587],E,R[791],15,[[["i64"]],["option"]]],[11,R[689],E,R[792],15,[[["usize"]],["option"]]],[11,"from_u8",E,R[793],15,[[["u8"]],["option"]]],[11,"from_u16",E,R[794],15,[[["u16"]],["option"]]],[11,R[795],E,R[796],15,[[["u32"]],["option"]]],[10,R[1588],E,R[797],15,[[["u64"]],["option"]]],[11,R[1590],E,R[798],15,[[["f32"]],["option"]]],[11,R[1589],E,R[799],15,[[["f64"]],["option"]]],[8,"NumCast",E,R[1792],N,N],[10,"from",E,R[1793],16,[[[T]],["option"]]],[0,"cast",E,E,N,N],[8,R[190],"num::cast",R[1779],N,N],[11,"to_isize",E,R[1780],14,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8",E,R[1781],14,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16",E,R[1782],14,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32",E,R[1783],14,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64",E,R[1784],14,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_usize",E,R[1785],14,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8",E,R[1786],14,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,R[1787],14,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32",E,R[1788],14,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64",E,R[1789],14,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,R[1790],14,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,R[1791],14,[[["self"]],[["option",["f64"]],["f64"]]]],[8,R[191],E,R[785],N,N],[11,R[786],E,R[787],15,[[["isize"]],["option"]]],[11,"from_i8",E,R[788],15,[[["i8"]],["option"]]],[11,"from_i16",E,R[789],15,[[["i16"]],["option"]]],[11,R[2031],E,R[790],15,[[["i32"]],["option"]]],[10,R[1587],E,R[791],15,[[["i64"]],["option"]]],[11,R[689],E,R[792],15,[[["usize"]],["option"]]],[11,"from_u8",E,R[793],15,[[["u8"]],["option"]]],[11,"from_u16",E,R[794],15,[[["u16"]],["option"]]],[11,R[795],E,R[796],15,[[["u32"]],["option"]]],[10,R[1588],E,R[797],15,[[["u64"]],["option"]]],[11,R[1590],E,R[798],15,[[["f32"]],["option"]]],[11,R[1589],E,R[799],15,[[["f64"]],["option"]]],[5,"cast",E,R[1794],N,[[[T]],["option"]]],[8,"NumCast",E,R[1792],N,N],[10,"from",E,R[1793],16,[[[T]],["option"]]],[8,R[192],E,R[1861],N,N],[10,"as_",E,R[1862],17,[[],[T]]],[5,"cast","num",R[1794],N,[[[T]],["option"]]],[0,"pow",E,E,N,N],[5,"pow","num::pow",R[1795],N,[[[T],["usize"]],[T]]],[5,R[1796],E,R[1797],N,[[[T],["usize"]],["option"]]],[5,"pow","num",R[1795],N,[[[T],["usize"]],[T]]],[5,R[1796],E,R[1797],N,[[[T],["usize"]],["option"]]],[5,"clamp",E,R[1883],N,[[[T]],[T]]],[0,"bigint",E,E,N,N],[4,R[1482],R[1799],E,N,N],[13,"ParseInt",E,E,18,N],[13,"Other",E,E,18,N],[3,"BigUint",E,R[1798],N,N],[8,R[1923],E,R[1906],N,N],[10,R[1466],E,R[1907],19,[[["self"]],[["biguint"],["option",["biguint"]]]]],[0,"big_digit",E,E,N,N],[6,"BigDigit","num::bigint::big_digit",R[1462],N,N],[6,R[1463],E,R[1464],N,N],[17,R[1465],E,E,N,N],[17,"BITS",E,E,N,N],[17,"BASE",E,E,N,N],[5,R[1902],E,R[1903],N,[[["u64"]]]],[5,R[1904],E,R[1905],N,[[["u32"]],["u64"]]],[4,"Sign",R[1799],R[1890],N,N],[13,"Minus",E,E,20,N],[13,"NoSign",E,E,20,N],[13,"Plus",E,E,20,N],[3,"BigInt",E,R[1800],N,N],[8,"ToBigInt",E,R[1908],N,N],[10,R[1909],E,R[1910],21,[[["self"]],[["bigint"],["option",["bigint"]]]]],[8,R[1911],E,E,N,N],[10,R[1912],E,R[1913],22,[[["self"],["usize"]],["biguint"]]],[10,"gen_bigint",E,R[1914],22,[[["self"],["usize"]],["bigint"]]],[10,R[1915],E,R[1916],22,[[["self"],["biguint"]],["biguint"]]],[10,R[1917],E,R[1918],22,[[["self"],["biguint"]],["biguint"]]],[10,R[1919],E,R[1920],22,[[["self"],["bigint"]],["bigint"]]],[0,R[802],"num",E,N,N],[3,"Complex",R[1887],R[1801],N,N],[12,"re",E,R[1802],0,N],[12,"im",E,R[1803],0,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[3,R[810],E,E,N,N],[0,R[772],"num",E,N,N],[8,"Integer",R[1888],E,N,N],[10,R[773],E,R[1804],1,[[["self"]],["self"]]],[10,R[774],E,R[1805],1,[[["self"]],["self"]]],[10,"gcd",E,R[1806],1,[[["self"]],["self"]]],[10,"lcm",E,R[1807],1,[[["self"]],["self"]]],[10,"divides",E,R[1474],1,[[["self"]],["bool"]]],[10,R[1475],E,R[1808],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1809],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1810],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1811],1,[[["self"]]]],[11,R[775],E,R[1812],1,[[["self"]]]],[5,"div_rem",E,R[1959],N,[[[T]]]],[5,R[773],E,R[1960],N,[[[T]],[T]]],[5,R[774],E,R[1961],N,[[[T]],[T]]],[5,R[775],E,R[1962],N,[[[T]]]],[5,"gcd",E,R[1472],N,[[[T]],[T]]],[5,"lcm",E,R[1473],N,[[[T]],[T]]],[3,R[776],E,R[1958],N,N],[5,"binomial",E,R[1963],N,[[[T]],[T]]],[5,R[1964],E,R[1965],N,[[],[T]]],[0,"iter","num",E,N,N],[3,"Range","num::iter",R[1968],N,N],[5,"range",E,R[1813],N,[[["a"]],["range"]]],[3,R[1436],E,R[1969],N,N],[5,R[1814],E,R[1815],N,[[["a"]],[R[1434]]]],[3,R[1974],E,R[1970],N,N],[5,R[1972],E,R[1816],N,[[["a"]],[R[1973]]]],[3,R[1437],E,R[1971],N,N],[5,R[1817],E,R[1818],N,[[["a"]],[R[1435]]]],[0,"traits","num",E,N,N],[0,"identities",R[1826],E,N,N],[8,"Zero","num::traits::identities",R[1819],N,N],[10,"zero",E,R[1820],3,[[],["self"]]],[10,"is_zero",E,R[1821],3,[[["self"]],["bool"]]],[8,"One",E,R[1822],N,N],[10,"one",E,R[1823],4,[[],["self"]]],[5,"zero",E,R[1824],N,[[],[T]]],[5,"one",E,R[1825],N,[[],[T]]],[0,"sign",R[1826],E,N,N],[8,"Signed","num::traits::sign",R[1827],N,N],[10,"abs",E,R[116],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[117],5,[[["self"]],["self"]]],[10,"signum",E,R[118],5,[[["self"]],["self"]]],[10,R[1483],E,R[1828],5,[[["self"]],["bool"]]],[10,R[1484],E,R[1829],5,[[["self"]],["bool"]]],[5,"abs",E,R[116],N,[[[T]],[T]]],[5,"abs_sub",E,R[117],N,[[[T]],[T]]],[5,"signum",E,R[118],N,[[[T]],[T]]],[8,"Unsigned",E,R[1830],N,N],[0,"ops",R[1826],E,N,N],[0,"saturating",R[1836],E,N,N],[8,R[179],"num::traits::ops::saturating",R[1831],N,N],[10,R[1832],E,R[1833],7,[[],["self"]]],[10,R[1834],E,R[1835],7,[[],["self"]]],[0,"checked",R[1836],E,N,N],[8,R[180],"num::traits::ops::checked",R[1837],N,N],[10,R[751],E,R[1838],8,[[["self"]],["option"]]],[8,R[181],E,R[1839],N,N],[10,R[752],E,R[1840],9,[[["self"]],["option"]]],[8,R[182],E,R[1841],N,N],[10,R[1480],E,R[1842],10,[[["self"]],["option"]]],[8,R[183],E,R[1843],N,N],[10,R[1481],E,R[1844],11,[[["self"]],["option"]]],[8,R[184],E,R[1997],N,N],[10,R[1998],E,R[120],23,[[["u32"],["self"]],["option"]]],[8,R[185],E,R[1999],N,N],[10,R[2000],E,R[120],24,[[["u32"],["self"]],["option"]]],[0,"wrapping",R[1836],E,N,N],[8,R[186],"num::traits::ops::wrapping",R[2001],N,N],[10,R[2002],E,R[2003],25,[[["self"]],["self"]]],[8,R[187],E,R[2004],N,N],[10,R[2005],E,R[2006],26,[[["self"]],["self"]]],[8,R[188],E,R[2007],N,N],[10,R[2008],E,R[2009],27,[[["self"]],["self"]]],[0,"bounds",R[1826],E,N,N],[8,"Bounded","num::traits::bounds",R[1845],N,N],[10,R[121],E,R[1846],6,[[],["self"]]],[10,R[122],E,R[1847],6,[[],["self"]]],[0,"float",R[1826],E,N,N],[8,"Float","num::traits::float",E,N,N],[10,"nan",E,R[1848],13,[[],["self"]]],[10,"infinity",E,R[1849],13,[[],["self"]]],[10,R[1850],E,R[1851],13,[[],["self"]]],[10,"neg_zero",E,R[1852],13,[[],["self"]]],[10,R[121],E,R[123],13,[[],["self"]]],[10,R[124],E,R[125],13,[[],["self"]]],[11,"epsilon",E,R[126],13,[[],["self"]]],[10,R[122],E,R[127],13,[[],["self"]]],[10,"is_nan",E,R[1853],13,[[],["bool"]]],[10,R[811],E,R[1854],13,[[],["bool"]]],[10,R[812],E,R[1855],13,[[],["bool"]]],[10,R[813],E,R[1856],13,[[],["bool"]]],[10,"classify",E,R[1857],13,[[],[R[2010]]]],[10,"floor",E,R[128],13,[[],["self"]]],[10,"ceil",E,R[129],13,[[],["self"]]],[10,"round",E,R[130],13,[[],["self"]]],[10,"trunc",E,R[131],13,[[],["self"]]],[10,"fract",E,R[132],13,[[],["self"]]],[10,"abs",E,R[133],13,[[],["self"]]],[10,"signum",E,R[134],13,[[],["self"]]],[10,R[135],E,R[136],13,[[],["bool"]]],[10,R[137],E,R[138],13,[[],["bool"]]],[10,"mul_add",E,R[139],13,[[],["self"]]],[10,"recip",E,R[140],13,[[],["self"]]],[10,"powi",E,R[141],13,[[["i32"]],["self"]]],[10,"powf",E,R[1858],13,[[],["self"]]],[10,"sqrt",E,R[142],13,[[],["self"]]],[10,"exp",E,R[143],13,[[],["self"]]],[10,"exp2",E,R[144],13,[[],["self"]]],[10,"ln",E,R[145],13,[[],["self"]]],[10,"log",E,R[146],13,[[],["self"]]],[10,"log2",E,R[147],13,[[],["self"]]],[10,"log10",E,R[148],13,[[],["self"]]],[11,R[149],E,R[150],13,[[],["self"]]],[11,R[151],E,R[152],13,[[],["self"]]],[10,"max",E,R[153],13,[[],["self"]]],[10,"min",E,R[154],13,[[],["self"]]],[10,"abs_sub",E,R[117],13,[[],["self"]]],[10,"cbrt",E,R[155],13,[[],["self"]]],[10,"hypot",E,R[156],13,[[],["self"]]],[10,"sin",E,R[157],13,[[],["self"]]],[10,"cos",E,R[158],13,[[],["self"]]],[10,"tan",E,R[159],13,[[],["self"]]],[10,"asin",E,R[160],13,[[],["self"]]],[10,"acos",E,R[161],13,[[],["self"]]],[10,"atan",E,R[162],13,[[],["self"]]],[10,"atan2",E,R[163],13,[[],["self"]]],[10,"sin_cos",E,R[164],13,[[]]],[10,"exp_m1",E,R[165],13,[[],["self"]]],[10,"ln_1p",E,R[166],13,[[],["self"]]],[10,"sinh",E,R[167],13,[[],["self"]]],[10,"cosh",E,R[168],13,[[],["self"]]],[10,"tanh",E,R[169],13,[[],["self"]]],[10,"asinh",E,R[170],13,[[],["self"]]],[10,"acosh",E,R[171],13,[[],["self"]]],[10,"atanh",E,R[172],13,[[],["self"]]],[10,R[1859],E,R[1860],13,[[]]],[8,R[189],E,E,N,N],[10,"E",E,R[2011],28,[[],["self"]]],[10,"FRAC_1_PI",E,R[2012],28,[[],["self"]]],[10,R[2013],E,R[2014],28,[[],["self"]]],[10,"FRAC_2_PI",E,R[2015],28,[[],["self"]]],[10,R[2016],E,R[2017],28,[[],["self"]]],[10,"FRAC_PI_2",E,R[2018],28,[[],["self"]]],[10,"FRAC_PI_3",E,R[2019],28,[[],["self"]]],[10,"FRAC_PI_4",E,R[2020],28,[[],["self"]]],[10,"FRAC_PI_6",E,R[2021],28,[[],["self"]]],[10,"FRAC_PI_8",E,R[2022],28,[[],["self"]]],[10,"LN_10",E,R[2023],28,[[],["self"]]],[10,"LN_2",E,R[2024],28,[[],["self"]]],[10,"LOG10_E",E,R[2025],28,[[],["self"]]],[10,"LOG2_E",E,R[2026],28,[[],["self"]]],[10,"PI",E,R[2027],28,[[],["self"]]],[10,"SQRT_2",E,R[2028],28,[[],["self"]]],[0,"real",R[1826],E,N,N],[8,"Real","num::traits::real",R[2029],N,N],[10,R[121],E,R[123],29,[[],["self"]]],[10,R[124],E,R[125],29,[[],["self"]]],[10,"epsilon",E,R[126],29,[[],["self"]]],[10,R[122],E,R[127],29,[[],["self"]]],[10,"floor",E,R[128],29,[[],["self"]]],[10,"ceil",E,R[129],29,[[],["self"]]],[10,"round",E,R[130],29,[[],["self"]]],[10,"trunc",E,R[131],29,[[],["self"]]],[10,"fract",E,R[132],29,[[],["self"]]],[10,"abs",E,R[133],29,[[],["self"]]],[10,"signum",E,R[134],29,[[],["self"]]],[10,R[135],E,R[136],29,[[],["bool"]]],[10,R[137],E,R[138],29,[[],["bool"]]],[10,"mul_add",E,R[139],29,[[],["self"]]],[10,"recip",E,R[140],29,[[],["self"]]],[10,"powi",E,R[141],29,[[["i32"]],["self"]]],[10,"powf",E,R[2030],29,[[],["self"]]],[10,"sqrt",E,R[142],29,[[],["self"]]],[10,"exp",E,R[143],29,[[],["self"]]],[10,"exp2",E,R[144],29,[[],["self"]]],[10,"ln",E,R[145],29,[[],["self"]]],[10,"log",E,R[146],29,[[],["self"]]],[10,"log2",E,R[147],29,[[],["self"]]],[10,"log10",E,R[148],29,[[],["self"]]],[10,R[149],E,R[150],29,[[],["self"]]],[10,R[151],E,R[152],29,[[],["self"]]],[10,"max",E,R[153],29,[[],["self"]]],[10,"min",E,R[154],29,[[],["self"]]],[10,"abs_sub",E,R[117],29,[[],["self"]]],[10,"cbrt",E,R[155],29,[[],["self"]]],[10,"hypot",E,R[156],29,[[],["self"]]],[10,"sin",E,R[157],29,[[],["self"]]],[10,"cos",E,R[158],29,[[],["self"]]],[10,"tan",E,R[159],29,[[],["self"]]],[10,"asin",E,R[160],29,[[],["self"]]],[10,"acos",E,R[161],29,[[],["self"]]],[10,"atan",E,R[162],29,[[],["self"]]],[10,"atan2",E,R[163],29,[[],["self"]]],[10,"sin_cos",E,R[164],29,[[]]],[10,"exp_m1",E,R[165],29,[[],["self"]]],[10,"ln_1p",E,R[166],29,[[],["self"]]],[10,"sinh",E,R[167],29,[[],["self"]]],[10,"cosh",E,R[168],29,[[],["self"]]],[10,"tanh",E,R[169],29,[[],["self"]]],[10,"asinh",E,R[170],29,[[],["self"]]],[10,"acosh",E,R[171],29,[[],["self"]]],[10,"atanh",E,R[172],29,[[],["self"]]],[0,"cast",R[1826],E,N,N],[8,R[190],"num::traits::cast",R[1779],N,N],[11,"to_isize",E,R[1780],14,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8",E,R[1781],14,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16",E,R[1782],14,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32",E,R[1783],14,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64",E,R[1784],14,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_usize",E,R[1785],14,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8",E,R[1786],14,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,R[1787],14,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32",E,R[1788],14,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64",E,R[1789],14,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,R[1790],14,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,R[1791],14,[[["self"]],[["option",["f64"]],["f64"]]]],[8,R[191],E,R[785],N,N],[11,R[786],E,R[787],15,[[["isize"]],["option"]]],[11,"from_i8",E,R[788],15,[[["i8"]],["option"]]],[11,"from_i16",E,R[789],15,[[["i16"]],["option"]]],[11,R[2031],E,R[790],15,[[["i32"]],["option"]]],[10,R[1587],E,R[791],15,[[["i64"]],["option"]]],[11,R[689],E,R[792],15,[[["usize"]],["option"]]],[11,"from_u8",E,R[793],15,[[["u8"]],["option"]]],[11,"from_u16",E,R[794],15,[[["u16"]],["option"]]],[11,R[795],E,R[796],15,[[["u32"]],["option"]]],[10,R[1588],E,R[797],15,[[["u64"]],["option"]]],[11,R[1590],E,R[798],15,[[["f32"]],["option"]]],[11,R[1589],E,R[799],15,[[["f64"]],["option"]]],[5,"cast",E,R[1794],N,[[[T]],["option"]]],[8,"NumCast",E,R[1792],N,N],[10,"from",E,R[1793],16,[[[T]],["option"]]],[8,R[192],E,R[1861],N,N],[10,"as_",E,R[1862],17,[[],[T]]],[0,"int",R[1826],E,N,N],[8,"PrimInt","num::traits::int",E,N,N],[10,R[2032],E,R[1863],12,[[],["u32"]]],[10,R[1864],E,R[1865],12,[[],["u32"]]],[10,R[1866],E,R[1867],12,[[],["u32"]]],[10,R[1868],E,R[1869],12,[[],["u32"]]],[10,R[1870],E,R[173],12,[[["u32"]],["self"]]],[10,R[1871],E,R[174],12,[[["u32"]],["self"]]],[10,R[2033],E,R[173],12,[[["u32"]],["self"]]],[10,R[2034],E,R[174],12,[[["u32"]],["self"]]],[10,R[1872],E,R[173],12,[[["u32"]],["self"]]],[10,R[1873],E,R[174],12,[[["u32"]],["self"]]],[10,R[2035],E,R[1874],12,[[],["self"]]],[10,"from_be",E,R[1875],12,[[],["self"]]],[10,"from_le",E,R[1876],12,[[],["self"]]],[10,"to_be",E,R[1877],12,[[],["self"]]],[10,"to_le",E,R[1878],12,[[],["self"]]],[10,"pow",E,R[1879],12,[[["u32"]],["self"]]],[0,"pow",R[1826],E,N,N],[5,"pow","num::traits::pow",R[1795],N,[[[T],["usize"]],[T]]],[5,R[1796],E,R[1797],N,[[[T],["usize"]],["option"]]],[8,"Num",R[1826],R[1880],N,N],[16,R[1881],E,E,2,N],[10,R[814],E,R[1882],2,[[["str"],["u32"]],[R[48]]]],[8,"NumOps",E,R[2036],N,N],[8,"NumRef",E,R[2037],N,N],[8,"RefNum",E,R[2038],N,N],[8,R[2039],E,R[2040],N,N],[8,"NumAssign",E,R[2041],N,N],[8,R[2042],E,R[2043],N,N],[4,R[178],E,E,N,N],[13,"Empty",E,E,30,N],[13,"Invalid",E,E,30,N],[3,R[177],E,E,N,N],[12,"kind",E,E,31,N],[5,"clamp",E,R[1883],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[1889],R[1975],N,N],[6,"Rational",E,R[1884],N,N],[6,"Rational32",E,E,N,N],[6,"Rational64",E,E,N,N],[6,R[1885],E,R[1886],N,N],[3,R[1591],E,E,N,N],[11,"into",R[1799],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[205],E,E,32,[[["self"]],["string"]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[205],E,E,33,[[["self"]],["string"]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",R[1887],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",R[1799],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[205],E,E,18,[[["self"]],["string"]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",R[1887],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[205],E,E,34,[[["self"]],["string"]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",R[1888],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[364],E,E,35,[[],["i"]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into","num::iter",E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[364],E,E,36,[[],["i"]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[44],E,E,36,[[["self"],[T]]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[364],E,E,37,[[],["i"]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[44],E,E,37,[[["self"],[T]]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[364],E,E,38,[[],["i"]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[364],E,E,39,[[],["i"]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[44],E,E,39,[[["self"],[T]]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",R[1826],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[205],E,E,31,[[["self"]],["string"]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",R[1889],E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[205],E,E,40,[[["self"]],["string"]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[43],E,E,41,[[["self"]],[T]]],[11,R[44],E,E,41,[[["self"],[T]]]],[11,R[205],E,E,41,[[["self"]],["string"]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"fmt",R[1826],E,31,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,30,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,31,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"next",R[1888],E,35,[[["self"]],["option"]]],[11,"clone","num::iter",E,37,[[["self"]],[R[1434]]]],[11,"clone",E,E,36,[[["self"]],["range"]]],[11,"clone",E,E,38,[[["self"]],[R[1973]]]],[11,"clone",E,E,39,[[["self"]],[R[1435]]]],[11,"next",E,E,36,[[["self"]],["option"]]],[11,R[425],E,E,36,[[["self"]]]],[11,"next",E,E,39,[[["self"]],["option"]]],[11,"next",E,E,38,[[["self"]],["option"]]],[11,"next",E,E,37,[[["self"]],["option"]]],[11,R[425],E,E,37,[[["self"]]]],[11,R[746],E,E,37,[[["self"]],["option"]]],[11,R[746],E,E,36,[[["self"]],["option"]]],[11,R[807],R[1887],E,0,[[[R[802]],["self"]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["self"],[R[802]]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[814],E,R[809],0,[[["str"],["u32"]],[[R[802]],[R[48],[R[802]]]]]],[11,"encode",E,E,0,[[["__s"],["self"]],[R[48]]]],[11,"mul",E,E,0,[[[R[802]]],[R[802]]]],[11,"mul",E,E,0,[[[R[802]]],[R[802]]]],[11,"mul",E,E,0,[[[T]],[R[802]]]],[11,"mul",E,E,0,[[[T]],[R[802]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"div",E,E,0,[[[R[802]]],[R[802]]]],[11,"div",E,E,0,[[[T]],[R[802]]]],[11,"div",E,E,0,[[[R[802]]],[R[802]]]],[11,"div",E,E,0,[[[T]],[R[802]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,34,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[806],E,E,0,[[["self"],[R[802]]]]],[11,R[806],E,E,0,[[[R[802]],["self"]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,R[805],E,E,0,[[[R[802]],["self"]]]],[11,R[805],E,E,0,[[["self"],[R[802]]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,"eq",E,E,0,[[["self"],[R[802]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[802]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[803]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[803]]],["bool"]]],[11,R[808],E,E,0,[[[R[802]],["self"]]]],[11,R[808],E,E,0,[[["self"],[R[802]]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[802]]]],[11,"zero",E,E,0,[[],[R[802]]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[815],E,R[809],0,[[["str"]],[[R[802]],[R[48],[R[802]]]]]],[11,"neg",E,E,0,[[],[R[802]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"rem",E,E,0,[[[R[802]]],[R[802]]]],[11,"rem",E,E,0,[[[T]],[R[802]]]],[11,"rem",E,E,0,[[[R[802]]],[R[802]]]],[11,"rem",E,E,0,[[[T]],[R[802]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,34,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,0,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[256],E,E,34,[[["self"]],["str"]]],[11,R[804],E,E,0,[[["self"],[R[802]]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[804],E,E,0,[[[R[802]],["self"]]]],[11,R[744],E,E,0,[[],[R[802]]]],[11,"from",E,E,0,[[[T]],[R[802]]]],[11,"from",E,E,0,[[[T]],[R[802]]]],[11,"decode",E,E,0,[[["__d"]],[[R[802]],[R[48],[R[802]]]]]],[11,"add",E,E,0,[[[R[802]]],[R[802]]]],[11,"add",E,E,0,[[[T]],[R[802]]]],[11,"add",E,E,0,[[[T]],[R[802]]]],[11,"add",E,E,0,[[[R[802]]],[R[802]]]],[11,"sub",E,E,0,[[[T]],[R[802]]]],[11,"sub",E,E,0,[[[R[802]]],[R[802]]]],[11,"sub",E,E,0,[[[T]],[R[802]]]],[11,"sub",E,E,0,[[[R[802]]],[R[802]]]],[11,"one",E,E,0,[[],[R[802]]]],[11,R[814],R[1799],R[1479],32,[[["str"],["u32"]],[["bigint"],[R[1467]],[R[48],["bigint",R[1467]]]]]],[11,R[814],E,R[1438],33,[[["str"],["u32"]],[[R[48],["biguint",R[1467]]],[R[1467]],["biguint"]]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"mul",E,E,33,[[["biguint"]],["biguint"]]],[11,"mul",E,E,32,[[["u32"]],["bigint"]]],[11,"mul",E,E,32,[[["usize"]],["bigint"]]],[11,"mul",E,E,20,[[["sign"]],["sign"]]],[11,"mul",E,E,32,[[["usize"]],["bigint"]]],[11,"mul",E,E,32,[[["bigint"]],["bigint"]]],[11,"mul",E,E,32,[[["i64"]],["bigint"]]],[11,"mul",E,E,32,[[["i16"]],["bigint"]]],[11,"mul",E,E,32,[[["i16"]],["bigint"]]],[11,"mul",E,E,33,[[["u16"]],["biguint"]]],[11,"mul",E,E,32,[[["i32"]],["bigint"]]],[11,"mul",E,E,32,[[["u8"]],["bigint"]]],[11,"mul",E,E,32,[[["isize"]],["bigint"]]],[11,"mul",E,E,33,[[["u32"]],["biguint"]]],[11,"mul",E,E,32,[[["u8"]],["bigint"]]],[11,"mul",E,E,33,[[["biguint"]],["biguint"]]],[11,"mul",E,E,32,[[["i8"]],["bigint"]]],[11,"mul",E,E,32,[[["isize"]],["bigint"]]],[11,"mul",E,E,33,[[["usize"]],["biguint"]]],[11,"mul",E,E,33,[[["u64"]],["biguint"]]],[11,"mul",E,E,33,[[["u64"]],["biguint"]]],[11,"mul",E,E,33,[[["u16"]],["biguint"]]],[11,"mul",E,E,33,[[["u32"]],["biguint"]]],[11,"mul",E,E,33,[[["u8"]],["biguint"]]],[11,"mul",E,E,32,[[["u32"]],["bigint"]]],[11,"mul",E,E,32,[[["u64"]],["bigint"]]],[11,"mul",E,E,32,[[["u16"]],["bigint"]]],[11,"mul",E,E,32,[[["u64"]],["bigint"]]],[11,"mul",E,E,33,[[["u8"]],["biguint"]]],[11,"mul",E,E,32,[[["u16"]],["bigint"]]],[11,"mul",E,E,32,[[["bigint"]],["bigint"]]],[11,"mul",E,E,32,[[["i32"]],["bigint"]]],[11,"mul",E,E,33,[[["usize"]],["biguint"]]],[11,"mul",E,E,32,[[["i64"]],["bigint"]]],[11,"mul",E,E,32,[[["i8"]],["bigint"]]],[11,"encode",E,E,33,[[["__s"],["self"]],[R[48]]]],[11,"encode",E,E,32,[[["__s"],["self"]],[R[48]]]],[11,"encode",E,E,20,[[["__s"],["self"]],[R[48]]]],[11,R[1471],E,E,33,[[["self"],["biguint"]]]],[11,R[1471],E,E,33,[[["self"],["biguint"]]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"shr",E,E,33,[[["usize"]],["biguint"]]],[11,"shr",E,E,32,[[["usize"]],["bigint"]]],[11,R[806],E,E,33,[[["self"],["u64"]]]],[11,R[806],E,E,33,[[["self"],["u32"]]]],[11,R[806],E,E,33,[[["self"],["biguint"]]]],[11,R[806],E,E,33,[[["self"],["u8"]]]],[11,R[806],E,E,33,[[["self"],["usize"]]]],[11,R[806],E,E,33,[[["u16"],["self"]]]],[11,R[806],E,E,33,[[["self"],["biguint"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,R[1466],E,E,32,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[1466],E,E,33,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[805],E,E,33,[[["self"],["biguint"]]]],[11,R[805],E,E,33,[[["self"],["u64"]]]],[11,R[805],E,E,33,[[["self"],["usize"]]]],[11,R[805],E,E,33,[[["u16"],["self"]]]],[11,R[805],E,E,33,[[["self"],["u8"]]]],[11,R[805],E,E,33,[[["self"],["biguint"]]]],[11,R[805],E,E,33,[[["self"],["u32"]]]],[11,R[808],E,E,33,[[["self"],["biguint"]]]],[11,R[808],E,E,33,[[["self"],["biguint"]]]],[11,R[808],E,E,33,[[["self"],["u64"]]]],[11,R[808],E,E,33,[[["self"],["usize"]]]],[11,R[808],E,E,33,[[["u16"],["self"]]]],[11,R[808],E,E,33,[[["self"],["u8"]]]],[11,R[808],E,E,33,[[["self"],["u32"]]]],[11,"clone",E,E,33,[[["self"]],["biguint"]]],[11,"clone",E,E,20,[[["self"]],["sign"]]],[11,"clone",E,E,32,[[["self"]],["bigint"]]],[11,R[1480],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[1480],E,E,33,[[["biguint"],["self"]],[["biguint"],["option",["biguint"]]]]],[11,"zero",E,E,32,[[],["bigint"]]],[11,"is_zero",E,E,32,[[["self"]],["bool"]]],[11,"zero",E,E,33,[[],["biguint"]]],[11,"is_zero",E,E,33,[[["self"]],["bool"]]],[11,"bitxor",E,E,33,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,33,[[["biguint"]],["biguint"]]],[11,"decode",E,E,20,[[["__d"]],[["sign"],[R[48],["sign"]]]]],[11,"decode",E,E,32,[[["__d"]],[[R[48],["bigint"]],["bigint"]]]],[11,"decode",E,E,33,[[["__d"]],[[R[48],["biguint"]],["biguint"]]]],[11,"neg",E,E,33,[[],["biguint"]]],[11,"neg",E,E,32,[[],["bigint"]]],[11,"neg",E,R[1922],20,[[],["sign"]]],[11,"rem",E,E,32,[[["i16"]],["bigint"]]],[11,"rem",E,E,33,[[["u32"]],["biguint"]]],[11,"rem",E,E,33,[[["u64"]],["biguint"]]],[11,"rem",E,E,32,[[["u16"]],["bigint"]]],[11,"rem",E,E,32,[[["isize"]],["bigint"]]],[11,"rem",E,E,33,[[["biguint"]],["biguint"]]],[11,"rem",E,E,32,[[["usize"]],["bigint"]]],[11,"rem",E,E,33,[[["usize"]],["biguint"]]],[11,"rem",E,E,33,[[["u8"]],["biguint"]]],[11,"rem",E,E,32,[[["bigint"]],["bigint"]]],[11,"rem",E,E,32,[[["i8"]],["bigint"]]],[11,"rem",E,E,32,[[["usize"]],["bigint"]]],[11,"rem",E,E,32,[[["i32"]],["bigint"]]],[11,"rem",E,E,32,[[["isize"]],["bigint"]]],[11,"rem",E,E,33,[[["u64"]],["biguint"]]],[11,"rem",E,E,32,[[["u32"]],["bigint"]]],[11,"rem",E,E,33,[[["u16"]],["biguint"]]],[11,"rem",E,E,32,[[["u32"]],["bigint"]]],[11,"rem",E,E,32,[[["bigint"]],["bigint"]]],[11,"rem",E,E,32,[[["u64"]],["bigint"]]],[11,"rem",E,E,33,[[["u32"]],["biguint"]]],[11,"rem",E,E,33,[[["u16"]],["biguint"]]],[11,"rem",E,E,32,[[["i64"]],["bigint"]]],[11,"rem",E,E,33,[[["usize"]],["biguint"]]],[11,"rem",E,E,32,[[["u8"]],["bigint"]]],[11,"rem",E,E,33,[[["u8"]],["biguint"]]],[11,"rem",E,E,32,[[["u64"]],["bigint"]]],[11,"rem",E,E,32,[[["i8"]],["bigint"]]],[11,"rem",E,E,33,[[["biguint"]],["biguint"]]],[11,"rem",E,E,32,[[["u8"]],["bigint"]]],[11,"rem",E,E,32,[[["i64"]],["bigint"]]],[11,"rem",E,E,32,[[["i16"]],["bigint"]]],[11,"rem",E,E,32,[[["u16"]],["bigint"]]],[11,"rem",E,E,32,[[["i32"]],["bigint"]]],[11,"shl_assign",E,E,33,[[["self"],["usize"]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[314],E,E,33,[[["biguint"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,32,[[["self"],["bigint"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,20,[[["self"],["sign"]],[["option",[R[313]]],[R[313]]]]],[11,R[744],E,E,32,[[],["bigint"]]],[11,R[744],E,E,33,[[],["biguint"]]],[11,"shl",E,E,32,[[["usize"]],["bigint"]]],[11,"shl",E,E,33,[[["usize"]],["biguint"]]],[11,"add",E,E,32,[[["usize"]],["bigint"]]],[11,"add",E,E,33,[[["u32"]],["biguint"]]],[11,"add",E,E,33,[[["u8"]],["biguint"]]],[11,"add",E,E,32,[[["i8"]],["bigint"]]],[11,"add",E,E,32,[[["u32"]],["bigint"]]],[11,"add",E,E,32,[[["i32"]],["bigint"]]],[11,"add",E,E,32,[[["i64"]],["bigint"]]],[11,"add",E,E,32,[[["i64"]],["bigint"]]],[11,"add",E,E,32,[[["i8"]],["bigint"]]],[11,"add",E,E,33,[[["u16"]],["biguint"]]],[11,"add",E,E,33,[[["u8"]],["biguint"]]],[11,"add",E,E,33,[[["u64"]],["biguint"]]],[11,"add",E,E,32,[[["bigint"]],["bigint"]]],[11,"add",E,E,33,[[["u32"]],["biguint"]]],[11,"add",E,E,33,[[["u64"]],["biguint"]]],[11,"add",E,E,32,[[["i16"]],["bigint"]]],[11,"add",E,E,32,[[["u64"]],["bigint"]]],[11,"add",E,E,32,[[["i16"]],["bigint"]]],[11,"add",E,E,32,[[["usize"]],["bigint"]]],[11,"add",E,E,32,[[["isize"]],["bigint"]]],[11,"add",E,E,32,[[["u8"]],["bigint"]]],[11,"add",E,E,33,[[["usize"]],["biguint"]]],[11,"add",E,E,32,[[["u16"]],["bigint"]]],[11,"add",E,E,33,[[["u16"]],["biguint"]]],[11,"add",E,E,32,[[["u16"]],["bigint"]]],[11,"add",E,E,33,[[["biguint"]],["biguint"]]],[11,"add",E,E,32,[[["isize"]],["bigint"]]],[11,"add",E,E,32,[[["u8"]],["bigint"]]],[11,"add",E,E,32,[[["u64"]],["bigint"]]],[11,"add",E,E,33,[[["biguint"]],["biguint"]]],[11,"add",E,E,32,[[["i32"]],["bigint"]]],[11,"add",E,E,32,[[["bigint"]],["bigint"]]],[11,"add",E,E,33,[[["usize"]],["biguint"]]],[11,"add",E,E,32,[[["u32"]],["bigint"]]],[11,"to_i64",E,E,32,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u64",E,E,32,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,E,32,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,32,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"to_i64",E,E,33,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u64",E,E,33,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,E,33,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,33,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"div_rem",E,E,32,[[["self"],["bigint"]]]],[11,R[773],E,E,32,[[["self"],["bigint"]],["bigint"]]],[11,R[774],E,E,32,[[["self"],["bigint"]],["bigint"]]],[11,R[775],E,E,32,[[["self"],["bigint"]]]],[11,"gcd",E,R[1472],32,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1473],32,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1474],32,[[["self"],["bigint"]],["bool"]]],[11,R[1475],E,R[1476],32,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1477],32,[[["self"]],["bool"]]],[11,"is_odd",E,R[1478],32,[[["self"]],["bool"]]],[11,"div_rem",E,E,33,[[["biguint"],["self"]]]],[11,R[773],E,E,33,[[["biguint"],["self"]],["biguint"]]],[11,R[774],E,E,33,[[["biguint"],["self"]],["biguint"]]],[11,R[775],E,E,33,[[["biguint"],["self"]]]],[11,"gcd",E,R[1472],33,[[["biguint"],["self"]],["biguint"]]],[11,"lcm",E,R[1473],33,[[["biguint"],["self"]],["biguint"]]],[11,"divides",E,R[1474],33,[[["biguint"],["self"]],["bool"]]],[11,R[1475],E,R[1476],33,[[["biguint"],["self"]],["bool"]]],[11,"is_even",E,R[1477],33,[[["self"]],["bool"]]],[11,"is_odd",E,R[1478],33,[[["self"]],["bool"]]],[11,R[807],E,E,33,[[["self"],["u8"]]]],[11,R[807],E,E,33,[[["self"],["usize"]]]],[11,R[807],E,E,33,[[["self"],["biguint"]]]],[11,R[807],E,E,33,[[["self"],["u32"]]]],[11,R[807],E,E,33,[[["self"],["u64"]]]],[11,R[807],E,E,33,[[["self"],["biguint"]]]],[11,R[807],E,E,33,[[["u16"],["self"]]]],[11,"abs",E,E,32,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,32,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,32,[[["self"]],["bigint"]]],[11,R[1483],E,E,32,[[["self"]],["bool"]]],[11,R[1484],E,E,32,[[["self"]],["bool"]]],[11,"one",E,E,32,[[],["bigint"]]],[11,"one",E,E,33,[[],["biguint"]]],[11,R[1481],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[1481],E,E,33,[[["biguint"],["self"]],[["biguint"],["option",["biguint"]]]]],[11,"div",E,E,32,[[["u64"]],["bigint"]]],[11,"div",E,E,32,[[["i32"]],["bigint"]]],[11,"div",E,E,32,[[["i64"]],["bigint"]]],[11,"div",E,E,32,[[["u64"]],["bigint"]]],[11,"div",E,E,33,[[["biguint"]],["biguint"]]],[11,"div",E,E,33,[[["u8"]],["biguint"]]],[11,"div",E,E,32,[[["usize"]],["bigint"]]],[11,"div",E,E,33,[[["u64"]],["biguint"]]],[11,"div",E,E,33,[[["biguint"]],["biguint"]]],[11,"div",E,E,32,[[["i8"]],["bigint"]]],[11,"div",E,E,32,[[["u8"]],["bigint"]]],[11,"div",E,E,32,[[["isize"]],["bigint"]]],[11,"div",E,E,32,[[["bigint"]],["bigint"]]],[11,"div",E,E,32,[[["i8"]],["bigint"]]],[11,"div",E,E,32,[[["u16"]],["bigint"]]],[11,"div",E,E,33,[[["u8"]],["biguint"]]],[11,"div",E,E,32,[[["u8"]],["bigint"]]],[11,"div",E,E,33,[[["usize"]],["biguint"]]],[11,"div",E,E,32,[[["i16"]],["bigint"]]],[11,"div",E,E,33,[[["u32"]],["biguint"]]],[11,"div",E,E,32,[[["i64"]],["bigint"]]],[11,"div",E,E,33,[[["u64"]],["biguint"]]],[11,"div",E,E,32,[[["bigint"]],["bigint"]]],[11,"div",E,E,32,[[["i32"]],["bigint"]]],[11,"div",E,E,32,[[["u32"]],["bigint"]]],[11,"div",E,E,32,[[["u32"]],["bigint"]]],[11,"div",E,E,33,[[["usize"]],["biguint"]]],[11,"div",E,E,33,[[["u16"]],["biguint"]]],[11,"div",E,E,32,[[["i16"]],["bigint"]]],[11,"div",E,E,32,[[["u16"]],["bigint"]]],[11,"div",E,E,33,[[["u16"]],["biguint"]]],[11,"div",E,E,32,[[["usize"]],["bigint"]]],[11,"div",E,E,32,[[["isize"]],["bigint"]]],[11,"div",E,E,33,[[["u32"]],["biguint"]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,20,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,18,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"bitand",E,E,33,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,33,[[["biguint"]],["biguint"]]],[11,"eq",E,E,18,[[["self"],[R[1467]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1467]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,33,[[["biguint"],["self"]],["bool"]]],[11,"eq",E,E,32,[[["self"],["bigint"]],["bool"]]],[11,R[1587],E,E,33,[[["i64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1588],E,E,33,[[["u64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1589],E,E,33,[[["f64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1587],E,E,32,[[["i64"]],[["bigint"],["option",["bigint"]]]]],[11,R[1588],E,E,32,[[["u64"]],[["bigint"],["option",["bigint"]]]]],[11,R[1589],E,E,32,[[["f64"]],[["bigint"],["option",["bigint"]]]]],[11,R[751],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[751],E,E,33,[[["biguint"],["self"]],[["biguint"],["option",["biguint"]]]]],[11,"bitor",E,E,33,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,33,[[["biguint"]],["biguint"]]],[11,R[1470],E,E,33,[[["self"],["biguint"]]]],[11,R[1470],E,E,33,[[["self"],["biguint"]]]],[11,R[1909],E,E,33,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1909],E,E,32,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[815],E,E,33,[[["str"]],[[R[48],["biguint",R[1467]]],[R[1467]],["biguint"]]]],[11,R[815],E,E,32,[[["str"]],[["bigint"],[R[1467]],[R[48],["bigint",R[1467]]]]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[1469],E,E,33,[[["self"],["biguint"]]]],[11,R[1469],E,E,33,[[["self"],["biguint"]]]],[11,"fmt",E,E,18,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,33,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,32,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[804],E,E,33,[[["self"],["u8"]]]],[11,R[804],E,E,33,[[["self"],["u32"]]]],[11,R[804],E,E,33,[[["u16"],["self"]]]],[11,R[804],E,E,33,[[["self"],["usize"]]]],[11,R[804],E,E,33,[[["self"],["biguint"]]]],[11,R[804],E,E,33,[[["self"],["u64"]]]],[11,R[804],E,E,33,[[["self"],["biguint"]]]],[11,"shr_assign",E,E,33,[[["self"],["usize"]]]],[11,R[256],E,E,18,[[["self"]],["str"]]],[11,"from",E,E,32,[[["usize"]],["bigint"]]],[11,"from",E,E,18,[[[R[1921]]],[R[1467]]]],[11,"from",E,E,32,[[["i16"]],["bigint"]]],[11,"from",E,E,32,[[["isize"]],["bigint"]]],[11,"from",E,E,32,[[["u64"]],["bigint"]]],[11,"from",E,E,32,[[["u8"]],["bigint"]]],[11,"from",E,E,33,[[["u32"]],["biguint"]]],[11,"from",E,E,32,[[["i8"]],["bigint"]]],[11,"from",E,E,32,[[["biguint"]],["bigint"]]],[11,"from",E,E,33,[[["u16"]],["biguint"]]],[11,"from",E,E,32,[[["u32"]],["bigint"]]],[11,"from",E,E,32,[[["i32"]],["bigint"]]],[11,"from",E,E,32,[[["u16"]],["bigint"]]],[11,"from",E,E,33,[[["usize"]],["biguint"]]],[11,"from",E,E,33,[[["u64"]],["biguint"]]],[11,"from",E,E,33,[[["u8"]],["biguint"]]],[11,"from",E,E,32,[[["i64"]],["bigint"]]],[11,R[752],E,E,33,[[["biguint"],["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[752],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"sub",E,E,33,[[["u8"]],["biguint"]]],[11,"sub",E,E,32,[[["i16"]],["bigint"]]],[11,"sub",E,E,32,[[["u8"]],["bigint"]]],[11,"sub",E,E,33,[[["u64"]],["biguint"]]],[11,"sub",E,E,32,[[["i16"]],["bigint"]]],[11,"sub",E,E,32,[[["bigint"]],["bigint"]]],[11,"sub",E,E,33,[[["usize"]],["biguint"]]],[11,"sub",E,E,33,[[["u8"]],["biguint"]]],[11,"sub",E,E,32,[[["isize"]],["bigint"]]],[11,"sub",E,E,32,[[["u64"]],["bigint"]]],[11,"sub",E,E,32,[[["i64"]],["bigint"]]],[11,"sub",E,E,32,[[["u32"]],["bigint"]]],[11,"sub",E,E,32,[[["i8"]],["bigint"]]],[11,"sub",E,E,32,[[["i64"]],["bigint"]]],[11,"sub",E,E,32,[[["isize"]],["bigint"]]],[11,"sub",E,E,33,[[["biguint"]],["biguint"]]],[11,"sub",E,E,32,[[["u32"]],["bigint"]]],[11,"sub",E,E,33,[[["u64"]],["biguint"]]],[11,"sub",E,E,32,[[["u16"]],["bigint"]]],[11,"sub",E,E,33,[[["biguint"]],["biguint"]]],[11,"sub",E,E,32,[[["i32"]],["bigint"]]],[11,"sub",E,E,32,[[["u64"]],["bigint"]]],[11,"sub",E,E,33,[[["usize"]],["biguint"]]],[11,"sub",E,E,33,[[["u16"]],["biguint"]]],[11,"sub",E,E,32,[[["usize"]],["bigint"]]],[11,"sub",E,E,33,[[["u32"]],["biguint"]]],[11,"sub",E,E,32,[[["bigint"]],["bigint"]]],[11,"sub",E,E,32,[[["i32"]],["bigint"]]],[11,"sub",E,E,32,[[["u16"]],["bigint"]]],[11,"sub",E,E,32,[[["usize"]],["bigint"]]],[11,"sub",E,E,33,[[["u32"]],["biguint"]]],[11,"sub",E,E,32,[[["i8"]],["bigint"]]],[11,"sub",E,E,32,[[["u8"]],["bigint"]]],[11,"sub",E,E,33,[[["u16"]],["biguint"]]],[11,"cmp",E,E,20,[[["self"],["sign"]],[R[313]]]],[11,"cmp",E,E,32,[[["self"],["bigint"]],[R[313]]]],[11,"cmp",E,E,33,[[["biguint"],["self"]],[R[313]]]],[11,R[751],R[1889],E,40,[[["self"],["ratio"]],[["option",["ratio"]],["ratio"]]]],[11,R[807],E,E,40,[[["self"],["ratio"]]]],[11,R[807],E,E,40,[[["self"],["ratio"]]]],[11,R[807],E,E,40,[[["self"],[T]]]],[11,R[807],E,E,40,[[["self"],[T]]]],[11,"zero",E,E,40,[[],["ratio"]]],[11,"is_zero",E,E,40,[[["self"]],["bool"]]],[11,"mul",E,E,40,[[["ratio"]],["ratio"]]],[11,"mul",E,E,40,[[[T]],["ratio"]]],[11,"mul",E,E,40,[[["ratio"]],["ratio"]]],[11,"mul",E,E,40,[[[T]],["ratio"]]],[11,"div",E,E,40,[[[T]],["ratio"]]],[11,"div",E,E,40,[[["ratio"]],["ratio"]]],[11,"div",E,E,40,[[["ratio"]],["ratio"]]],[11,"div",E,E,40,[[[T]],["ratio"]]],[11,"fmt",E,E,40,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,41,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"abs",E,E,40,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,40,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,40,[[["self"]],["ratio"]]],[11,R[1483],E,E,40,[[["self"]],["bool"]]],[11,R[1484],E,E,40,[[["self"]],["bool"]]],[11,"hash",E,E,40,[[["self"],["h"]]]],[11,R[806],E,E,40,[[["self"],[T]]]],[11,R[806],E,E,40,[[["self"],[T]]]],[11,R[806],E,E,40,[[["self"],["ratio"]]]],[11,R[806],E,E,40,[[["self"],["ratio"]]]],[11,"one",E,E,40,[[],["ratio"]]],[11,R[752],E,E,40,[[["self"],["ratio"]],[["option",["ratio"]],["ratio"]]]],[11,R[805],E,E,40,[[["self"],["ratio"]]]],[11,R[805],E,E,40,[[["self"],[T]]]],[11,R[805],E,E,40,[[["self"],["ratio"]]]],[11,R[805],E,E,40,[[["self"],[T]]]],[11,"eq",E,E,41,[[["self"],[R[1586]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[1586]]],["bool"]]],[11,"eq",E,E,40,[[["self"],["ratio"]],["bool"]]],[11,R[808],E,E,40,[[["self"],[T]]]],[11,R[808],E,E,40,[[["self"],["ratio"]]]],[11,R[808],E,E,40,[[["self"],["ratio"]]]],[11,R[808],E,E,40,[[["self"],[T]]]],[11,R[814],E,R[1996],40,[[["str"],["u32"]],[[R[1586]],[R[48],["ratio",R[1586]]],["ratio"]]]],[11,"clone",E,E,41,[[["self"]],[R[1586]]]],[11,"clone",E,E,40,[[["self"]],["ratio"]]],[11,"fmt",E,E,41,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,R[1994],40,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[815],E,R[1995],40,[[["str"]],[[R[1586]],[R[48],["ratio",R[1586]]],["ratio"]]]],[11,"neg",E,E,40,[[],["ratio"]]],[11,"rem",E,E,40,[[[T]],["ratio"]]],[11,"rem",E,E,40,[[["ratio"]],["ratio"]]],[11,"rem",E,E,40,[[[T]],["ratio"]]],[11,"rem",E,E,40,[[["ratio"]],["ratio"]]],[11,R[1481],E,E,40,[[["self"],["ratio"]],[["option",["ratio"]],["ratio"]]]],[11,R[256],E,E,41,[[["self"]],["str"]]],[11,R[1480],E,E,40,[[["self"],["ratio"]],[["option",["ratio"]],["ratio"]]]],[11,R[314],E,E,40,[[["self"],["ratio"]],[["option",[R[313]]],[R[313]]]]],[11,R[804],E,E,40,[[["self"],[T]]]],[11,R[804],E,E,40,[[["self"],["ratio"]]]],[11,R[804],E,E,40,[[["self"],[T]]]],[11,R[804],E,E,40,[[["self"],["ratio"]]]],[11,"from",E,E,40,[[[T]],["ratio"]]],[11,"from",E,E,40,[[],["ratio"]]],[11,"into",E,E,40,[[]]],[11,"decode",E,E,40,[[["__d"]],[[R[48],["ratio"]],["ratio"]]]],[11,"encode",E,E,40,[[["__s"],["self"]],[R[48]]]],[11,"add",E,E,40,[[[T]],["ratio"]]],[11,"add",E,E,40,[[["ratio"]],["ratio"]]],[11,"add",E,E,40,[[["ratio"]],["ratio"]]],[11,"add",E,E,40,[[[T]],["ratio"]]],[11,"sub",E,E,40,[[["ratio"]],["ratio"]]],[11,"sub",E,E,40,[[[T]],["ratio"]]],[11,"sub",E,E,40,[[["ratio"]],["ratio"]]],[11,"sub",E,E,40,[[[T]],["ratio"]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["ratio",["u32"]],["option",["ratio"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["ratio",["u32"]],["option",["ratio"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["ratio",["u32"]],["option",["ratio"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["ratio",["u32"]],["option",["ratio"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["ratio",["u64"]],["option",["ratio"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["ratio",["u64"]],["option",["ratio"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["ratio",["u64"]],["option",["ratio"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["ratio",["u64"]],["option",["ratio"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["i8"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["i8"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["i8"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["i8"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["ratio",["isize"]],["option",["ratio"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["ratio",["isize"]],["option",["ratio"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["ratio",["isize"]],["option",["ratio"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["ratio",["isize"]],["option",["ratio"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,R[1587],E,E,40,[[["i64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,R[1588],E,E,40,[[["u64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,R[1590],E,E,40,[[["f32"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,R[1589],E,E,40,[[["f64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"cmp",E,E,40,[[["self"],["ratio"]],[R[313]]]],[11,"new",R[1799],R[1479],32,[[["sign"],["u32"],["vec",["u32"]]],["bigint"]]],[11,R[1894],E,R[1441],32,[[["sign"],["biguint"]],["bigint"]]],[11,R[674],E,R[1441],32,[[["sign"]],["bigint"]]],[11,R[1442],E,R[1895],32,[[["sign"],["self"]]]],[11,R[1443],E,R[1441],32,[[["sign"]],["bigint"]]],[11,R[1444],E,R[1441],32,[[["sign"]],["bigint"]]],[11,R[1896],E,R[1445],32,[[],["bigint"]]],[11,R[1897],E,R[1445],32,[[],["bigint"]]],[11,R[1446],E,R[1441],32,[[["u32"]],[["bigint"],["option",["bigint"]]]]],[11,R[1447],E,R[1449],32,[[["sign"],["u32"]],[["bigint"],["option",["bigint"]]]]],[11,R[1448],E,R[1449],32,[[["sign"],["u32"]],[["bigint"],["option",["bigint"]]]]],[11,R[1450],E,R[1452],32,[[["self"]]]],[11,R[1451],E,R[1452],32,[[["self"]]]],[11,R[1898],E,R[1453],32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1899],E,R[1453],32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1454],E,R[1455],32,[[["u32"],["self"]],["string"]]],[11,R[1456],E,R[1457],32,[[["u32"],["self"]]]],[11,R[1458],E,R[1459],32,[[["u32"],["self"]]]],[11,"sign",E,R[1900],32,[[["self"]],["sign"]]],[11,"bits",E,R[1460],32,[[["self"]],["usize"]]],[11,R[1466],E,R[1901],32,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[751],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[752],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[1480],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,R[1481],E,E,32,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"new",E,R[1438],33,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,R[674],E,R[1438],33,[[],["biguint"]]],[11,R[1442],E,R[1891],33,[[["self"]]]],[11,R[1443],E,R[1438],33,[[],["biguint"]]],[11,R[1444],E,R[1438],33,[[],["biguint"]]],[11,R[1446],E,R[1892],33,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1447],E,R[1439],33,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1448],E,R[1439],33,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1450],E,R[1440],33,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1451],E,R[1440],33,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1454],E,R[1455],33,[[["u32"],["self"]],["string"]]],[11,R[1456],E,R[1457],33,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1458],E,R[1459],33,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[1460],33,[[["self"]],["usize"]]],[11,"modpow",E,R[1893],33,[[["biguint"],["self"]],["biguint"]]],[11,"new",R[1887],R[1924],0,[[[T]],[R[802]]]],[11,"i",E,R[1925],0,[[],[R[802]]]],[11,"norm_sqr",E,R[1926],0,[[["self"]],[T]]],[11,"scale",E,R[1927],0,[[["self"],[T]],[R[802]]]],[11,"unscale",E,R[1928],0,[[["self"],[T]],[R[802]]]],[11,"conj",E,R[1929],0,[[["self"]],[R[802]]]],[11,"inv",E,R[1930],0,[[["self"]],[R[802]]]],[11,"norm",E,R[1931],0,[[["self"]],[T]]],[11,"arg",E,R[1932],0,[[["self"]],[T]]],[11,"to_polar",E,R[1933],0,[[["self"]]]],[11,"from_polar",E,R[1934],0,[[[T]],[R[802]]]],[11,"exp",E,R[1935],0,[[["self"]],[R[802]]]],[11,"ln",E,R[1936],0,[[["self"]],[R[802]]]],[11,"sqrt",E,R[1937],0,[[["self"]],[R[802]]]],[11,"powf",E,R[1938],0,[[["self"],[T]],[R[802]]]],[11,"log",E,R[1939],0,[[["self"],[T]],[R[802]]]],[11,"powc",E,R[1940],0,[[[R[802]],["self"]],[R[802]]]],[11,"expf",E,R[1941],0,[[["self"],[T]],[R[802]]]],[11,"sin",E,R[1942],0,[[["self"]],[R[802]]]],[11,"cos",E,R[1943],0,[[["self"]],[R[802]]]],[11,"tan",E,R[1944],0,[[["self"]],[R[802]]]],[11,"asin",E,R[1945],0,[[["self"]],[R[802]]]],[11,"acos",E,R[1946],0,[[["self"]],[R[802]]]],[11,"atan",E,R[1947],0,[[["self"]],[R[802]]]],[11,"sinh",E,R[1948],0,[[["self"]],[R[802]]]],[11,"cosh",E,R[1949],0,[[["self"]],[R[802]]]],[11,"tanh",E,R[1950],0,[[["self"]],[R[802]]]],[11,"asinh",E,R[1951],0,[[["self"]],[R[802]]]],[11,"acosh",E,R[1952],0,[[["self"]],[R[802]]]],[11,"atanh",E,R[1953],0,[[["self"]],[R[802]]]],[11,"is_nan",E,R[1954],0,[[],["bool"]]],[11,R[811],E,R[1955],0,[[],["bool"]]],[11,R[812],E,R[1956],0,[[],["bool"]]],[11,R[813],E,R[1957],0,[[],["bool"]]],[11,"new",R[1888],R[1966],35,[[[T]],[R[1967]]]],[11,"new",R[1889],R[1976],40,[[[T]],["ratio"]]],[11,R[1977],E,R[1978],40,[[[T]],["ratio"]]],[11,"new_raw",E,R[1979],40,[[[T]],["ratio"]]],[11,"to_integer",E,R[1980],40,[[["self"]],[T]]],[11,"numer",E,R[1981],40,[[["self"]],[T]]],[11,"denom",E,R[1982],40,[[["self"]],[T]]],[11,"is_integer",E,R[1983],40,[[["self"]],["bool"]]],[11,"reduced",E,R[1984],40,[[["self"]],["ratio"]]],[11,"recip",E,R[1985],40,[[["self"]],["ratio"]]],[11,"floor",E,R[1986],40,[[["self"]],["ratio"]]],[11,"ceil",E,R[1987],40,[[["self"]],["ratio"]]],[11,"round",E,R[1988],40,[[["self"]],["ratio"]]],[11,"trunc",E,R[1989],40,[[["self"]],["ratio"]]],[11,"fract",E,R[1990],40,[[["self"]],["ratio"]]],[11,"pow",E,R[1991],40,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1992],40,[[[T]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,R[1993],E,E,40,[[["f"]],[["option",["ratio"]],["ratio"]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[179]],[8,R[180]],[8,R[181]],[8,R[182]],[8,R[183]],[8,"PrimInt"],[8,"Float"],[8,R[190]],[8,R[191]],[8,"NumCast"],[8,R[192]],[4,R[1482]],[8,R[1923]],[4,"Sign"],[8,"ToBigInt"],[8,R[1911]],[8,R[184]],[8,R[185]],[8,R[186]],[8,R[187]],[8,R[188]],[8,R[189]],[8,"Real"],[4,R[178]],[3,R[177]],[3,"BigInt"],[3,"BigUint"],[3,R[810]],[3,R[776]],[3,"Range"],[3,R[1436]],[3,R[1974]],[3,R[1437]],[3,"Ratio"],[3,R[1591]]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"BigUint","num_bigint",R[1798],N,N],[3,"BigInt",E,R[1800],N,N],[4,R[1482],E,E,N,N],[13,"ParseInt",E,E,0,N],[13,"Other",E,E,0,N],[4,"Sign",E,R[1890],N,N],[13,"Minus",E,E,1,N],[13,"NoSign",E,E,1,N],[13,"Plus",E,E,1,N],[11,"new",E,R[1438],2,[[["vec",[R[1468]]],[R[1468]]],["biguint"]]],[11,R[674],E,R[1438],2,[[],["biguint"]]],[11,R[1442],E,R[1891],2,[[["self"]]]],[11,R[1443],E,R[1438],2,[[],["biguint"]]],[11,R[1444],E,R[1438],2,[[],["biguint"]]],[11,R[1446],E,R[1892],2,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1447],E,R[1439],2,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1448],E,R[1439],2,[[["u32"]],[["biguint"],["option",["biguint"]]]]],[11,R[1450],E,R[1440],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1451],E,R[1440],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1454],E,R[1455],2,[[["u32"],["self"]],["string"]]],[11,R[1456],E,R[1457],2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1458],E,R[1459],2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[1460],2,[[["self"]],["usize"]]],[11,"modpow",E,R[1893],2,[[["self"]],["self"]]],[11,"new",E,R[1479],3,[[["vec",[R[1468]]],[R[1468]],["sign"]],["bigint"]]],[11,R[1894],E,R[1441],3,[[["biguint"],["sign"]],["bigint"]]],[11,R[674],E,R[1441],3,[[["sign"]],["bigint"]]],[11,R[1442],E,R[1895],3,[[["self"],["sign"]]]],[11,R[1443],E,R[1441],3,[[["sign"]],["bigint"]]],[11,R[1444],E,R[1441],3,[[["sign"]],["bigint"]]],[11,R[1896],E,R[1445],3,[[],["bigint"]]],[11,R[1897],E,R[1445],3,[[],["bigint"]]],[11,R[1446],E,R[1441],3,[[["u32"]],[["option",["bigint"]],["bigint"]]]],[11,R[1447],E,R[1449],3,[[["u32"],["sign"]],[["option",["bigint"]],["bigint"]]]],[11,R[1448],E,R[1449],3,[[["u32"],["sign"]],[["option",["bigint"]],["bigint"]]]],[11,R[1450],E,R[1452],3,[[["self"]]]],[11,R[1451],E,R[1452],3,[[["self"]]]],[11,R[1898],E,R[1453],3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1899],E,R[1453],3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1454],E,R[1455],3,[[["u32"],["self"]],["string"]]],[11,R[1456],E,R[1457],3,[[["u32"],["self"]]]],[11,R[1458],E,R[1459],3,[[["u32"],["self"]]]],[11,"sign",E,R[1900],3,[[["self"]],["sign"]]],[11,"bits",E,R[1460],3,[[["self"]],["usize"]]],[11,R[1466],E,R[1901],3,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[751],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[752],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[1480],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[1481],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[0,"big_digit",E,E,N,N],[5,R[1902],"num_bigint::big_digit",R[1903],N,[[[R[1461]]]]],[5,R[1904],E,R[1905],N,[[[R[1468]]],[R[1461]]]],[6,"BigDigit",E,R[1462],N,N],[6,R[1463],E,R[1464],N,N],[17,R[1465],E,E,N,N],[17,"BITS",E,E,N,N],[17,"BASE",E,E,N,N],[6,"BigDigit","num_bigint",R[1462],N,N],[6,R[1463],E,R[1464],N,N],[17,R[1465],E,E,N,N],[8,R[1923],E,R[1906],N,N],[10,R[1466],E,R[1907],4,[[["self"]],[["biguint"],["option",["biguint"]]]]],[8,"ToBigInt",E,R[1908],N,N],[10,R[1909],E,R[1910],5,[[["self"]],[["option",["bigint"]],["bigint"]]]],[8,R[1911],E,E,N,N],[10,R[1912],E,R[1913],6,[[["self"],["usize"]],["biguint"]]],[10,"gen_bigint",E,R[1914],6,[[["self"],["usize"]],["bigint"]]],[10,R[1915],E,R[1916],6,[[["self"],["biguint"]],["biguint"]]],[10,R[1917],E,R[1918],6,[[["self"],["biguint"]],["biguint"]]],[10,R[1919],E,R[1920],6,[[["self"],["bigint"]],["bigint"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[205],E,E,2,[[["self"]],["string"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,R[1466],E,E,2,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[1466],E,E,3,[[["self"]],[["biguint"],["option",["biguint"]]]]],[11,R[1909],E,E,3,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,R[1909],E,E,2,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,"from",E,E,0,[[[R[1921]]],[R[1467]]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,"from",E,E,3,[[["i64"]],["self"]]],[11,"from",E,E,3,[[["i8"]],["self"]]],[11,"from",E,E,3,[[["i16"]],["self"]]],[11,"from",E,E,3,[[["i32"]],["self"]]],[11,"from",E,E,3,[[["isize"]],["self"]]],[11,"from",E,E,3,[[["u64"]],["self"]]],[11,"from",E,E,3,[[["u8"]],["self"]]],[11,"from",E,E,3,[[["u16"]],["self"]]],[11,"from",E,E,3,[[["u32"]],["self"]]],[11,"from",E,E,3,[[["usize"]],["self"]]],[11,"from",E,E,3,[[["biguint"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["biguint"]]],[11,"clone",E,E,1,[[["self"]],["sign"]]],[11,"clone",E,E,3,[[["self"]],["bigint"]]],[11,R[744],E,E,2,[[],["biguint"]]],[11,R[744],E,E,3,[[],["bigint"]]],[11,"cmp",E,E,2,[[["self"],["biguint"]],[R[313]]]],[11,"cmp",E,E,1,[[["sign"],["self"]],[R[313]]]],[11,"cmp",E,E,3,[[["self"],["bigint"]],[R[313]]]],[11,"eq",E,E,0,[[["self"],[R[1467]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1467]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["biguint"]],["bool"]]],[11,"eq",E,E,1,[[["sign"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["bigint"]],["bool"]]],[11,R[314],E,E,2,[[["self"],["biguint"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,1,[[["sign"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,3,[[["self"],["bigint"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[[R[1468]]],["biguint"]]],[11,"div",E,E,7,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[[R[1461]]],["biguint"]]],[11,"div",E,E,8,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[[R[1468]]],["biguint"]]],[11,"div",E,E,7,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[[R[1461]]],["biguint"]]],[11,"div",E,E,8,[[["biguint"]],["biguint"]]],[11,"div",E,E,3,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["u8"]],["bigint"]]],[11,"div",E,E,3,[[["u8"]],["bigint"]]],[11,"div",E,E,3,[[["u16"]],["bigint"]]],[11,"div",E,E,3,[[["u16"]],["bigint"]]],[11,"div",E,E,3,[[["usize"]],["bigint"]]],[11,"div",E,E,3,[[["usize"]],["bigint"]]],[11,"div",E,E,3,[[["i8"]],["bigint"]]],[11,"div",E,E,3,[[["i8"]],["bigint"]]],[11,"div",E,E,3,[[["i16"]],["bigint"]]],[11,"div",E,E,3,[[["i16"]],["bigint"]]],[11,"div",E,E,3,[[["isize"]],["bigint"]]],[11,"div",E,E,3,[[["isize"]],["bigint"]]],[11,"div",E,E,3,[[[R[1468]]],["bigint"]]],[11,"div",E,E,7,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[1461]]],["bigint"]]],[11,"div",E,E,8,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[1468]]],["bigint"]]],[11,"div",E,E,7,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[1461]]],["bigint"]]],[11,"div",E,E,8,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["i32"]],["bigint"]]],[11,"div",E,E,3,[[["i64"]],["bigint"]]],[11,"div",E,E,3,[[["i32"]],["bigint"]]],[11,"div",E,E,3,[[["i64"]],["bigint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[[R[1468]]],["biguint"]]],[11,"rem",E,E,7,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[[R[1461]]],["biguint"]]],[11,"rem",E,E,8,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[[R[1468]]],["biguint"]]],[11,"rem",E,E,7,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[[R[1461]]],["biguint"]]],[11,"rem",E,E,8,[[["biguint"]],["biguint"]]],[11,"rem",E,E,3,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["u8"]],["bigint"]]],[11,"rem",E,E,3,[[["u8"]],["bigint"]]],[11,"rem",E,E,3,[[["u16"]],["bigint"]]],[11,"rem",E,E,3,[[["u16"]],["bigint"]]],[11,"rem",E,E,3,[[["usize"]],["bigint"]]],[11,"rem",E,E,3,[[["usize"]],["bigint"]]],[11,"rem",E,E,3,[[["i8"]],["bigint"]]],[11,"rem",E,E,3,[[["i8"]],["bigint"]]],[11,"rem",E,E,3,[[["i16"]],["bigint"]]],[11,"rem",E,E,3,[[["i16"]],["bigint"]]],[11,"rem",E,E,3,[[["isize"]],["bigint"]]],[11,"rem",E,E,3,[[["isize"]],["bigint"]]],[11,"rem",E,E,3,[[[R[1468]]],["bigint"]]],[11,"rem",E,E,7,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[1461]]],["bigint"]]],[11,"rem",E,E,8,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[1468]]],["bigint"]]],[11,"rem",E,E,7,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[1461]]],["bigint"]]],[11,"rem",E,E,8,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["i32"]],["bigint"]]],[11,"rem",E,E,3,[[["i64"]],["bigint"]]],[11,"rem",E,E,3,[[["i32"]],["bigint"]]],[11,"rem",E,E,3,[[["i64"]],["bigint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[[R[1468]]],["biguint"]]],[11,"sub",E,E,7,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[[R[1461]]],["biguint"]]],[11,"sub",E,E,8,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[[R[1468]]],["biguint"]]],[11,"sub",E,E,7,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[[R[1461]]],["biguint"]]],[11,"sub",E,E,8,[[["biguint"]],["biguint"]]],[11,"sub",E,E,3,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["u8"]],["bigint"]]],[11,"sub",E,E,3,[[["u8"]],["bigint"]]],[11,"sub",E,E,3,[[["u16"]],["bigint"]]],[11,"sub",E,E,3,[[["u16"]],["bigint"]]],[11,"sub",E,E,3,[[["usize"]],["bigint"]]],[11,"sub",E,E,3,[[["usize"]],["bigint"]]],[11,"sub",E,E,3,[[["i8"]],["bigint"]]],[11,"sub",E,E,3,[[["i8"]],["bigint"]]],[11,"sub",E,E,3,[[["i16"]],["bigint"]]],[11,"sub",E,E,3,[[["i16"]],["bigint"]]],[11,"sub",E,E,3,[[["isize"]],["bigint"]]],[11,"sub",E,E,3,[[["isize"]],["bigint"]]],[11,"sub",E,E,3,[[[R[1468]]],["bigint"]]],[11,"sub",E,E,7,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[1461]]],["bigint"]]],[11,"sub",E,E,8,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[1468]]],["bigint"]]],[11,"sub",E,E,7,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[1461]]],["bigint"]]],[11,"sub",E,E,8,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["i32"]],["bigint"]]],[11,"sub",E,E,3,[[["i64"]],["bigint"]]],[11,"sub",E,E,3,[[["i32"]],["bigint"]]],[11,"sub",E,E,3,[[["i64"]],["bigint"]]],[11,R[815],E,E,2,[[["str"]],[["biguint"],[R[1467]],[R[48],["biguint",R[1467]]]]]],[11,R[815],E,E,3,[[["str"]],[["bigint"],[R[48],["bigint",R[1467]]],[R[1467]]]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,7,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[[R[1468]]],["biguint"]]],[11,"add",E,E,7,[[["biguint"]],["biguint"]]],[11,"add",E,E,8,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[[R[1461]]],["biguint"]]],[11,"add",E,E,8,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[[R[1468]]],["biguint"]]],[11,"add",E,E,2,[[[R[1461]]],["biguint"]]],[11,"add",E,E,3,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[["u8"]],["bigint"]]],[11,"add",E,E,3,[[["u8"]],["bigint"]]],[11,"add",E,E,3,[[["u16"]],["bigint"]]],[11,"add",E,E,3,[[["u16"]],["bigint"]]],[11,"add",E,E,3,[[["usize"]],["bigint"]]],[11,"add",E,E,3,[[["usize"]],["bigint"]]],[11,"add",E,E,3,[[["i8"]],["bigint"]]],[11,"add",E,E,3,[[["i8"]],["bigint"]]],[11,"add",E,E,3,[[["i16"]],["bigint"]]],[11,"add",E,E,3,[[["i16"]],["bigint"]]],[11,"add",E,E,3,[[["isize"]],["bigint"]]],[11,"add",E,E,3,[[["isize"]],["bigint"]]],[11,"add",E,E,7,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[1468]]],["bigint"]]],[11,"add",E,E,7,[[["bigint"]],["bigint"]]],[11,"add",E,E,8,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[1461]]],["bigint"]]],[11,"add",E,E,8,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[1468]]],["bigint"]]],[11,"add",E,E,3,[[[R[1461]]],["bigint"]]],[11,"add",E,E,3,[[["i32"]],["bigint"]]],[11,"add",E,E,3,[[["i64"]],["bigint"]]],[11,"add",E,E,3,[[["i32"]],["bigint"]]],[11,"add",E,E,3,[[["i64"]],["bigint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,7,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[[R[1468]]],["biguint"]]],[11,"mul",E,E,7,[[["biguint"]],["biguint"]]],[11,"mul",E,E,8,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[[R[1461]]],["biguint"]]],[11,"mul",E,E,8,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[[R[1468]]],["biguint"]]],[11,"mul",E,E,2,[[[R[1461]]],["biguint"]]],[11,"mul",E,E,1,[[["sign"]],["sign"]]],[11,"mul",E,E,3,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[["u8"]],["bigint"]]],[11,"mul",E,E,3,[[["u8"]],["bigint"]]],[11,"mul",E,E,3,[[["u16"]],["bigint"]]],[11,"mul",E,E,3,[[["u16"]],["bigint"]]],[11,"mul",E,E,3,[[["usize"]],["bigint"]]],[11,"mul",E,E,3,[[["usize"]],["bigint"]]],[11,"mul",E,E,3,[[["i8"]],["bigint"]]],[11,"mul",E,E,3,[[["i8"]],["bigint"]]],[11,"mul",E,E,3,[[["i16"]],["bigint"]]],[11,"mul",E,E,3,[[["i16"]],["bigint"]]],[11,"mul",E,E,3,[[["isize"]],["bigint"]]],[11,"mul",E,E,3,[[["isize"]],["bigint"]]],[11,"mul",E,E,7,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[1468]]],["bigint"]]],[11,"mul",E,E,7,[[["bigint"]],["bigint"]]],[11,"mul",E,E,8,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[1461]]],["bigint"]]],[11,"mul",E,E,8,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[1468]]],["bigint"]]],[11,"mul",E,E,3,[[[R[1461]]],["bigint"]]],[11,"mul",E,E,3,[[["i32"]],["bigint"]]],[11,"mul",E,E,3,[[["i64"]],["bigint"]]],[11,"mul",E,E,3,[[["i32"]],["bigint"]]],[11,"mul",E,E,3,[[["i64"]],["bigint"]]],[11,"neg",E,E,2,[[],["biguint"]]],[11,"neg",E,R[1922],1,[[],["sign"]]],[11,"neg",E,E,3,[[],["bigint"]]],[11,R[804],E,E,2,[[["biguint"],["self"]]]],[11,R[804],E,E,2,[[["self"],["biguint"]]]],[11,R[804],E,E,2,[[["self"],["u8"]]]],[11,R[804],E,E,2,[[["u16"],["self"]]]],[11,R[804],E,E,2,[[["self"],["usize"]]]],[11,R[804],E,E,2,[[["self"],[R[1468]]]]],[11,R[804],E,E,2,[[[R[1461]],["self"]]]],[11,R[805],E,E,2,[[["biguint"],["self"]]]],[11,R[805],E,E,2,[[["biguint"],["self"]]]],[11,R[805],E,E,2,[[["self"],["u8"]]]],[11,R[805],E,E,2,[[["u16"],["self"]]]],[11,R[805],E,E,2,[[["self"],["usize"]]]],[11,R[805],E,E,2,[[["self"],[R[1468]]]]],[11,R[805],E,E,2,[[[R[1461]],["self"]]]],[11,R[806],E,E,2,[[["biguint"],["self"]]]],[11,R[806],E,E,2,[[["biguint"],["self"]]]],[11,R[806],E,E,2,[[["self"],["u8"]]]],[11,R[806],E,E,2,[[["u16"],["self"]]]],[11,R[806],E,E,2,[[["self"],["usize"]]]],[11,R[806],E,E,2,[[["self"],[R[1468]]]]],[11,R[806],E,E,2,[[[R[1461]],["self"]]]],[11,R[807],E,E,2,[[["biguint"],["self"]]]],[11,R[807],E,E,2,[[["biguint"],["self"]]]],[11,R[807],E,E,2,[[["self"],["u8"]]]],[11,R[807],E,E,2,[[["u16"],["self"]]]],[11,R[807],E,E,2,[[["self"],["usize"]]]],[11,R[807],E,E,2,[[["self"],[R[1468]]]]],[11,R[807],E,E,2,[[[R[1461]],["self"]]]],[11,R[808],E,E,2,[[["biguint"],["self"]]]],[11,R[808],E,E,2,[[["self"],["biguint"]]]],[11,R[808],E,E,2,[[["self"],["u8"]]]],[11,R[808],E,E,2,[[["u16"],["self"]]]],[11,R[808],E,E,2,[[["self"],["usize"]]]],[11,R[808],E,E,2,[[["self"],[R[1468]]]]],[11,R[808],E,E,2,[[[R[1461]],["self"]]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"shl",E,E,2,[[["usize"]],["biguint"]]],[11,"shl",E,E,3,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],["biguint"]]],[11,"shr",E,E,3,[[["usize"]],["bigint"]]],[11,R[1469],E,E,2,[[["biguint"],["self"]]]],[11,R[1469],E,E,2,[[["self"],["biguint"]]]],[11,R[1470],E,E,2,[[["biguint"],["self"]]]],[11,R[1470],E,E,2,[[["self"],["biguint"]]]],[11,R[1471],E,E,2,[[["biguint"],["self"]]]],[11,R[1471],E,E,2,[[["self"],["biguint"]]]],[11,"shl_assign",E,E,2,[[["self"],["usize"]]]],[11,"shr_assign",E,E,2,[[["self"],["usize"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,0,[[["self"]],["str"]]],[11,"encode",E,E,2,[[["__s"],["self"]],[R[48]]]],[11,"encode",E,E,1,[[["__s"],["self"]],[R[48]]]],[11,"encode",E,E,3,[[["__s"],["self"]],[R[48]]]],[11,"decode",E,E,2,[[["__d"]],[["biguint"],[R[48],["biguint"]]]]],[11,"decode",E,E,1,[[["__d"]],[[R[48],["sign"]],["sign"]]]],[11,"decode",E,E,3,[[["__d"]],[[R[48],["bigint"]],["bigint"]]]],[11,"div_rem",E,E,2,[[["self"],["biguint"]]]],[11,R[773],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[774],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[775],E,E,2,[[["self"],["biguint"]]]],[11,"gcd",E,R[1472],2,[[["self"],["biguint"]],["biguint"]]],[11,"lcm",E,R[1473],2,[[["self"],["biguint"]],["biguint"]]],[11,"divides",E,R[1474],2,[[["self"],["biguint"]],["bool"]]],[11,R[1475],E,R[1476],2,[[["self"],["biguint"]],["bool"]]],[11,"is_even",E,R[1477],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[1478],2,[[["self"]],["bool"]]],[11,"div_rem",E,E,3,[[["self"],["bigint"]]]],[11,R[773],E,E,3,[[["self"],["bigint"]],["bigint"]]],[11,R[774],E,E,3,[[["self"],["bigint"]],["bigint"]]],[11,R[775],E,E,3,[[["self"],["bigint"]]]],[11,"gcd",E,R[1472],3,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1473],3,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1474],3,[[["self"],["bigint"]],["bool"]]],[11,R[1475],E,R[1476],3,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1477],3,[[["self"]],["bool"]]],[11,"is_odd",E,R[1478],3,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],["biguint"]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"zero",E,E,3,[[],["bigint"]]],[11,"is_zero",E,E,3,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["biguint"]]],[11,"one",E,E,3,[[],["bigint"]]],[11,"abs",E,E,3,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,3,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,3,[[["self"]],["bigint"]]],[11,R[1483],E,E,3,[[["self"]],["bool"]]],[11,R[1484],E,E,3,[[["self"]],["bool"]]],[11,R[814],E,R[1438],2,[[["str"],["u32"]],[["biguint"],[R[1467]],[R[48],["biguint",R[1467]]]]]],[11,R[814],E,R[1479],3,[[["str"],["u32"]],[["bigint"],[R[48],["bigint",R[1467]]],[R[1467]]]]],[11,R[751],E,E,2,[[["self"],["biguint"]],[["biguint"],["option",["biguint"]]]]],[11,R[751],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[752],E,E,2,[[["self"],["biguint"]],[["biguint"],["option",["biguint"]]]]],[11,R[752],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[1480],E,E,2,[[["self"],["biguint"]],[["biguint"],["option",["biguint"]]]]],[11,R[1480],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,R[1481],E,E,2,[[["self"],["biguint"]],[["biguint"],["option",["biguint"]]]]],[11,R[1481],E,E,3,[[["self"],["bigint"]],[["option",["bigint"]],["bigint"]]]],[11,"to_i64",E,E,2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_u64",E,E,2,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"to_i64",E,E,3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_u64",E,E,3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,E,3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,3,[[["self"]],[["f64"],["option",["f64"]]]]],[11,R[1587],E,E,2,[[["i64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1588],E,E,2,[[["u64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1589],E,E,2,[[["f64"]],[["biguint"],["option",["biguint"]]]]],[11,R[1587],E,E,3,[[["i64"]],[["option",["bigint"]],["bigint"]]]],[11,R[1588],E,E,3,[[["u64"]],[["option",["bigint"]],["bigint"]]]],[11,R[1589],E,E,3,[[["f64"]],[["option",["bigint"]],["bigint"]]]]],"p":[[4,R[1482]],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,R[1923]],[8,"ToBigInt"],[8,R[1911]],[6,"BigDigit"],[6,R[1463]]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex",R[1801],N,N],[12,"re",E,R[1802],0,N],[12,"im",E,R[1803],0,N],[3,R[810],E,E,N,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[11,"new",E,R[1924],0,[[[T]],[R[802]]]],[11,"i",E,R[1925],0,[[],[R[802]]]],[11,"norm_sqr",E,R[1926],0,[[["self"]],[T]]],[11,"scale",E,R[1927],0,[[["self"],[T]],[R[802]]]],[11,"unscale",E,R[1928],0,[[["self"],[T]],[R[802]]]],[11,"conj",E,R[1929],0,[[["self"]],[R[802]]]],[11,"inv",E,R[1930],0,[[["self"]],[R[802]]]],[11,"norm",E,R[1931],0,[[["self"]],[T]]],[11,"arg",E,R[1932],0,[[["self"]],[T]]],[11,"to_polar",E,R[1933],0,[[["self"]]]],[11,"from_polar",E,R[1934],0,[[[T]],[R[802]]]],[11,"exp",E,R[1935],0,[[["self"]],[R[802]]]],[11,"ln",E,R[1936],0,[[["self"]],[R[802]]]],[11,"sqrt",E,R[1937],0,[[["self"]],[R[802]]]],[11,"powf",E,R[1938],0,[[["self"],[T]],[R[802]]]],[11,"log",E,R[1939],0,[[["self"],[T]],[R[802]]]],[11,"powc",E,R[1940],0,[[["self"],[R[802]]],[R[802]]]],[11,"expf",E,R[1941],0,[[["self"],[T]],[R[802]]]],[11,"sin",E,R[1942],0,[[["self"]],[R[802]]]],[11,"cos",E,R[1943],0,[[["self"]],[R[802]]]],[11,"tan",E,R[1944],0,[[["self"]],[R[802]]]],[11,"asin",E,R[1945],0,[[["self"]],[R[802]]]],[11,"acos",E,R[1946],0,[[["self"]],[R[802]]]],[11,"atan",E,R[1947],0,[[["self"]],[R[802]]]],[11,"sinh",E,R[1948],0,[[["self"]],[R[802]]]],[11,"cosh",E,R[1949],0,[[["self"]],[R[802]]]],[11,"tanh",E,R[1950],0,[[["self"]],[R[802]]]],[11,"asinh",E,R[1951],0,[[["self"]],[R[802]]]],[11,"acosh",E,R[1952],0,[[["self"]],[R[802]]]],[11,"atanh",E,R[1953],0,[[["self"]],[R[802]]]],[11,"is_nan",E,R[1954],0,[[],["bool"]]],[11,R[811],E,R[1955],0,[[],["bool"]]],[11,R[812],E,R[1956],0,[[],["bool"]]],[11,R[813],E,R[1957],0,[[],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"from",E,E,0,[[[T]],[R[802]]]],[11,"from",E,E,0,[[[T]],[R[802]]]],[11,"clone",E,E,0,[[["self"]],[R[802]]]],[11,R[744],E,E,0,[[],[R[802]]]],[11,"eq",E,E,0,[[["self"],[R[802]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[802]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[803]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[803]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"div",E,E,0,[[[R[802]]],[R[802]]]],[11,"div",E,E,0,[[[R[802]]],[R[802]]]],[11,"div",E,E,0,[[[T]],[R[802]]]],[11,"div",E,E,0,[[[T]],[R[802]]]],[11,"rem",E,E,0,[[[R[802]]],[R[802]]]],[11,"rem",E,E,0,[[[R[802]]],["self"]]],[11,"rem",E,E,0,[[[T]],[R[802]]]],[11,"rem",E,E,0,[[[T]],[R[802]]]],[11,"sub",E,E,0,[[[R[802]]],[R[802]]]],[11,"sub",E,E,0,[[[R[802]]],[R[802]]]],[11,"sub",E,E,0,[[[T]],[R[802]]]],[11,"sub",E,E,0,[[[T]],[R[802]]]],[11,R[815],E,R[809],0,[[["str"]],[R[48]]]],[11,"add",E,E,0,[[[R[802]]],[R[802]]]],[11,"add",E,E,0,[[[R[802]]],[R[802]]]],[11,"add",E,E,0,[[[T]],[R[802]]]],[11,"add",E,E,0,[[[T]],[R[802]]]],[11,"mul",E,E,0,[[[R[802]]],[R[802]]]],[11,"mul",E,E,0,[[[R[802]]],[R[802]]]],[11,"mul",E,E,0,[[[T]],[R[802]]]],[11,"mul",E,E,0,[[[T]],[R[802]]]],[11,"neg",E,E,0,[[],[R[802]]]],[11,R[804],E,E,0,[[["self"],[R[802]]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[804],E,E,0,[[["self"],[R[802]]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[805],E,E,0,[[["self"],[R[802]]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,R[805],E,E,0,[[["self"],[R[802]]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,R[806],E,E,0,[[["self"],[R[802]]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,R[806],E,E,0,[[["self"],[R[802]]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["self"],[R[802]]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["self"],[R[802]]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[808],E,E,0,[[["self"],[R[802]]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,R[808],E,E,0,[[["self"],[R[802]]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,1,[[["self"]],["str"]]],[11,"zero",E,E,0,[[],[R[802]]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],[R[802]]]],[11,R[814],E,R[809],0,[[["str"],["u32"]],[R[48]]]],[11,"encode",E,E,0,[[["__s"],["self"]],[R[48]]]],[11,"decode",E,E,0,[[["__d"]],[[R[48],[R[802]]],[R[802]]]]]],"p":[[3,"Complex"],[3,R[810]]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[776],"num_integer",R[1958],N,N],[5,"div_rem",E,R[1959],N,[[[R[772]]]]],[5,R[773],E,R[1960],N,[[[R[772]]],[R[772]]]],[5,R[774],E,R[1961],N,[[[R[772]]],[R[772]]]],[5,R[775],E,R[1962],N,[[[R[772]]]]],[5,"gcd",E,R[1472],N,[[[R[772]]],[R[772]]]],[5,"lcm",E,R[1473],N,[[[R[772]]],[R[772]]]],[5,"binomial",E,R[1963],N,[[[R[772]],["clone"]],[[R[772]],["clone"]]]],[5,R[1964],E,R[1965],N,[[],[[R[772]],["clone"]]]],[8,"Integer",E,E,N,N],[10,R[773],E,R[1804],0,[[["self"]],["self"]]],[10,R[774],E,R[1805],0,[[["self"]],["self"]]],[10,"gcd",E,R[1806],0,[[["self"]],["self"]]],[10,"lcm",E,R[1807],0,[[["self"]],["self"]]],[10,"divides",E,R[1474],0,[[["self"]],["bool"]]],[10,R[1475],E,R[1808],0,[[["self"]],["bool"]]],[10,"is_even",E,R[1809],0,[[["self"]],["bool"]]],[10,"is_odd",E,R[1810],0,[[["self"]],["bool"]]],[10,"div_rem",E,R[1811],0,[[["self"]]]],[11,R[775],E,R[1812],0,[[["self"]]]],[11,"new",E,R[1966],1,[[[T]],[R[1967]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[364],E,E,1,[[],["i"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"next",E,E,1,[[["self"]],["option"]]]],"p":[[8,"Integer"],[3,R[776]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[1968],N,N],[3,R[1436],E,R[1969],N,N],[3,R[1974],E,R[1970],N,N],[3,R[1437],E,R[1971],N,N],[5,"range",E,R[1813],N,[[["a"]],["range"]]],[5,R[1814],E,R[1815],N,[[["a"]],[R[1434]]]],[5,R[1972],E,R[1816],N,[[["a"]],[R[1973]]]],[5,R[1817],E,R[1818],N,[[["a"]],[R[1435]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[364],E,E,0,[[],["i"]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[364],E,E,1,[[],["i"]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[364],E,E,3,[[],["i"]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"next",E,E,0,[[["self"]],["option"]]],[11,R[425],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],["option"]]],[11,R[425],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],["option"]]],[11,"next",E,E,3,[[["self"]],["option"]]],[11,R[746],E,E,0,[[["self"]],["option"]]],[11,R[746],E,E,1,[[["self"]],["option"]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[1434]]]],[11,"clone",E,E,2,[[["self"]],[R[1973]]]],[11,"clone",E,E,3,[[["self"]],[R[1435]]]]],"p":[[3,"Range"],[3,R[1436]],[3,R[1974]],[3,R[1437]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational",R[1975],N,N],[3,R[1591],E,E,N,N],[6,"Rational",E,R[1884],N,N],[6,"Rational32",E,E,N,N],[6,"Rational64",E,E,N,N],[6,R[1885],E,R[1886],N,N],[11,"new",E,R[1976],0,[[[T]],["ratio"]]],[11,R[1977],E,R[1978],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[1979],0,[[[T]],["ratio"]]],[11,"to_integer",E,R[1980],0,[[["self"]],[T]]],[11,"numer",E,R[1981],0,[[["self"]],[T]]],[11,"denom",E,R[1982],0,[[["self"]],[T]]],[11,"is_integer",E,R[1983],0,[[["self"]],["bool"]]],[11,"reduced",E,R[1984],0,[[["self"]],["ratio"]]],[11,"recip",E,R[1985],0,[[["self"]],["ratio"]]],[11,"floor",E,R[1986],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[1987],0,[[["self"]],["ratio"]]],[11,"round",E,R[1988],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[1989],0,[[["self"]],["ratio"]]],[11,"fract",E,R[1990],0,[[["self"]],["ratio"]]],[11,"pow",E,R[1991],0,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1992],0,[[["float"]],[["option",[R[1585]]],[R[1585]]]]],[11,R[1993],E,E,0,[[["float"],["numcast"]],[["option",["ratio"]],["ratio"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[1586]]]],[11,"cmp",E,E,0,[[["self"]],[R[313]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1586]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1586]]],["bool"]]],[11,R[314],E,E,0,[[["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,R[1994],0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,R[815],E,R[1995],0,[[["str"]],[[R[48],["ratio",R[1586]]],["ratio"],[R[1586]]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[804],E,E,0,[[["self"],["ratio"]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[804],E,E,0,[[["ratio"],["self"]]]],[11,R[804],E,E,0,[[["self"],[T]]]],[11,R[805],E,E,0,[[["self"],["ratio"]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,R[805],E,E,0,[[["ratio"],["self"]]]],[11,R[805],E,E,0,[[["self"],[T]]]],[11,R[806],E,E,0,[[["self"],["ratio"]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,R[806],E,E,0,[[["ratio"],["self"]]]],[11,R[806],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["self"],["ratio"]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[807],E,E,0,[[["ratio"],["self"]]]],[11,R[807],E,E,0,[[["self"],[T]]]],[11,R[808],E,E,0,[[["self"],["ratio"]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,R[808],E,E,0,[[["ratio"],["self"]]]],[11,R[808],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,R[256],E,E,1,[[["self"]],["str"]]],[11,"encode",E,E,0,[[["__s"],["self"]],[R[48]]]],[11,"decode",E,E,0,[[["__d"]],[["ratio"],[R[48],["ratio"]]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["ratio"],["self"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[1483],E,E,0,[[["self"]],["bool"]]],[11,R[1484],E,E,0,[[["self"]],["bool"]]],[11,R[814],E,R[1996],0,[[["str"],["u32"]],[[R[48],["ratio",R[1586]]],["ratio"],[R[1586]]]]],[11,R[751],E,E,0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,R[752],E,E,0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,R[1480],E,E,0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,R[1481],E,E,0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]],[11,R[1587],E,E,0,[[["i64"]],["option"]]],[11,R[1588],E,E,0,[[["u64"]],["option"]]],[11,R[1590],E,E,0,[[["f32"]],["option"]]],[11,R[1589],E,E,0,[[["f64"]],["option"]]]],"p":[[3,"Ratio"],[3,R[1591]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[177],R[115],E,N,N],[12,"kind",E,E,0,N],[4,R[178],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[1883],N,[[[R[114]]],[R[114]]]],[0,"identities",E,E,N,N],[5,"zero","num_traits::identities",R[1824],N,[[],["zero"]]],[5,"one",E,R[1825],N,[[],["one"]]],[8,"Zero",E,R[1819],N,N],[10,"zero",E,R[1820],2,[[],["self"]]],[10,"is_zero",E,R[1821],2,[[["self"]],["bool"]]],[8,"One",E,R[1822],N,N],[10,"one",E,R[1823],3,[[],["self"]]],[0,"sign",R[115],E,N,N],[5,"abs","num_traits::sign",R[116],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[117],N,[[["signed"]],["signed"]]],[5,"signum",E,R[118],N,[[["signed"]],["signed"]]],[8,"Signed",E,R[1827],N,N],[10,"abs",E,R[116],4,[[["self"]],["self"]]],[10,"abs_sub",E,R[117],4,[[["self"]],["self"]]],[10,"signum",E,R[118],4,[[["self"]],["self"]]],[10,R[1483],E,R[1828],4,[[["self"]],["bool"]]],[10,R[1484],E,R[1829],4,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1830],N,N],[0,"ops",R[115],E,N,N],[0,"saturating",R[119],E,N,N],[8,R[179],"num_traits::ops::saturating",R[1831],N,N],[10,R[1832],E,R[1833],5,[[],["self"]]],[10,R[1834],E,R[1835],5,[[],["self"]]],[0,"checked",R[119],E,N,N],[8,R[180],"num_traits::ops::checked",R[1837],N,N],[10,R[751],E,R[1838],6,[[["self"]],["option"]]],[8,R[181],E,R[1839],N,N],[10,R[752],E,R[1840],7,[[["self"]],["option"]]],[8,R[182],E,R[1841],N,N],[10,R[1480],E,R[1842],8,[[["self"]],["option"]]],[8,R[183],E,R[1843],N,N],[10,R[1481],E,R[1844],9,[[["self"]],["option"]]],[8,R[184],E,R[1997],N,N],[10,R[1998],E,R[120],10,[[["u32"],["self"]],["option"]]],[8,R[185],E,R[1999],N,N],[10,R[2000],E,R[120],11,[[["u32"],["self"]],["option"]]],[0,"wrapping",R[119],E,N,N],[8,R[186],"num_traits::ops::wrapping",R[2001],N,N],[10,R[2002],E,R[2003],12,[[["self"]],["self"]]],[8,R[187],E,R[2004],N,N],[10,R[2005],E,R[2006],13,[[["self"]],["self"]]],[8,R[188],E,R[2007],N,N],[10,R[2008],E,R[2009],14,[[["self"]],["self"]]],[0,"bounds",R[115],E,N,N],[8,"Bounded","num_traits::bounds",R[1845],N,N],[10,R[121],E,R[1846],15,[[],["self"]]],[10,R[122],E,R[1847],15,[[],["self"]]],[0,"float",R[115],E,N,N],[8,"Float","num_traits::float",E,N,N],[10,"nan",E,R[1848],16,[[],["self"]]],[10,"infinity",E,R[1849],16,[[],["self"]]],[10,R[1850],E,R[1851],16,[[],["self"]]],[10,"neg_zero",E,R[1852],16,[[],["self"]]],[10,R[121],E,R[123],16,[[],["self"]]],[10,R[124],E,R[125],16,[[],["self"]]],[11,"epsilon",E,R[126],16,[[],["self"]]],[10,R[122],E,R[127],16,[[],["self"]]],[10,"is_nan",E,R[1853],16,[[],["bool"]]],[10,R[811],E,R[1854],16,[[],["bool"]]],[10,R[812],E,R[1855],16,[[],["bool"]]],[10,R[813],E,R[1856],16,[[],["bool"]]],[10,"classify",E,R[1857],16,[[],[R[2010]]]],[10,"floor",E,R[128],16,[[],["self"]]],[10,"ceil",E,R[129],16,[[],["self"]]],[10,"round",E,R[130],16,[[],["self"]]],[10,"trunc",E,R[131],16,[[],["self"]]],[10,"fract",E,R[132],16,[[],["self"]]],[10,"abs",E,R[133],16,[[],["self"]]],[10,"signum",E,R[134],16,[[],["self"]]],[10,R[135],E,R[136],16,[[],["bool"]]],[10,R[137],E,R[138],16,[[],["bool"]]],[10,"mul_add",E,R[139],16,[[],["self"]]],[10,"recip",E,R[140],16,[[],["self"]]],[10,"powi",E,R[141],16,[[["i32"]],["self"]]],[10,"powf",E,R[1858],16,[[],["self"]]],[10,"sqrt",E,R[142],16,[[],["self"]]],[10,"exp",E,R[143],16,[[],["self"]]],[10,"exp2",E,R[144],16,[[],["self"]]],[10,"ln",E,R[145],16,[[],["self"]]],[10,"log",E,R[146],16,[[],["self"]]],[10,"log2",E,R[147],16,[[],["self"]]],[10,"log10",E,R[148],16,[[],["self"]]],[11,R[149],E,R[150],16,[[],["self"]]],[11,R[151],E,R[152],16,[[],["self"]]],[10,"max",E,R[153],16,[[],["self"]]],[10,"min",E,R[154],16,[[],["self"]]],[10,"abs_sub",E,R[117],16,[[],["self"]]],[10,"cbrt",E,R[155],16,[[],["self"]]],[10,"hypot",E,R[156],16,[[],["self"]]],[10,"sin",E,R[157],16,[[],["self"]]],[10,"cos",E,R[158],16,[[],["self"]]],[10,"tan",E,R[159],16,[[],["self"]]],[10,"asin",E,R[160],16,[[],["self"]]],[10,"acos",E,R[161],16,[[],["self"]]],[10,"atan",E,R[162],16,[[],["self"]]],[10,"atan2",E,R[163],16,[[],["self"]]],[10,"sin_cos",E,R[164],16,[[]]],[10,"exp_m1",E,R[165],16,[[],["self"]]],[10,"ln_1p",E,R[166],16,[[],["self"]]],[10,"sinh",E,R[167],16,[[],["self"]]],[10,"cosh",E,R[168],16,[[],["self"]]],[10,"tanh",E,R[169],16,[[],["self"]]],[10,"asinh",E,R[170],16,[[],["self"]]],[10,"acosh",E,R[171],16,[[],["self"]]],[10,"atanh",E,R[172],16,[[],["self"]]],[10,R[1859],E,R[1860],16,[[]]],[8,R[189],E,E,N,N],[10,"E",E,R[2011],17,[[],["self"]]],[10,"FRAC_1_PI",E,R[2012],17,[[],["self"]]],[10,R[2013],E,R[2014],17,[[],["self"]]],[10,"FRAC_2_PI",E,R[2015],17,[[],["self"]]],[10,R[2016],E,R[2017],17,[[],["self"]]],[10,"FRAC_PI_2",E,R[2018],17,[[],["self"]]],[10,"FRAC_PI_3",E,R[2019],17,[[],["self"]]],[10,"FRAC_PI_4",E,R[2020],17,[[],["self"]]],[10,"FRAC_PI_6",E,R[2021],17,[[],["self"]]],[10,"FRAC_PI_8",E,R[2022],17,[[],["self"]]],[10,"LN_10",E,R[2023],17,[[],["self"]]],[10,"LN_2",E,R[2024],17,[[],["self"]]],[10,"LOG10_E",E,R[2025],17,[[],["self"]]],[10,"LOG2_E",E,R[2026],17,[[],["self"]]],[10,"PI",E,R[2027],17,[[],["self"]]],[10,"SQRT_2",E,R[2028],17,[[],["self"]]],[0,"real",R[115],E,N,N],[8,"Real","num_traits::real",R[2029],N,N],[10,R[121],E,R[123],18,[[],["self"]]],[10,R[124],E,R[125],18,[[],["self"]]],[10,"epsilon",E,R[126],18,[[],["self"]]],[10,R[122],E,R[127],18,[[],["self"]]],[10,"floor",E,R[128],18,[[],["self"]]],[10,"ceil",E,R[129],18,[[],["self"]]],[10,"round",E,R[130],18,[[],["self"]]],[10,"trunc",E,R[131],18,[[],["self"]]],[10,"fract",E,R[132],18,[[],["self"]]],[10,"abs",E,R[133],18,[[],["self"]]],[10,"signum",E,R[134],18,[[],["self"]]],[10,R[135],E,R[136],18,[[],["bool"]]],[10,R[137],E,R[138],18,[[],["bool"]]],[10,"mul_add",E,R[139],18,[[],["self"]]],[10,"recip",E,R[140],18,[[],["self"]]],[10,"powi",E,R[141],18,[[["i32"]],["self"]]],[10,"powf",E,R[2030],18,[[],["self"]]],[10,"sqrt",E,R[142],18,[[],["self"]]],[10,"exp",E,R[143],18,[[],["self"]]],[10,"exp2",E,R[144],18,[[],["self"]]],[10,"ln",E,R[145],18,[[],["self"]]],[10,"log",E,R[146],18,[[],["self"]]],[10,"log2",E,R[147],18,[[],["self"]]],[10,"log10",E,R[148],18,[[],["self"]]],[10,R[149],E,R[150],18,[[],["self"]]],[10,R[151],E,R[152],18,[[],["self"]]],[10,"max",E,R[153],18,[[],["self"]]],[10,"min",E,R[154],18,[[],["self"]]],[10,"abs_sub",E,R[117],18,[[],["self"]]],[10,"cbrt",E,R[155],18,[[],["self"]]],[10,"hypot",E,R[156],18,[[],["self"]]],[10,"sin",E,R[157],18,[[],["self"]]],[10,"cos",E,R[158],18,[[],["self"]]],[10,"tan",E,R[159],18,[[],["self"]]],[10,"asin",E,R[160],18,[[],["self"]]],[10,"acos",E,R[161],18,[[],["self"]]],[10,"atan",E,R[162],18,[[],["self"]]],[10,"atan2",E,R[163],18,[[],["self"]]],[10,"sin_cos",E,R[164],18,[[]]],[10,"exp_m1",E,R[165],18,[[],["self"]]],[10,"ln_1p",E,R[166],18,[[],["self"]]],[10,"sinh",E,R[167],18,[[],["self"]]],[10,"cosh",E,R[168],18,[[],["self"]]],[10,"tanh",E,R[169],18,[[],["self"]]],[10,"asinh",E,R[170],18,[[],["self"]]],[10,"acosh",E,R[171],18,[[],["self"]]],[10,"atanh",E,R[172],18,[[],["self"]]],[0,"cast",R[115],E,N,N],[5,"cast","num_traits::cast",R[1794],N,[[["numcast"]],[["option"],["numcast"]]]],[8,R[190],E,R[1779],N,N],[11,"to_isize",E,R[1780],19,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8",E,R[1781],19,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16",E,R[1782],19,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32",E,R[1783],19,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64",E,R[1784],19,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_usize",E,R[1785],19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8",E,R[1786],19,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,R[1787],19,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32",E,R[1788],19,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64",E,R[1789],19,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_f32",E,R[1790],19,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,R[1791],19,[[["self"]],[["f64"],["option",["f64"]]]]],[8,R[191],E,R[785],N,N],[11,R[786],E,R[787],20,[[["isize"]],["option"]]],[11,"from_i8",E,R[788],20,[[["i8"]],["option"]]],[11,"from_i16",E,R[789],20,[[["i16"]],["option"]]],[11,R[2031],E,R[790],20,[[["i32"]],["option"]]],[10,R[1587],E,R[791],20,[[["i64"]],["option"]]],[11,R[689],E,R[792],20,[[["usize"]],["option"]]],[11,"from_u8",E,R[793],20,[[["u8"]],["option"]]],[11,"from_u16",E,R[794],20,[[["u16"]],["option"]]],[11,R[795],E,R[796],20,[[["u32"]],["option"]]],[10,R[1588],E,R[797],20,[[["u64"]],["option"]]],[11,R[1590],E,R[798],20,[[["f32"]],["option"]]],[11,R[1589],E,R[799],20,[[["f64"]],["option"]]],[8,"NumCast",E,R[1792],N,N],[10,"from",E,R[1793],21,[[["toprimitive"]],["option"]]],[8,R[192],E,R[1861],N,N],[10,"as_",E,R[1862],22,[[],[T]]],[0,"int",R[115],E,N,N],[8,"PrimInt","num_traits::int",E,N,N],[10,R[2032],E,R[1863],23,[[],["u32"]]],[10,R[1864],E,R[1865],23,[[],["u32"]]],[10,R[1866],E,R[1867],23,[[],["u32"]]],[10,R[1868],E,R[1869],23,[[],["u32"]]],[10,R[1870],E,R[173],23,[[["u32"]],["self"]]],[10,R[1871],E,R[174],23,[[["u32"]],["self"]]],[10,R[2033],E,R[173],23,[[["u32"]],["self"]]],[10,R[2034],E,R[174],23,[[["u32"]],["self"]]],[10,R[1872],E,R[173],23,[[["u32"]],["self"]]],[10,R[1873],E,R[174],23,[[["u32"]],["self"]]],[10,R[2035],E,R[1874],23,[[],["self"]]],[10,"from_be",E,R[1875],23,[[],["self"]]],[10,"from_le",E,R[1876],23,[[],["self"]]],[10,"to_be",E,R[1877],23,[[],["self"]]],[10,"to_le",E,R[1878],23,[[],["self"]]],[10,"pow",E,R[1879],23,[[["u32"]],["self"]]],[0,"pow",R[115],E,N,N],[5,"pow","num_traits::pow",R[1795],N,[[["clone"],["usize"],["one"],["mul"]],[["clone"],["one"],["mul"]]]],[5,R[1796],E,R[1797],N,[[["clone"],[R[175]],["one"],["usize"]],[["clone"],["option"],["one"],[R[175]]]]],[8,"Num",R[115],R[1880],N,N],[16,R[1881],E,E,24,N],[10,R[814],E,R[1882],24,[[["str"],["u32"]],[R[48]]]],[8,"NumOps",E,R[2036],N,N],[8,"NumRef",E,R[2037],N,N],[8,"RefNum",E,R[2038],N,N],[8,R[2039],E,R[2040],N,N],[8,"NumAssign",E,R[2041],N,N],[8,R[2042],E,R[2043],N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]]],"p":[[3,R[177]],[4,R[178]],[8,"Zero"],[8,"One"],[8,"Signed"],[8,R[179]],[8,R[180]],[8,R[181]],[8,R[182]],[8,R[183]],[8,R[184]],[8,R[185]],[8,R[186]],[8,R[187]],[8,R[188]],[8,"Bounded"],[8,"Float"],[8,R[189]],[8,"Real"],[8,R[190]],[8,R[191]],[8,"NumCast"],[8,R[192]],[8,"PrimInt"],[8,"Num"]]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,R[1566],"png","Pixel dimensions information",N,N],[12,"xppu",E,"Pixels per unit, X axis",0,N],[12,"yppu",E,"Pixels per unit, Y axis",0,N],[12,"unit",E,"Either Meter or Unspecified",0,N],[3,R[1568],E,"Frame control information",N,N],[12,"sequence_number",E,"Sequence number of the animation chunk, starting from 0",1,N],[12,"width",E,"Width of the following frame",1,N],[12,"height",E,"Height of the following frame",1,N],[12,"x_offset",E,"X position at which to render the following frame",1,N],[12,"y_offset",E,"Y position at which to render the following frame",1,N],[12,"delay_num",E,"Frame delay fraction numerator",1,N],[12,"delay_den",E,"Frame delay fraction denominator",1,N],[12,"dispose_op",E,"Type of frame area disposal to be done after rendering…",1,N],[12,"blend_op",E,"Type of frame area rendering for this frame",1,N],[3,R[1567],E,"Animation control information",N,N],[12,"num_frames",E,"Number of frames",2,N],[12,"num_plays",E,"Number of times to loop this APNG. 0 indicates infinite…",2,N],[3,"Info",E,"PNG info struct",N,N],[12,"width",E,E,3,N],[12,"height",E,E,3,N],[12,"bit_depth",E,E,3,N],[12,R[2194],E,E,3,N],[12,R[2228],E,E,3,N],[12,"trns",E,E,3,N],[12,"pixel_dims",E,E,3,N],[12,"palette",E,E,3,N],[12,R[1577],E,E,3,N],[12,R[1575],E,E,3,N],[3,R[1583],E,"Output transformations",N,N],[3,R[391],E,"PNG Decoder",N,N],[3,"Reader",E,"PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo",E,"Output info",N,N],[12,"width",E,E,4,N],[12,"height",E,E,4,N],[12,R[2194],E,E,4,N],[12,"bit_depth",E,E,4,N],[12,"line_size",E,E,4,N],[3,R[962],E,"PNG StreamingDecoder (low-level interface)",N,N],[3,R[392],E,"PNG Encoder",N,N],[3,"Writer",E,"PNG writer",N,N],[4,R[2229],E,E,N,N],[13,"Grayscale",E,E,5,N],[13,"RGB",E,E,5,N],[13,"Indexed",E,E,5,N],[13,"GrayscaleAlpha",E,E,5,N],[13,"RGBA",E,E,5,N],[4,"BitDepth",E,"Bit depth of the png file",N,N],[13,"One",E,E,6,N],[13,"Two",E,E,6,N],[13,"Four",E,E,6,N],[13,"Eight",E,E,6,N],[13,"Sixteen",E,E,6,N],[4,"Unit",E,"Physical unit of the pixel dimensions",N,N],[13,"Unspecified",E,E,7,N],[13,"Meter",E,E,7,N],[4,"Decoded",E,"Result of the decoding process",N,N],[13,"Nothing",E,"Nothing decoded yet",8,N],[13,"Header",E,E,8,N],[13,"ChunkBegin",E,E,8,N],[13,"ChunkComplete",E,E,8,N],[13,R[1566],E,E,8,N],[13,R[1567],E,E,8,N],[13,R[1568],E,E,8,N],[13,"ImageData",E,"Decoded raw image data.",8,N],[13,"PartialChunk",E,E,8,N],[13,"ImageEnd",E,E,8,N],[4,R[958],E,E,N,N],[13,"IoError",E,E,9,N],[13,"Format",E,E,9,N],[13,"InvalidSignature",E,E,9,N],[13,"CrcMismatch",E,E,9,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",9,N],[12,"crc_val",E,"Stored CRC32 value",9,N],[12,"crc_sum",E,"Calculated CRC32 sum",9,N],[12,"chunk",E,E,9,N],[13,"Other","png",E,9,N],[13,"CorruptFlateStream",E,E,9,N],[4,R[1582],E,E,N,N],[13,"IoError",E,E,10,N],[13,"Format",E,E,10,N],[0,"chunk",E,"Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[[R[1569]]],["bool"]]],[5,"is_private",E,"Returns true if the chunk is private.",N,[[[R[1569]]],["bool"]]],[5,"reserved_set",E,"Checks whether the reserved bit of the chunk name is set.…",N,[[[R[1569]]],["bool"]]],[5,"safe_to_copy",E,"Returns true if the chunk is safe to copy if unknown.",N,[[[R[1569]]],["bool"]]],[6,"ChunkType",E,E,N,N],[17,"IHDR",E,"Image header",N,N],[17,"PLTE",E,"Palette",N,N],[17,"IDAT",E,"Image data",N,N],[17,"IEND",E,"Image trailer",N,N],[17,"tRNS",E,"Transparency",N,N],[17,"bKGD",E,"Background colour",N,N],[17,"tIME",E,"Image last-modification time",N,N],[17,"pHYs",E,"Physical pixel dimensions",N,N],[17,"acTL",E,"Animation control",N,N],[17,"fcTL",E,"Frame control",N,N],[17,"fdAT",E,"Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",11,[[],[R[953]]]],[11,"reset",E,"Resets the StreamingDecoder",11,[[["self"]]]],[11,"update",E,"Low level StreamingDecoder interface.",11,[[["self"]],[[R[948]],[R[48],[R[948]]]]]],[11,R[1570],E,"Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new",E,E,12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads all meta data until the first IDAT chunk",12,[[],[[R[48],[R[948]]],[R[948]]]]],[11,"info",E,E,13,[[["self"]],["info"]]],[11,"next_frame",E,"Decodes the next frame into `buf`",13,[[["self"]],[[R[48],[R[948]]],[R[948]]]]],[11,"next_row",E,R[1571],13,[[["self"]],[["option"],[R[948]],[R[48],["option",R[948]]]]]],[11,"next_interlaced_row",E,R[1571],13,[[["self"]],[[R[48],["option",R[948]]],["option"],[R[948]]]]],[11,"output_color_type",E,"Returns the color type and the number of bits per sample…",13,[[["self"]]]],[11,"output_buffer_size",E,R[1572],13,[[["self"]],["usize"]]],[11,"output_line_size",E,R[1572],13,[[["u32"],["self"]],["usize"]]],[11,"new",E,E,14,[[["w"],["u32"]],["encoder"]]],[11,"write_header",E,E,14,[[],[[R[48],["writer",R[1573]]],["writer"],[R[1573]]]]],[11,"write_chunk",E,E,15,[[["self"]],[[R[48],[R[1573]]],[R[1573]]]]],[11,"write_image_data",E,"Writes the image data.",15,[[["self"]],[[R[48],[R[1573]]],[R[1573]]]]],[11,"samples",E,"Returns the number of samples used per pixel of `ColorType`",5,[[["self"]],["usize"]]],[11,"from_u8",E,R[1574],5,[[["u8"]],[["option",[R[1581]]],[R[1581]]]]],[11,"from_u8",E,R[1574],6,[[["u8"]],[["option",["bitdepth"]],["bitdepth"]]]],[11,"from_u8",E,R[1574],7,[[["u8"]],[["option",["unit"]],["unit"]]]],[11,"size",E,"Size of the image",3,[[["self"]]]],[11,R[2202],E,"Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,R[1575],E,"Returns the frame control information of the image",3,[[["self"]],[["option",[R[1576]]],[R[1576]]]]],[11,R[1577],E,"Returns the frame control information of the current frame",3,[[["self"]],[[R[1578]],["option",[R[1578]]]]]],[11,"bits_per_pixel",E,"Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel",E,"Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes",E,R[1579],3,[[["self"]],["usize"]]],[11,"raw_row_length",E,"Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width",E,R[1579],3,[[["u32"],["self"]],["usize"]]],[18,"IDENTITY",E,"No transformation",16,N],[18,"STRIP_16",E,"Strip 16-bit samples to 8 bits",16,N],[18,"STRIP_ALPHA",E,"Discard the alpha channel",16,N],[18,"PACKING",E,"Expand 1; 2 and 4-bit samples to bytes",16,N],[18,"PACKSWAP",E,"Change order of packed pixels to LSB first",16,N],[18,"EXPAND",E,"Expand paletted images to RGB; expand grayscale images of…",16,N],[18,"INVERT_MONO",E,"Invert monochrome images",16,N],[18,"SHIFT",E,"Normalize pixels to the sBIT depth",16,N],[18,"BGR",E,"Flip RGB to BGR; RGBA to BGRA",16,N],[18,"SWAP_ALPHA",E,"Flip RGBA to ARGB or GA to AG",16,N],[18,"SWAP_ENDIAN",E,"Byte-swap 16-bit samples",16,N],[18,"INVERT_ALPHA",E,"Change alpha from opacity to transparency",16,N],[18,"STRIP_FILLER",E,E,16,N],[18,"STRIP_FILLER_BEFORE",E,E,16,N],[18,"STRIP_FILLER_AFTER",E,E,16,N],[18,"GRAY_TO_RGB",E,E,16,N],[18,"EXPAND_16",E,E,16,N],[18,"SCALE_16",E,E,16,N],[11,"empty",E,R[1007],16,[[],[R[1580]]]],[11,"all",E,R[1008],16,[[],[R[1580]]]],[11,"bits",E,R[1009],16,[[["self"]],["u32"]]],[11,R[1021],E,R[1010],16,[[["u32"]],[[R[1580]],["option",[R[1580]]]]]],[11,R[1011],E,R[1012],16,[[["u32"]],[R[1580]]]],[11,R[677],E,R[1013],16,[[["self"]],["bool"]]],[11,"is_all",E,R[1014],16,[[["self"]],["bool"]]],[11,R[1020],E,R[1015],16,[[["self"],[R[1580]]],["bool"]]],[11,R[801],E,R[1016],16,[[["self"],[R[1580]]],["bool"]]],[11,"insert",E,R[1017],16,[[["self"],[R[1580]]]]],[11,"remove",E,R[1018],16,[[["self"],[R[1580]]]]],[11,"toggle",E,R[1019],16,[[["self"],[R[1580]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",16,[[["bool"],["self"],[R[1580]]]]],[8,R[964],E,"Configuration parameter trait",N,N],[10,R[952],E,E,17,[[["object"]]]],[8,R[1584],E,"Object has parameters",N,N],[11,"set",E,E,18,[[["self"],[R[955]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[205],E,E,9,[[["self"]],["string"]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[205],E,E,10,[[["self"]],["string"]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,R[952],E,E,16,[[["decoder"]]]],[11,R[952],E,E,5,[[["encoder"]]]],[11,R[952],E,E,6,[[["encoder"]]]],[11,"drop",E,E,15,[[["self"]]]],[11,"from",E,E,9,[[["error"]],[R[948]]]],[11,"from",E,E,9,[[["string"]],[R[948]]]],[11,"from",E,E,10,[[["error"]],[R[1573]]]],[11,"extend",E,E,16,[[["self"],[R[400]]]]],[11,"clone",E,E,5,[[["self"]],[R[1581]]]],[11,"clone",E,E,6,[[["self"]],["bitdepth"]]],[11,"clone",E,E,0,[[["self"]],["pixeldimensions"]]],[11,"clone",E,E,7,[[["self"]],["unit"]]],[11,"clone",E,E,2,[[["self"]],[R[1576]]]],[11,"clone",E,E,16,[[["self"]],[R[1580]]]],[11,R[744],E,E,3,[[],["info"]]],[11,"cmp",E,E,16,[[["self"],[R[1580]]],[R[313]]]],[11,"eq",E,E,5,[[["self"],[R[1581]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["bitdepth"]],["bool"]]],[11,"eq",E,E,7,[[["unit"],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,R[314],E,E,16,[[["self"],[R[1580]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[1580]]],["bool"]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,"sub",E,R[1304],16,[[[R[1580]]],[R[1580]]]],[11,R[805],E,"Disables all flags enabled in the set.",16,[[["self"],[R[1580]]]]],[11,"not",E,R[1305],16,[[],[R[1580]]]],[11,"bitand",E,R[1306],16,[[[R[1580]]],[R[1580]]]],[11,"bitor",E,R[1307],16,[[[R[1580]]],[R[1580]]]],[11,"bitxor",E,R[1308],16,[[[R[1580]]],[R[1580]]]],[11,R[1469],E,"Disables all flags disabled in the set.",16,[[["self"],[R[1580]]]]],[11,R[1470],E,"Adds the set of flags.",16,[[["self"],[R[1580]]]]],[11,R[1471],E,"Toggles the set of flags.",16,[[["self"],[R[1580]]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,R[784],E,E,16,[[[R[400]]],[R[1580]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,16,[[[R[176]],["self"]],[R[48]]]],[11,R[256],E,E,9,[[["self"]],["str"]]],[11,R[256],E,E,10,[[["self"]],["str"]]],[11,"set",E,E,18,[[["self"],[R[955]]],["self"]]]],"p":[[3,R[1566]],[3,R[1568]],[3,R[1567]],[3,"Info"],[3,"OutputInfo"],[4,R[2229]],[4,"BitDepth"],[4,"Unit"],[4,"Decoded"],[4,R[958]],[4,R[1582]],[3,R[962]],[3,R[391]],[3,"Reader"],[3,R[392]],[3,"Writer"],[3,R[1583]],[8,R[964]],[8,R[1584]]]};
searchIndex["quote"]={"doc":"Quasi-quoting without a Syntex dependency, intended for…","i":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",N,N],[3,"ByteStr",E,"Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",N,N],[12,"0",E,E,0,N],[3,"Hex",E,"Wrap an integer so it interpolates as a hexadecimal.",N,N],[12,"0",E,E,1,N],[3,"Ident",E,"An identifier that should be interpolated without quotes.",N,N],[11,"new",E,"Empty tokens.",2,[[],["self"]]],[11,"append",E,R[373],2,[[["str"],["self"],["asref",["str"]]]]],[11,"append_all",E,R[373],2,[[["self"],["i"]]]],[11,"append_separated",E,R[373],2,[[["str"],["self"],["i"],["asref",["str"]]]]],[11,"append_terminated",E,R[373],2,[[["str"],["self"],["i"],["asref",["str"]]]]],[11,"as_str",E,E,2,[[["self"]],["str"]]],[11,"into_string",E,E,2,[[],["string"]]],[11,"parse",E,E,2,[[["self"]],[[R[48]],["fromstr"]]]],[11,"new",E,E,3,[[["into",["ident"]],["ident"]],["self"]]],[8,"ToTokens",E,"Types that can be interpolated inside a `quote!(...)`…",N,N],[10,R[374],E,"Write `self` to the given `Tokens`.",4,[[["self"],["tokens"]]]],[14,"quote",E,"The whole point.",N,N],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[205],E,E,2,[[["self"]],["string"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,R[374],E,E,0,[[["self"],["tokens"]]]],[11,R[374],E,E,2,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,3,[[["self"],["tokens"]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,"as_ref",E,E,3,[[["self"]],["str"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"from",E,E,3,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,E,3,[[["string"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["tokens"]]],[11,"clone",E,E,3,[[["self"]],["ident"]]],[11,R[744],E,E,2,[[],["self"]]],[11,"eq",E,E,2,[[["self"],["tokens"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["tokens"]],["bool"]]],[11,"eq",E,E,3,[[[T],["self"]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]]],"p":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[3,R[771],"rand",R[766],N,N],[3,R[735],E,R[767],N,N],[3,R[736],E,R[765],N,N],[3,R[739],E,"An Xorshift[1] random number generator.",N,N],[3,R[740],E,"Iterator which will generate a stream of random items.",N,N],[3,R[741],E,"Iterator which will continuously generate random ascii…",N,N],[3,"Open01",E,R[699],N,N],[12,"0",E,E,0,N],[3,"Closed01",E,R[699],N,N],[12,"0",E,E,1,N],[3,"StdRng",E,"The standard RNG. This is designed to be efficient on the…",N,N],[3,R[742],E,"The thread-local RNG.",N,N],[5,"weak_rng",E,"Create a weak random number generator with a default…",N,[[],[R[703]]]],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[726]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],["rand"]]],[5,"sample",E,"DEPRECATED: use `seq::sample_iter` instead.",N,[[["i"],["usize"],["r"]],["vec"]]],[0,"distributions",E,"Sampling from random distributions.",N,N],[3,R[733],R[700],"A wrapper for generating types that implement `Rand` via…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",2,N],[12,"item",E,"The actual item which is being weighted",2,N],[3,R[734],E,"A distribution that selects from a finite collection of…",N,N],[0,"range",E,"Generating numbers between two others.",N,N],[3,"Range",R[704],"Sample values uniformly between two bounds.",N,N],[8,R[728],E,"The helper trait for types that have a sensible way to…",N,N],[10,"construct_range",E,"Construct the `Range` object that `sample_range` requires.…",3,[[],["range"]]],[10,"sample_range",E,"Sample a value from the given `Range` with the given `Rng`…",3,[[["range"],["r"]],["self"]]],[11,"new",E,"Create a new `Range` instance that samples uniformly from…",4,[[["x"]],["range"]]],[0,"gamma",R[700],"The Gamma and derived distributions.",N,N],[3,"Gamma",R[705],"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[729],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",5,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",6,[[["f64"]],[R[723]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",7,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",8,[[["f64"]],["studentt"]]],[0,"normal",R[700],"The normal and derived distributions.",N,N],[3,R[730],R[706],"A wrapper around an `f64` to generate N(0, 1) random…",N,N],[12,"0",E,E,9,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[731],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",10,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",11,[[["f64"]],[R[725]]]],[0,"exponential",R[700],"The exponential distribution.",N,N],[3,"Exp1",R[707],"A wrapper around an `f64` to generate Exp(1) random numbers.",N,N],[12,"0",E,E,12,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",13,[[["f64"]],["exp"]]],[8,"Sample",R[700],"Types that can be used to create a random instance of…",N,N],[10,"sample",E,"Generate a random value of `Support`, using `rng` as the…",14,[[["self"],["r"]],["support"]]],[8,R[732],E,"`Sample`s that do not require keeping track of state.",N,N],[10,R[712],E,"Generate a random value.",15,[[["self"],["r"]],["support"]]],[11,"new",E,E,16,[[],["randsample"]]],[11,"new",E,"Create a new `WeightedChoice`.",17,[[],["weightedchoice"]]],[0,"jitter","rand","Non-physical true random number generator based on timing…",N,N],[3,R[770],R[768],"A true random number generator based on jitter in the CPU…",N,N],[4,R[769],E,"An error that can occur when `test_timer` fails.",N,N],[13,"NoTimer",E,"No timer available.",18,N],[13,"CoarseTimer",E,"Timer too coarse to use as an entropy source.",18,N],[13,"NotMonotonic",E,"Timer is not monotonically increasing.",18,N],[13,"TinyVariantions",E,"Variations of deltas of time too small.",18,N],[13,"TooManyStuck",E,"Too many stuck results (indicating no added entropy).",18,N],[11,"new",E,"Create a new `JitterRng`. Makes use of `std::time` for a…",19,[[],[[R[763]],[R[764]],[R[48],[R[763],R[764]]]]]],[11,"new_with_timer",E,"Create a new `JitterRng`. A custom timer can be supplied,…",19,[[],[R[763]]]],[11,"set_rounds",E,"Configures how many rounds are used to generate each…",19,[[["self"],["u32"]]]],[11,"test_timer",E,"Basic quality tests on the timer, by measuring CPU timing…",19,[[["self"]],[["u32"],[R[764]],[R[48],["u32",R[764]]]]]],[11,"timer_stats",E,"Statistical test: return the timer delta of one normal run…",19,[[["self"],["bool"]],["i64"]]],[0,"os","rand","Interfaces to the operating system provided random number…",N,N],[3,"OsRng",R[718],"A random number generator that retrieves randomness…",N,N],[11,"new",E,"Create a new `OsRng`.",20,[[],[[R[48],["osrng"]],["osrng"]]]],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",N,N],[3,"ReadRng",R[711],"An RNG that reads random bytes straight from a `Read`.…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",21,[[["r"]],["readrng"]]],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it…",N,N],[3,R[737],R[710],"A wrapper around any RNG which reseeds the underlying RNG…",N,N],[12,"reseeder",E,"Controls the behaviour when reseeding the RNG.",22,N],[3,R[743],E,"Reseed an RNG using a `Default` instance. This reseeds by…",N,N],[8,"Reseeder",E,"Something that can be used to reseed an RNG via…",N,N],[10,"reseed",E,"Reseed the given RNG.",23,[[["self"],["r"]]]],[11,"new",E,"Create a new `ReseedingRng` with the given parameters.",22,[[["rsdr"],["u64"],["r"]],[R[722]]]],[11,"reseed_if_necessary",E,"Reseed the internal RNG if the number of bytes that have…",22,[[["self"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["i"],["usize"],["r"]],[[R[48],["vec","vec"]],["vec"]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["usize"],["r"]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["usize"],["r"]],[["vec"],[T]]]],[5,"sample_indices",E,"Randomly sample exactly `amount` indices from `0..length`.",N,[[["usize"],["r"]],[["usize"],["vec",["usize"]]]]],[0,"chacha","rand","The ChaCha random number generator.",N,N],[3,R[736],R[709],R[765],N,N],[0,"isaac","rand","The ISAAC random number generator.",N,N],[3,R[771],R[708],R[766],N,N],[3,R[735],E,R[767],N,N],[11,R[701],"rand","Create an ChaCha random number generator using the default…",24,[[],[R[714]]]],[11,"set_counter",E,"Sets the internal 128-bit ChaCha counter to a…",24,[[["self"],["u64"]]]],[11,R[701],E,"Create an ISAAC random number generator using the default…",25,[[],[R[720]]]],[11,R[701],E,"Create a 64-bit ISAAC random number generator using the…",26,[[],[R[713]]]],[11,R[701],E,"Creates a new XorShiftRng instance which is not seeded.",27,[[],[R[703]]]],[8,"Rand",E,"A type that can be randomly generated using an `Rng`.",N,N],[10,"rand",E,"Generates a random instance of this type using the…",28,[[["r"]],["self"]]],[8,"Rng",E,"A random number generator.",N,N],[10,R[715],E,"Return the next random u32.",29,[[["self"]],["u32"]]],[11,R[716],E,"Return the next random u64.",29,[[["self"]],["u64"]]],[11,"next_f32",E,"Return the next random f32 selected from the half-open…",29,[[["self"]],["f32"]]],[11,"next_f64",E,"Return the next random f64 selected from the half-open…",29,[[["self"]],["f64"]]],[11,R[717],E,"Fill `dest` with random data.",29,[[["self"]]]],[11,"gen",E,"Return a random value of a `Rand` type.",29,[[["self"]],["rand"]]],[11,"gen_iter",E,"Return an iterator that will yield an infinite number of…",29,[[["self"]],[["rand"],["generator"]]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`).",29,[[[R[114]],[R[702]],["self"]],[[R[702]],[R[114]]]]],[11,"gen_weighted_bool",E,"Return a bool with a 1 in n chance of true",29,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars",E,"Return an iterator of random characters from the set…",29,[[["self"]],["asciigenerator"]]],[11,"choose",E,"Return a random element from `values`.",29,[[["self"]],[["option"],[T]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",29,[[["self"]],[[T],["option"]]]],[11,"shuffle",E,"Shuffle a mutable slice in place.",29,[[["self"]]]],[8,R[738],E,"A random number generator that can be explicitly seeded to…",N,N],[10,"reseed",E,"Reseed an RNG with the given seed.",30,[[["self"],["seed"]]]],[10,R[719],E,"Create a new RNG with the given seed.",30,[[["seed"]],["self"]]],[11,"new",E,"Create a randomly seeded instance of `StdRng`.",31,[[],[[R[48],["stdrng"]],["stdrng"]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"],[T]]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"],[T]]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[43],E,E,27,[[["self"]],[T]]],[11,R[44],E,E,27,[[["self"],[T]]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[364],E,E,32,[[],["i"]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[364],E,E,33,[[],["i"]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[44],E,E,31,[[["self"],[T]]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",R[700],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",R[704],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",R[705],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",R[706],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",R[707],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",R[768],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[205],E,E,18,[[["self"]],["string"]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",R[718],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",R[711],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",R[710],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[44],E,E,35,[[["self"],[T]]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"sample",R[704],E,4,[[["self"],["r"]],["sup"]]],[11,"sample",R[705],E,5,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,6,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,7,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,8,[[["self"],["r"]],["f64"]]],[11,"sample",R[706],E,10,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,11,[[["self"],["r"]],["f64"]]],[11,"sample",R[707],E,13,[[["self"],["r"]],["f64"]]],[11,"sample",R[700],E,16,[[["self"],["r"]],["sup"]]],[11,"sample",E,E,17,[[["self"],["r"]],[T]]],[11,R[712],R[704],E,4,[[["self"],["r"]],["sup"]]],[11,R[712],R[705],E,5,[[["self"],["r"]],["f64"]]],[11,R[712],E,E,6,[[["self"],["r"]],["f64"]]],[11,R[712],E,E,7,[[["self"],["r"]],["f64"]]],[11,R[712],E,E,8,[[["self"],["r"]],["f64"]]],[11,R[712],R[706],E,10,[[["self"],["r"]],["f64"]]],[11,R[712],E,E,11,[[["self"],["r"]],["f64"]]],[11,R[712],R[707],E,13,[[["self"],["r"]],["f64"]]],[11,R[712],R[700],E,16,[[["self"],["r"]],["sup"]]],[11,R[712],E,E,17,[[["self"],["r"]],[T]]],[11,"reseed",R[710],E,35,[[["self"],["r"]]]],[11,"rand",R[706],E,9,[[["r"]],[R[724]]]],[11,"rand",R[707],E,12,[[["r"]],["exp1"]]],[11,"rand","rand",E,0,[[["r"]],[["open01",["f64"]],["f64"]]]],[11,"rand",E,E,1,[[["r"]],[["f64"],["closed01",["f64"]]]]],[11,"rand",E,E,0,[[["r"]],[["f32"],["open01",["f32"]]]]],[11,"rand",E,E,1,[[["r"]],[["closed01",["f32"]],["f32"]]]],[11,"rand",E,E,24,[[["r"]],[R[714]]]],[11,"rand",E,E,25,[[["r"]],[R[720]]]],[11,"rand",E,E,26,[[["r"]],[R[713]]]],[11,"rand",E,E,27,[[["r"]],[R[703]]]],[11,R[715],R[768],E,19,[[["self"]],["u32"]]],[11,R[716],E,E,19,[[["self"]],["u64"]]],[11,R[717],E,E,19,[[["self"]]]],[11,R[715],R[718],E,20,[[["self"]],["u32"]]],[11,R[716],E,E,20,[[["self"]],["u64"]]],[11,R[717],E,E,20,[[["self"]]]],[11,R[715],R[711],E,21,[[["self"]],["u32"]]],[11,R[716],E,E,21,[[["self"]],["u64"]]],[11,R[717],E,E,21,[[["self"]]]],[11,R[715],R[710],E,22,[[["self"]],["u32"]]],[11,R[716],E,E,22,[[["self"]],["u64"]]],[11,R[717],E,E,22,[[["self"]]]],[11,R[715],"rand",E,24,[[["self"]],["u32"]]],[11,R[715],E,E,25,[[["self"]],["u32"]]],[11,R[715],E,E,26,[[["self"]],["u32"]]],[11,R[716],E,E,26,[[["self"]],["u64"]]],[11,R[715],E,E,27,[[["self"]],["u32"]]],[11,R[715],E,E,31,[[["self"]],["u32"]]],[11,R[716],E,E,31,[[["self"]],["u64"]]],[11,R[715],E,E,34,[[["self"]],["u32"]]],[11,R[716],E,E,34,[[["self"]],["u64"]]],[11,R[717],E,E,34,[[["self"]]]],[11,"reseed",R[710],E,22,[[["self"]]]],[11,R[719],E,"Create a new `ReseedingRng` from the given reseeder and…",22,[[],[R[722]]]],[11,"reseed","rand",E,24,[[["self"]]]],[11,R[719],E,"Create a ChaCha generator from a seed, obtained from a…",24,[[],[R[714]]]],[11,"reseed",E,E,25,[[["self"]]]],[11,R[719],E,R[721],25,[[],[R[720]]]],[11,"reseed",E,E,26,[[["self"]]]],[11,R[719],E,R[721],26,[[],[R[713]]]],[11,"reseed",E,"Reseed an XorShiftRng. This will panic if `seed` is…",27,[[["self"]]]],[11,R[719],E,"Create a new XorShiftRng. This will panic if `seed` is…",27,[[],[R[703]]]],[11,"reseed",E,E,31,[[["self"]]]],[11,R[719],E,E,31,[[],["stdrng"]]],[11,"next",E,E,32,[[["self"]],["option"]]],[11,"next",E,E,33,[[["self"]],[["option",["char"]],["char"]]]],[11,"clone",R[704],E,4,[[["self"]],["range"]]],[11,"clone",R[705],E,5,[[["self"]],["gamma"]]],[11,"clone",E,E,6,[[["self"]],[R[723]]]],[11,"clone",E,E,7,[[["self"]],["fisherf"]]],[11,"clone",E,E,8,[[["self"]],["studentt"]]],[11,"clone",R[706],E,9,[[["self"]],[R[724]]]],[11,"clone",E,E,10,[[["self"]],["normal"]]],[11,"clone",E,E,11,[[["self"]],[R[725]]]],[11,"clone",R[707],E,12,[[["self"]],["exp1"]]],[11,"clone",E,E,13,[[["self"]],["exp"]]],[11,"clone",R[700],E,16,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["weighted"]]],[11,"clone",R[768],E,18,[[["self"]],[R[764]]]],[11,"clone",R[710],E,35,[[["self"]],[R[727]]]],[11,"clone","rand",E,24,[[["self"]],[R[714]]]],[11,"clone",E,E,25,[[["self"]],[R[720]]]],[11,"clone",E,E,26,[[["self"]],[R[713]]]],[11,"clone",E,E,27,[[["self"]],[R[703]]]],[11,"clone",E,E,31,[[["self"]],["stdrng"]]],[11,"clone",E,E,34,[[["self"]],[R[726]]]],[11,R[744],R[710],E,35,[[],[R[727]]]],[11,"eq",R[768],E,18,[[[R[764]],["self"]],["bool"]]],[11,"fmt",E,E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[704],E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[705],E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[706],E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[707],E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[700],E,16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,17,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[768],E,19,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[718],E,20,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[711],E,21,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[710],E,22,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,35,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","rand",E,24,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,25,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,26,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,27,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,32,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,33,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,31,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,34,[[["self"],[R[176]]],[R[48]]]],[11,R[256],R[768],E,18,[[["self"]],["str"]]]],"p":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,R[728]],[3,"Range"],[3,"Gamma"],[3,R[729]],[3,"FisherF"],[3,"StudentT"],[3,R[730]],[3,"Normal"],[3,R[731]],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,R[732]],[3,R[733]],[3,R[734]],[4,R[769]],[3,R[770]],[3,"OsRng"],[3,"ReadRng"],[3,R[737]],[8,"Reseeder"],[3,R[736]],[3,R[771]],[3,R[735]],[3,R[739]],[8,"Rand"],[8,"Rng"],[8,R[738]],[3,"StdRng"],[3,R[740]],[3,R[741]],[3,R[742]],[3,R[743]]]};
searchIndex["rayon"]={"doc":E,"i":[[5,R[1486],"rayon",R[1739],N,[[],["usize"]]],[3,R[1491],E,R[1735],N,N],[5,R[1740],E,R[1741],N,[[[R[1485]]],[[R[48],["box"]],["box",["error"]]]]],[3,R[1490],E,R[1490],N,N],[5,"join",E,R[1736],N,[[["a"],["b"]]]],[5,"scope",E,R[1737],N,[[["op"]],["r"]]],[3,"Scope",E,R[1734],N,N],[5,"spawn",E,R[1738],N,[[["f"]]]],[5,"split",E,R[1691],N,[[["d"],["s"]],["split"]]],[0,"collections",E,R[1687],N,N],[0,"binary_heap",R[1686],"This module contains the parallel iterator types for heaps…",N,N],[3,R[1690],R[1703],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[1686],R[1687],N,N],[3,R[1690],R[1704],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[1688],N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[1686],R[1687],N,N],[3,R[1690],R[1705],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[1688],N,N],[0,"hash_map",R[1686],R[1689],N,N],[3,R[1690],R[1706],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[1686],R[1689],N,N],[3,R[1690],R[1707],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[1686],R[1687],N,N],[3,R[1690],R[1708],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[1686],R[1687],N,N],[3,R[1690],R[1709],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","The `ParallelIterator` module makes it easy to write…",N,N],[3,"Chain",R[1693],"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,E,N,N],[3,"Rev",E,E,N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"WhileSome",E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[4,"Either",E,"Represents a value of one of two possible types.",N,N],[13,"Left",E,E,0,N],[13,"Right",E,E,0,N],[5,"split",E,R[1691],N,[[["d"],["s"]],["split"]]],[0,"internal",E,"Internal traits and functions used to implement parallel…",N,N],[5,"bridge","rayon::iter::internal",E,N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,E,N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,E,N,[[["c"],["p"]]]],[8,R[1719],E,E,N,N],[16,"Output",E,E,1,N],[10,"callback",E,E,1,[[["p"]]]],[8,"Producer",E,"A producer which will produce a fixed number of items N.…",N,N],[16,"Item",E,E,2,N],[16,R[1690],E,E,2,N],[10,R[364],E,E,2,[[]]],[11,"min_len",E,E,2,[[["self"]],["usize"]]],[11,"max_len",E,E,2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[1692],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer which consumes items that are fed to it.",N,N],[16,"Folder",E,E,3,N],[16,"Reducer",E,E,3,N],[16,"Result",E,E,3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,E,N,N],[16,"Result",E,E,4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,E,N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[48]]],[R[48]]]],[8,R[1720],E,"A stateless consumer can be freely copied.",N,N],[10,"split_off_left",E,E,6,[[["self"]],["self"]]],[10,"to_reducer",E,E,6,[[["self"]]]],[8,R[1721],E,"An unindexed producer that doesn't know its exact length.…",N,N],[16,"Item",E,E,7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[1692],7,[[["f"]],["f"]]],[8,R[1722],R[1693],E,N,N],[16,"Iter",E,E,8,N],[16,"Item",E,E,8,N],[10,R[1702],E,E,8,[[]]],[8,R[1723],E,E,N,N],[16,"Iter",E,E,9,N],[16,"Item",E,E,9,N],[10,"par_iter",E,E,9,[[["self"]]]],[8,R[1724],E,E,N,N],[16,"Iter",E,E,10,N],[16,"Item",E,E,10,N],[10,"par_iter_mut",E,E,10,[[["self"]]]],[8,R[1725],E,"The `ParallelIterator` interface.",N,N],[16,"Item",E,E,11,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",11,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",11,[[["op"],[T]]]],[11,"count",E,"Counts the number of items in this parallel iterator.",11,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",11,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",11,[[[T],["f"]],["mapwith"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",11,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",11,[[["op"]],["inspect"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",11,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",11,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",11,[[["f"]],["flatmap"]]],[11,"reduce",E,R[1694],11,[[["op"],["id"]]]],[11,"reduce_with",E,R[1694],11,[[["op"]],["option"]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",11,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",11,[[[T],["f"]],["foldwith"]]],[11,"sum",E,"Sums up the items in the iterator.",11,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",11,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",11,[[],["option"]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",11,[[["f"]],["option"]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",11,[[["f"]],["option"]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",11,[[],["option"]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",11,[[["f"]],["option"]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",11,[[["f"]],["option"]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",11,[[["c"]],["chain"]]],[11,"find_any",E,R[1695],11,[[["p"]],["option"]]],[11,"find_first",E,R[1699],11,[[["p"]],["option"]]],[11,"find_last",E,R[1700],11,[[["p"]],["option"]]],[11,"any",E,R[1695],11,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",11,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",11,[[],["whilesome"]]],[11,"collect",E,"Create a fresh collection containing all the element…",11,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",11,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",11,[[["p"]]]],[11,"partition_map",E,"Partitions and maps the items of a parallel iterator into…",11,[[["p"]]]],[10,R[1714],E,R[1696],11,[[["c"]]]],[11,"opt_len",E,R[1696],11,[[["self"]],[["option",["usize"]],["usize"]]]],[8,R[1726],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into",E,"Collects the results of the iterator into the specified…",12,[[["vec"]]]],[11,"unzip_into",E,"Unzips the results of the iterator into the specified…",12,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",12,[[["z"]],["zip"]]],[11,"cmp",E,R[1697],12,[[["i"]],[R[313]]]],[11,R[314],E,R[1697],12,[[["i"]],[["option",[R[313]]],[R[313]]]]],[11,"eq",E,R[1698],12,[[["i"]],["bool"]]],[11,"ne",E,R[1698],12,[[["i"]],["bool"]]],[11,"lt",E,R[1698],12,[[["i"]],["bool"]]],[11,"le",E,R[1698],12,[[["i"]],["bool"]]],[11,"gt",E,R[1698],12,[[["i"]],["bool"]]],[11,"ge",E,R[1698],12,[[["i"]],["bool"]]],[11,"enumerate",E,"Yields an index along with each item.",12,[[],["enumerate"]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",12,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",12,[[["usize"]],["take"]]],[11,"position_any",E,R[1695],12,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_first",E,R[1699],12,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_last",E,R[1700],12,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",12,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",12,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",12,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",12,[[["self"]],["usize"]]],[10,"drive",E,R[1696],12,[[[R[1718]]]]],[10,R[1717],E,R[1696],12,[[["producercallback"]]]],[8,R[1727],E,"`FromParallelIterator` implements the conversion from a…",N,N],[10,"from_par_iter",E,E,13,[[["i"]],["self"]]],[8,R[1728],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,E,14,[[["self"],["i"]]]],[0,"option","rayon",R[1687],N,N],[3,R[1690],R[1710],"Parallel iterator over an option",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to an option",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to an option",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[0,"range",E,R[1687],N,N],[3,"Iter",R[1711],"Parallel iterator over a range",N,N],[0,R[48],"rayon",R[1687],N,N],[3,R[1690],R[1712],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon",R[1687],N,N],[3,"Iter",R[1713],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut",E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[1729],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",15,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",15,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",15,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[1701],15,[[["self"],["usize"]],["chunks"]]],[8,R[1730],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",16,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",16,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[1701],16,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",16,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",16,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",16,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",16,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",16,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",16,[[["self"],["f"]]]],[0,"str","rayon","This module contains extension methods for `String` that…",N,N],[3,"Chars",R[1715],"Parallel iterator over the characters of a string",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[1732],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[1733],E,"Parallel iterator over substrings separated by whitespace",N,N],[8,R[1731],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",17,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",17,[[["self"]],["chars"]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",17,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",17,[[["self"],["pattern"]],[["splitterminator"],["pattern"]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",17,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",17,[[["self"]],["splitwhitespace"]]],[0,"vec","rayon",R[1687],N,N],[3,R[1690],R[1716],"Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon",E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,R[1702],R[1703],E,21,[[],[T]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,R[1702],E,E,22,[[],[T]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,R[1702],R[1704],E,23,[[],[T]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,R[1702],E,E,24,[[],[T]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,R[1702],E,E,25,[[],[T]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,R[1702],R[1705],E,26,[[],[T]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,R[1702],E,E,27,[[],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,R[1702],R[1706],E,28,[[],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,R[1702],E,E,29,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,R[1702],E,E,30,[[],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,R[1702],R[1707],E,31,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,R[1702],E,E,32,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,R[1702],R[1708],E,33,[[],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,R[1702],E,E,34,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,R[1702],E,E,35,[[],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,R[1702],R[1709],E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,R[1702],E,E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,R[1702],E,E,38,[[],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,R[1702],R[1693],E,39,[[],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,R[1702],E,E,40,[[],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,R[1702],E,E,41,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,R[1702],E,E,42,[[],[T]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,R[1702],E,E,43,[[],[T]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,R[1702],E,E,44,[[],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,R[1702],E,E,45,[[],[T]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,R[1702],E,E,46,[[],[T]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,R[1702],E,E,47,[[],[T]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,R[1702],E,E,48,[[],[T]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,R[1702],E,E,49,[[],[T]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[45],E,E,49,[[[U]],[R[48]]]],[11,R[46],E,E,49,[[],[R[48]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[51]]]],[11,R[1702],E,E,50,[[],[T]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[45],E,E,50,[[[U]],[R[48]]]],[11,R[46],E,E,50,[[],[R[48]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[51]]]],[11,R[1702],E,E,51,[[],[T]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[45],E,E,51,[[[U]],[R[48]]]],[11,R[46],E,E,51,[[],[R[48]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[51]]]],[11,R[1702],E,E,52,[[],[T]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[45],E,E,52,[[[U]],[R[48]]]],[11,R[46],E,E,52,[[],[R[48]]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[["self"]],[R[51]]]],[11,R[1702],E,E,53,[[],[T]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[45],E,E,53,[[[U]],[R[48]]]],[11,R[46],E,E,53,[[],[R[48]]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[["self"]],[R[51]]]],[11,R[1702],E,E,54,[[],[T]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[45],E,E,54,[[[U]],[R[48]]]],[11,R[46],E,E,54,[[],[R[48]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[51]]]],[11,R[1702],E,E,55,[[],[T]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[45],E,E,55,[[[U]],[R[48]]]],[11,R[46],E,E,55,[[],[R[48]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[51]]]],[11,R[1702],E,E,56,[[],[T]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[45],E,E,56,[[[U]],[R[48]]]],[11,R[46],E,E,56,[[],[R[48]]]],[11,R[50],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"]],[T]]],[11,R[49],E,E,56,[[["self"]],[R[51]]]],[11,R[1702],E,E,57,[[],[T]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[45],E,E,57,[[[U]],[R[48]]]],[11,R[46],E,E,57,[[],[R[48]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,R[1702],R[1710],E,58,[[],[T]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[45],E,E,58,[[[U]],[R[48]]]],[11,R[46],E,E,58,[[],[R[48]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[51]]]],[11,R[1702],E,E,59,[[],[T]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[45],E,E,59,[[[U]],[R[48]]]],[11,R[46],E,E,59,[[],[R[48]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[51]]]],[11,R[1702],E,E,60,[[],[T]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[45],E,E,60,[[[U]],[R[48]]]],[11,R[46],E,E,60,[[],[R[48]]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[["self"]],[R[51]]]],[11,R[1702],R[1711],E,61,[[],[T]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[45],E,E,61,[[[U]],[R[48]]]],[11,R[46],E,E,61,[[],[R[48]]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[["self"]],[R[51]]]],[11,R[1702],R[1712],E,62,[[],[T]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[45],E,E,62,[[[U]],[R[48]]]],[11,R[46],E,E,62,[[],[R[48]]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"]],[T]]],[11,R[49],E,E,62,[[["self"]],[R[51]]]],[11,R[1702],E,E,63,[[],[T]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[45],E,E,63,[[[U]],[R[48]]]],[11,R[46],E,E,63,[[],[R[48]]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[["self"]],[R[51]]]],[11,R[1702],E,E,64,[[],[T]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[45],E,E,64,[[[U]],[R[48]]]],[11,R[46],E,E,64,[[],[R[48]]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[["self"]],[R[51]]]],[11,R[1702],R[1713],E,65,[[],[T]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[45],E,E,65,[[[U]],[R[48]]]],[11,R[46],E,E,65,[[],[R[48]]]],[11,R[50],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"]],[T]]],[11,R[49],E,E,65,[[["self"]],[R[51]]]],[11,R[1702],E,E,66,[[],[T]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[45],E,E,66,[[[U]],[R[48]]]],[11,R[46],E,E,66,[[],[R[48]]]],[11,R[50],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[["self"]],[R[51]]]],[11,R[1702],E,E,67,[[],[T]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[45],E,E,67,[[[U]],[R[48]]]],[11,R[46],E,E,67,[[],[R[48]]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[["self"]],[R[51]]]],[11,R[1702],E,E,68,[[],[T]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[45],E,E,68,[[[U]],[R[48]]]],[11,R[46],E,E,68,[[],[R[48]]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[["self"]],[R[51]]]],[11,R[1702],E,E,69,[[],[T]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[45],E,E,69,[[[U]],[R[48]]]],[11,R[46],E,E,69,[[],[R[48]]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[["self"]],[R[51]]]],[11,R[1702],E,E,70,[[],[T]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[45],E,E,70,[[[U]],[R[48]]]],[11,R[46],E,E,70,[[],[R[48]]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[["self"]],[R[51]]]],[11,R[1702],E,E,71,[[],[T]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[45],E,E,71,[[[U]],[R[48]]]],[11,R[46],E,E,71,[[],[R[48]]]],[11,R[50],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[["self"]],[R[51]]]],[11,R[1702],R[1715],E,72,[[],[T]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[45],E,E,72,[[[U]],[R[48]]]],[11,R[46],E,E,72,[[],[R[48]]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[["self"]],[R[51]]]],[11,R[1702],E,E,73,[[],[T]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[45],E,E,73,[[[U]],[R[48]]]],[11,R[46],E,E,73,[[],[R[48]]]],[11,R[50],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"]],[T]]],[11,R[49],E,E,73,[[["self"]],[R[51]]]],[11,R[1702],E,E,74,[[],[T]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[45],E,E,74,[[[U]],[R[48]]]],[11,R[46],E,E,74,[[],[R[48]]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[["self"]],[R[51]]]],[11,R[1702],E,E,75,[[],[T]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[45],E,E,75,[[[U]],[R[48]]]],[11,R[46],E,E,75,[[],[R[48]]]],[11,R[50],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"]],[T]]],[11,R[49],E,E,75,[[["self"]],[R[51]]]],[11,R[1702],E,E,76,[[],[T]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[45],E,E,76,[[[U]],[R[48]]]],[11,R[46],E,E,76,[[],[R[48]]]],[11,R[50],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"]],[T]]],[11,R[49],E,E,76,[[["self"]],[R[51]]]],[11,R[1702],R[1716],E,77,[[],[T]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[45],E,E,77,[[[U]],[R[48]]]],[11,R[46],E,E,77,[[],[R[48]]]],[11,R[50],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"]],[T]]],[11,R[49],E,E,77,[[["self"]],[R[51]]]],[11,"drop","rayon",E,19,[[["self"]]]],[11,R[744],E,E,18,[[],[R[1485]]]],[11,"fmt",E,E,18,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,19,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"fmt",E,E,20,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,R[1714],R[1703],E,21,[[["c"]]]],[11,"opt_len",E,E,21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,22,[[["c"]]]],[11,"opt_len",E,E,22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1704],E,23,[[["c"]]]],[11,"opt_len",E,E,23,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,24,[[["c"]]]],[11,"opt_len",E,E,24,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,25,[[["c"]]]],[11,"opt_len",E,E,25,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1705],E,26,[[["c"]]]],[11,"opt_len",E,E,26,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1706],E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1707],E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1708],E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1709],E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1693],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,41,[[["c"]]]],[11,R[1714],E,E,42,[[["c"]]]],[11,R[1714],E,E,43,[[["c"]]]],[11,R[1714],E,E,44,[[["c"]]]],[11,R[1714],E,E,45,[[["c"]]]],[11,R[1714],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,47,[[["c"]]]],[11,R[1714],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,49,[[["c"]]]],[11,"opt_len",E,E,49,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,50,[[["c"]]]],[11,"opt_len",E,E,50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,51,[[["c"]]]],[11,"opt_len",E,E,51,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,52,[[["c"]]]],[11,"opt_len",E,E,52,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,53,[[["c"]]]],[11,"opt_len",E,E,53,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,54,[[["c"]]]],[11,"opt_len",E,E,54,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,55,[[["c"]]]],[11,"opt_len",E,E,55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,56,[[["c"]]]],[11,"opt_len",E,E,56,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,57,[[["c"]]]],[11,R[1714],R[1710],E,58,[[["c"]]]],[11,"opt_len",E,E,58,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1711],E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,R[1714],E,E,61,[[["c"]]]],[11,R[1714],R[1712],E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],R[1713],E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1714],E,E,70,[[["c"]]]],[11,R[1714],E,E,71,[[["c"]]]],[11,R[1714],R[1715],E,72,[[["c"]]]],[11,R[1714],E,E,73,[[["c"]]]],[11,R[1714],E,E,74,[[["c"]]]],[11,R[1714],E,E,75,[[["c"]]]],[11,R[1714],E,E,76,[[["c"]]]],[11,R[1714],R[1716],E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive",R[1703],E,21,[[["c"]]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,R[1717],E,E,21,[[["cb"]]]],[11,"drive",E,E,22,[[["c"]]]],[11,"len",E,E,22,[[["self"]],["usize"]]],[11,R[1717],E,E,22,[[["cb"]]]],[11,"drive",R[1709],E,36,[[["c"]]]],[11,"len",E,E,36,[[["self"]],["usize"]]],[11,R[1717],E,E,36,[[["cb"]]]],[11,"drive",E,E,37,[[["c"]]]],[11,"len",E,E,37,[[["self"]],["usize"]]],[11,R[1717],E,E,37,[[["cb"]]]],[11,"drive",E,E,38,[[["c"]]]],[11,"len",E,E,38,[[["self"]],["usize"]]],[11,R[1717],E,E,38,[[["cb"]]]],[11,"drive",R[1693],E,39,[[["c"]]]],[11,"len",E,E,39,[[["self"]],["usize"]]],[11,R[1717],E,E,39,[[["cb"]]]],[11,"drive",E,E,40,[[[R[1718]]]]],[11,"len",E,E,40,[[["self"]],["usize"]]],[11,R[1717],E,E,40,[[["cb"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,"drive",E,E,46,[[[R[1718]]]]],[11,R[1717],E,E,46,[[["cb"]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,"drive",E,E,48,[[[R[1718]]]]],[11,R[1717],E,E,48,[[["cb"]]]],[11,"drive",E,E,49,[[["c"]]]],[11,"len",E,E,49,[[["self"]],["usize"]]],[11,R[1717],E,E,49,[[["cb"]]]],[11,"drive",E,E,50,[[["c"]]]],[11,"len",E,E,50,[[["self"]],["usize"]]],[11,R[1717],E,E,50,[[["cb"]]]],[11,"drive",E,E,51,[[["c"]]]],[11,"len",E,E,51,[[["self"]],["usize"]]],[11,R[1717],E,E,51,[[["cb"]]]],[11,"drive",E,E,52,[[[R[1718]]]]],[11,"len",E,E,52,[[["self"]],["usize"]]],[11,R[1717],E,E,52,[[["cb"]]]],[11,"drive",E,E,53,[[[R[1718]]]]],[11,"len",E,E,53,[[["self"]],["usize"]]],[11,R[1717],E,E,53,[[["cb"]]]],[11,"drive",E,E,54,[[[R[1718]]]]],[11,"len",E,E,54,[[["self"]],["usize"]]],[11,R[1717],E,E,54,[[["cb"]]]],[11,"drive",E,E,55,[[["c"]]]],[11,"len",E,E,55,[[["self"]],["usize"]]],[11,R[1717],E,E,55,[[["cb"]]]],[11,"drive",E,E,56,[[["c"]]]],[11,"len",E,E,56,[[["self"]],["usize"]]],[11,R[1717],E,E,56,[[["cb"]]]],[11,"drive",R[1710],E,58,[[["c"]]]],[11,"len",E,E,58,[[["self"]],["usize"]]],[11,R[1717],E,E,58,[[["cb"]]]],[11,"drive",E,E,59,[[["c"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,R[1717],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[1717],E,E,60,[[["cb"]]]],[11,"drive",R[1711],E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1717],E,E,61,[[["cb"]]]],[11,"drive",R[1712],E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[1717],E,E,62,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[1717],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[1717],E,E,64,[[["cb"]]]],[11,"drive",R[1713],E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[1717],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[1717],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[1717],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[1717],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[["c"]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[1717],E,E,69,[[["cb"]]]],[11,"drive",R[1716],E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[1717],E,E,77,[[["cb"]]]],[11,"new","rayon",R[1751],18,[[],[R[1485]]]],[11,"build",E,R[1752],18,[[],[[R[1489]],[R[48],[R[1489],"box"]],["box",["error"]]]]],[11,R[1753],E,R[1754],18,[[["f"]],[R[1485]]]],[11,R[1755],E,R[1756],18,[[["usize"]],[R[1485]]]],[11,R[1757],E,R[1758],18,[[["h"]],[R[1485]]]],[11,"stack_size",E,R[1759],18,[[["usize"]],[R[1485]]]],[11,R[1760],E,R[1761],18,[[],[R[1485]]]],[11,R[1762],E,R[1763],18,[[["h"]],[R[1485]]]],[11,R[1764],E,R[1765],18,[[["h"]],[R[1485]]]],[11,"new",E,R[1743],19,[[[R[1485]]],[[R[1489]],[R[48],[R[1489],"box"]],["box",["error"]]]]],[11,"install",E,R[1744],19,[[["op"],["self"]],["r"]]],[11,R[1486],E,R[1745],19,[[["self"]],["usize"]]],[11,R[1487],E,R[1746],19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1488],E,R[1747],19,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join",E,R[1748],19,[[["a"],["self"],["b"]]]],[11,"scope",E,R[1749],19,[[["op"],["self"]],["r"]]],[11,"spawn",E,R[1750],19,[[["op"],["self"]]]],[11,"spawn",E,R[1742],20,[[["self"],["body"]]]]],"p":[[4,"Either"],[8,R[1719]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[1720]],[8,R[1721]],[8,R[1722]],[8,R[1723]],[8,R[1724]],[8,R[1725]],[8,R[1726]],[8,R[1727]],[8,R[1728]],[8,R[1729]],[8,R[1730]],[8,R[1731]],[3,R[1491]],[3,R[1490]],[3,"Scope"],[3,R[1690]],[3,"Iter"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,R[1690]],[3,"Iter"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,R[1690]],[3,"Iter"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,"Chain"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Fold"],[3,"FoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"Zip"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,R[1690]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"Split"],[3,R[1732]],[3,"Lines"],[3,R[1733]],[3,R[1690]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[1490],"rayon_core",R[1490],N,N],[3,"Scope",E,R[1734],N,N],[3,R[1491],E,R[1735],N,N],[3,"FnContext",E,"Provides the calling context to a closure called by…",N,N],[5,R[1487],E,"If called from a Rayon worker thread, returns the index of…",N,[[],[["option",["usize"]],["usize"]]]],[5,R[1488],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[["option",["bool"]],["bool"]]]],[5,"join",E,R[1736],N,[[["a"],["b"]]]],[5,"join_context",E,"The `join_context` function is identical to `join`, except…",N,[[["a"],["b"]]]],[5,"scope",E,R[1737],N,[[["op"]],["r"]]],[5,"spawn",E,R[1738],N,[[["f"]]]],[5,R[1486],E,R[1739],N,[[],["usize"]]],[5,R[1740],E,R[1741],N,[[[R[1485]]],[[R[48],["box"]],["box",["error"]]]]],[11,"spawn",E,R[1742],0,[[["self"],["body"]]]],[11,"new",E,R[1743],1,[[[R[1485]]],[[R[48],[R[1489],"box"]],[R[1489]],["box",["error"]]]]],[11,"install",E,R[1744],1,[[["op"],["self"]],["r"]]],[11,R[1486],E,R[1745],1,[[["self"]],["usize"]]],[11,R[1487],E,R[1746],1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[1488],E,R[1747],1,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join",E,R[1748],1,[[["a"],["self"],["b"]]]],[11,"scope",E,R[1749],1,[[["op"],["self"]],["r"]]],[11,"spawn",E,R[1750],1,[[["op"],["self"]]]],[11,"new",E,R[1751],2,[[],[R[1485]]]],[11,"build",E,R[1752],2,[[],[[R[48],[R[1489],"box"]],[R[1489]],["box",["error"]]]]],[11,R[1753],E,R[1754],2,[[["f"]],["self"]]],[11,R[1755],E,R[1756],2,[[["usize"]],[R[1485]]]],[11,R[1757],E,R[1758],2,[[["h"]],[R[1485]]]],[11,"stack_size",E,R[1759],2,[[["usize"]],["self"]]],[11,R[1760],E,R[1761],2,[[],["self"]]],[11,R[1762],E,R[1763],2,[[["h"]],[R[1485]]]],[11,R[1764],E,R[1765],2,[[["h"]],[R[1485]]]],[11,"migrated",E,"Returns `true` if the closure was called from a different…",3,[[["self"]],["bool"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"drop",E,E,1,[[["self"]]]],[11,R[744],E,E,2,[[],[R[1485]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]]],"p":[[3,"Scope"],[3,R[1490]],[3,R[1491]],[3,"FnContext"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[1592],"regex",R[1593],N,N],[3,R[1594],E,R[1595],N,N],[3,"RegexSet",E,R[1606],N,N],[3,R[1684],E,R[1607],N,N],[3,R[1608],E,R[1609],N,N],[3,R[1610],E,R[1611],N,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,"Match",E,R[1596],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,R[1602],E,R[1603],N,N],[3,"Matches",E,R[1597],N,N],[3,R[1598],E,R[1599],N,N],[3,R[1604],E,R[1605],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Split",E,R[1600],N,N],[3,"SplitN",E,R[1601],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[1685],N,[[["str"]],["string"]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[1592],R[1627],R[1593],N,N],[3,R[1594],E,R[1595],N,N],[3,"Match",E,R[1596],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[1597],N,N],[3,R[1598],E,R[1599],N,N],[3,"Split",E,R[1600],N,N],[3,"SplitN",E,R[1601],N,N],[3,R[1602],E,R[1603],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[1604],E,R[1605],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[1606],N,N],[3,R[1684],E,R[1607],N,N],[3,R[1608],E,R[1609],N,N],[3,R[1610],E,R[1611],N,N],[8,"Replacer",E,R[1677],N,N],[10,R[1678],E,R[1679],3,[[["vec"],["self"],[R[1654]]]]],[11,R[1633],E,R[1634],3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"new",E,R[1613],4,[[["str"]],[R[1612]]]],[11,"build",E,R[1614],4,[[["self"]],[["error"],[R[48],["regex","error"]],["regex"]]]],[11,R[1615],E,R[1616],4,[[["self"],["bool"]],[R[1612]]]],[11,R[1629],E,R[1617],4,[[["self"],["bool"]],[R[1612]]]],[11,R[1618],E,R[1619],4,[[["self"],["bool"]],[R[1612]]]],[11,R[1630],E,R[1620],4,[[["self"],["bool"]],[R[1612]]]],[11,R[1621],E,R[1622],4,[[["self"],["bool"]],[R[1612]]]],[11,"unicode",E,R[1623],4,[[["self"],["bool"]],[R[1612]]]],[11,R[1631],E,R[1624],4,[[["self"],["usize"]],[R[1612]]]],[11,R[1625],E,R[1626],4,[[["self"],["usize"]],[R[1612]]]],[11,"new","regex",R[1613],5,[[["str"]],[R[1612]]]],[11,"build",E,R[1614],5,[[["self"]],[["regex"],["error"],[R[48],["regex","error"]]]]],[11,R[1615],E,R[1616],5,[[["self"],["bool"]],[R[1612]]]],[11,R[1629],E,R[1617],5,[[["self"],["bool"]],[R[1612]]]],[11,R[1618],E,R[1619],5,[[["self"],["bool"]],[R[1612]]]],[11,R[1630],E,R[1620],5,[[["self"],["bool"]],[R[1612]]]],[11,R[1621],E,R[1622],5,[[["self"],["bool"]],[R[1612]]]],[11,"unicode",E,R[1623],5,[[["self"],["bool"]],[R[1612]]]],[11,R[1631],E,R[1624],5,[[["self"],["usize"]],[R[1612]]]],[11,R[1625],E,R[1626],5,[[["self"],["usize"]],[R[1612]]]],[11,"new",R[1627],R[1613],6,[[["i"]],[R[1628]]]],[11,"build",E,R[1632],6,[[["self"]],[["error"],[R[48],[R[1636],"error"]],[R[1636]]]]],[11,R[1615],E,R[1616],6,[[["self"],["bool"]],[R[1628]]]],[11,R[1629],E,R[1617],6,[[["self"],["bool"]],[R[1628]]]],[11,R[1618],E,R[1619],6,[[["self"],["bool"]],[R[1628]]]],[11,R[1630],E,R[1620],6,[[["self"],["bool"]],[R[1628]]]],[11,R[1621],E,R[1622],6,[[["self"],["bool"]],[R[1628]]]],[11,"unicode",E,R[1623],6,[[["self"],["bool"]],[R[1628]]]],[11,R[1631],E,R[1624],6,[[["self"],["usize"]],[R[1628]]]],[11,R[1625],E,R[1626],6,[[["self"],["usize"]],[R[1628]]]],[11,"new","regex",R[1613],7,[[["i"]],[R[1628]]]],[11,"build",E,R[1632],7,[[["self"]],[[R[48],[R[1636],"error"]],["error"],[R[1636]]]]],[11,R[1615],E,R[1616],7,[[["self"],["bool"]],[R[1628]]]],[11,R[1629],E,R[1617],7,[[["self"],["bool"]],[R[1628]]]],[11,R[1618],E,R[1619],7,[[["self"],["bool"]],[R[1628]]]],[11,R[1630],E,R[1620],7,[[["self"],["bool"]],[R[1628]]]],[11,R[1621],E,R[1622],7,[[["self"],["bool"]],[R[1628]]]],[11,"unicode",E,R[1623],7,[[["self"],["bool"]],[R[1628]]]],[11,R[1631],E,R[1624],7,[[["self"],["usize"]],[R[1628]]]],[11,R[1625],E,R[1626],7,[[["self"],["usize"]],[R[1628]]]],[11,R[1633],R[1627],R[1634],3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"start",E,R[1646],8,[[["self"]],["usize"]]],[11,"end",E,R[1647],8,[[["self"]],["usize"]]],[11,"as_bytes",E,R[1648],8,[[["self"]]]],[11,"new",E,R[1649],9,[[["str"]],[["error"],[R[48],["regex","error"]],["regex"]]]],[11,"is_match",E,R[1650],9,[[["self"]],["bool"]]],[11,"find",E,R[1651],9,[[["self"]],[["option",["match"]],["match"]]]],[11,"find_iter",E,R[1652],9,[[["self"]],["matches"]]],[11,R[1654],E,R[1653],9,[[["self"]],[["option",[R[1654]]],[R[1654]]]]],[11,R[1655],E,R[1656],9,[[["self"]],[R[1657]]]],[11,"split",E,R[1658],9,[[["self"]],["split"]]],[11,"splitn",E,R[1659],9,[[["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1660],9,[[["replacer"],["self"]],["cow"]]],[11,R[1661],E,R[1662],9,[[["replacer"],["self"]],["cow"]]],[11,"replacen",E,R[1663],9,[[["replacer"],["usize"],["self"]],["cow"]]],[11,R[1664],E,R[1665],9,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"as_str",E,R[1666],9,[[["self"]],["str"]]],[11,R[1667],E,R[1668],9,[[["self"]],[R[1669]]]],[11,R[1670],E,R[1671],9,[[["self"]],["usize"]]],[11,"get",E,R[1672],10,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name",E,R[1673],10,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter",E,R[1605],10,[[["self"]],[R[1674]]]],[11,"expand",E,R[1675],10,[[["vec"],["self"]]]],[11,"len",E,R[1676],10,[[["self"]],["usize"]]],[11,"new","regex",R[1635],11,[[["i"]],[[R[48],[R[1636],"error"]],["error"],[R[1636]]]]],[11,"is_match",E,R[1637],11,[[["str"],["self"]],["bool"]]],[11,"matches",E,R[1638],11,[[["str"],["self"]],[R[1680]]]],[11,"len",E,R[1639],11,[[["self"]],["usize"]]],[11,R[1640],E,R[1641],12,[[["self"]],["bool"]]],[11,"matched",E,R[1642],12,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1643],12,[[["self"]],["usize"]]],[11,"iter",E,R[1644],12,[[["self"]],[R[1645]]]],[11,"new",R[1627],R[1635],13,[[["i"]],[["error"],[R[48],[R[1636],"error"]],[R[1636]]]]],[11,"is_match",E,R[1637],13,[[["self"]],["bool"]]],[11,"matches",E,R[1638],13,[[["self"]],[R[1680]]]],[11,"len",E,R[1639],13,[[["self"]],["usize"]]],[11,R[1640],E,R[1641],14,[[["self"]],["bool"]]],[11,"matched",E,R[1642],14,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1643],14,[[["self"]],["usize"]]],[11,"iter",E,R[1644],14,[[["self"]],[R[1645]]]],[11,"start","regex",R[1646],15,[[["self"]],["usize"]]],[11,"end",E,R[1647],15,[[["self"]],["usize"]]],[11,"as_str",E,R[1648],15,[[["self"]],["str"]]],[11,"new",E,R[1649],16,[[["str"]],[["regex"],["error"],[R[48],["regex","error"]]]]],[11,"is_match",E,R[1650],16,[[["str"],["self"]],["bool"]]],[11,"find",E,R[1651],16,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter",E,R[1652],16,[[["str"],["self"]],["matches"]]],[11,R[1654],E,R[1653],16,[[["str"],["self"]],[["option",[R[1654]]],[R[1654]]]]],[11,R[1655],E,R[1656],16,[[["str"],["self"]],[R[1657]]]],[11,"split",E,R[1658],16,[[["str"],["self"]],["split"]]],[11,"splitn",E,R[1659],16,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1660],16,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,R[1661],E,R[1662],16,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[1663],16,[[["usize"],["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,R[1664],E,R[1665],16,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"as_str",E,R[1666],16,[[["self"]],["str"]]],[11,R[1667],E,R[1668],16,[[["self"]],[R[1669]]]],[11,R[1670],E,R[1671],16,[[["self"]],["usize"]]],[11,"get",E,R[1672],17,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name",E,R[1673],17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter",E,R[1605],17,[[["self"]],[R[1674]]]],[11,"expand",E,R[1675],17,[[["str"],["self"],["string"]]]],[11,"len",E,R[1676],17,[[["self"]],["usize"]]],[8,"Replacer",E,R[1677],N,N],[10,R[1678],E,R[1679],18,[[["self"],[R[1654]],["string"]]]],[11,R[1633],E,R[1683],18,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[364],E,E,12,[[],["i"]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[364],E,E,19,[[],["i"]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[364],E,E,20,[[],["i"]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[205],E,E,16,[[["self"]],["string"]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[364],E,E,21,[[],["i"]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[364],E,E,22,[[],["i"]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[364],E,E,23,[[],["i"]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[364],E,E,24,[[],["i"]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[364],E,E,25,[[],["i"]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[364],E,E,26,[[],["i"]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",R[1627],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[205],E,E,9,[[["self"]],["string"]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[364],E,E,27,[[],["i"]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[364],E,E,28,[[],["i"]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[364],E,E,29,[[],["i"]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[364],E,E,30,[[],["i"]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[364],E,E,31,[[],["i"]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[364],E,E,32,[[],["i"]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[364],E,E,14,[[],["i"]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[364],E,E,33,[[],["i"]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[364],E,E,34,[[],["i"]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,R[1678],E,E,2,[[["vec"],["self"],[R[1654]]]]],[11,R[1633],E,E,2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,R[1678],"regex",E,0,[[["self"],[R[1654]],["string"]]]],[11,R[1633],E,E,0,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"next",R[1627],E,27,[[["self"]],[["option",["match"]],["match"]]]],[11,"next",E,E,28,[[["self"]],[["option",[R[1654]]],[R[1654]]]]],[11,"next",E,E,29,[[["self"]],["option"]]],[11,"next",E,E,30,[[["self"]],["option"]]],[11,"next",E,E,31,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,R[425],E,E,31,[[["self"]]]],[11,"next",E,E,32,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","regex",E,19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next",E,E,20,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next",R[1627],E,33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next",E,E,34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next","regex",E,21,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,R[425],E,E,21,[[["self"]]]],[11,"next",E,E,25,[[["self"]],[["str"],["option",["str"]]]]],[11,"next",E,E,26,[[["self"]],[["str"],["option",["str"]]]]],[11,"next",E,E,24,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next",E,E,23,[[["self"]],[["option",[R[1654]]],[R[1654]]]]],[11,"next",E,E,22,[[["self"]],[["option",["match"]],["match"]]]],[11,R[364],E,E,12,[[]]],[11,R[364],R[1627],E,14,[[]]],[11,R[746],"regex",E,19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[746],E,E,20,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[746],R[1627],E,33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[746],E,E,34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"clone","regex",E,1,[[["self"]],["error"]]],[11,"clone",R[1627],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone","regex",E,11,[[["self"]],[R[1636]]]],[11,"clone",E,E,12,[[["self"]],[R[1680]]]],[11,"clone",E,E,20,[[["self"]],[R[1645]]]],[11,"clone",R[1627],E,13,[[["self"]],[R[1636]]]],[11,"clone",E,E,14,[[["self"]],[R[1680]]]],[11,"clone",E,E,34,[[["self"]],[R[1645]]]],[11,"clone","regex",E,15,[[["self"]],["match"]]],[11,"clone",E,E,16,[[["self"]],["regex"]]],[11,"eq",E,E,1,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["error"],["self"]],["bool"]]],[11,"eq",R[1627],E,8,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["match"],["self"]],["bool"]]],[11,"eq","regex",E,15,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["match"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1627],R[1681],9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","regex",R[1681],16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1627],E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[1681],9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","regex",E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1627],E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt","regex",E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[1681],16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,17,[[["self"],[R[176]]],[R[48]]]],[11,R[815],R[1627],R[1682],9,[[["str"]],[["error"],[R[48],["regex","error"]],["regex"]]]],[11,R[815],"regex",R[1682],16,[[["str"]],[["regex"],["error"],[R[48],["regex","error"]]]]],[11,"index",R[1627],E,10,[[["self"],["usize"]]]],[11,"index",E,E,10,[[["str"],["self"]]]],[11,"index","regex",E,17,[[["self"],["usize"]],["str"]]],[11,"index",E,E,17,[[["str"],["self"]],["str"]]],[11,R[256],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[["option",["error"]],["error"]]]],[11,R[1633],E,R[1683],18,[[["self"]],[["option",["cow"]],["cow",["str"]]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[1592]],[3,R[1592]],[3,R[1594]],[3,R[1594]],[3,"Match"],[3,"Regex"],[3,"Captures"],[3,"RegexSet"],[3,R[1684]],[3,"RegexSet"],[3,R[1684]],[3,"Match"],[3,"Regex"],[3,"Captures"],[8,"Replacer"],[3,R[1608]],[3,R[1610]],[3,R[1602]],[3,"Matches"],[3,R[1598]],[3,R[1604]],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,R[1598]],[3,"Split"],[3,"SplitN"],[3,R[1602]],[3,R[1604]],[3,R[1608]],[3,R[1610]]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a regular expression parser and an…","i":[[3,"Literals",R[625],"A set of literal byte strings extracted from a regular…",N,N],[3,"Lit",E,"A single member of a set of literals extracted from a…",N,N],[3,R[646],E,R[628],N,N],[3,R[642],E,"A single inclusive range in a character class.",N,N],[12,"start",E,"The start character of the range.",0,N],[12,"end",E,"The end character of the range.",0,N],[3,R[647],E,"A byte class for byte ranges only.",N,N],[3,R[643],E,"A single inclusive range in a byte class.",N,N],[12,"start",E,"The start byte of the range.",1,N],[12,"end",E,"The end byte of the range.",1,N],[3,R[645],E,"A builder for configuring regular expression parsing.",N,N],[3,"Error",E,"A parse error.",N,N],[4,"Expr",E,"A regular expression abstract syntax tree.",N,N],[13,"Empty",E,"An empty regex (which never matches any text).",2,N],[13,"Literal",E,"A sequence of one or more literal characters to be matched.",2,N],[12,"chars",R[626],"The characters.",2,N],[12,"casei",E,R[627],2,N],[13,"LiteralBytes",R[625],"A sequence of one or more literal bytes to be matched.",2,N],[12,"bytes",R[626],"The bytes.",2,N],[12,"casei",E,R[627],2,N],[13,"AnyChar",R[625],"Match any character.",2,N],[13,"AnyCharNoNL",E,"Match any character, excluding new line (`0xA`).",2,N],[13,"AnyByte",E,"Match any byte.",2,N],[13,"AnyByteNoNL",E,"Match any byte, excluding new line (`0xA`).",2,N],[13,"Class",E,R[628],2,N],[13,"ClassBytes",E,"A character class with byte ranges only.",2,N],[13,"StartLine",E,"Match the start of a line or beginning of input.",2,N],[13,"EndLine",E,"Match the end of a line or end of input.",2,N],[13,"StartText",E,"Match the beginning of input.",2,N],[13,"EndText",E,"Match the end of input.",2,N],[13,"WordBoundary",E,"Match a word boundary (word character on one side and a…",2,N],[13,"NotWordBoundary",E,"Match a position that is not a word boundary (word or…",2,N],[13,"WordBoundaryAscii",E,"Match an ASCII word boundary.",2,N],[13,"NotWordBoundaryAscii",E,"Match a position that is not an ASCII word boundary.",2,N],[13,"Group",E,"A group, possibly non-capturing.",2,N],[12,"e",R[626],"The expression inside the group.",2,N],[12,"i",E,"The capture index (starting at `1`) only for capturing…",2,N],[12,"name",E,"The capture name, only for capturing named groups.",2,N],[13,"Repeat",R[625],"A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,N],[12,"e",R[626],"The expression to be repeated. Limited to literals, `.`,…",2,N],[12,"r",E,"The type of repeat operator used.",2,N],[12,"greedy",E,"Whether the repeat is greedy (match the most) or not…",2,N],[13,"Concat",R[625],"A concatenation of expressions. Must be matched one after…",2,N],[13,"Alternate",E,"An alternation of expressions. Only one must match.",2,N],[4,"Repeater",E,"The type of a repeat operator expression.",N,N],[13,"ZeroOrOne",E,"Match zero or one (`?`).",3,N],[13,"ZeroOrMore",E,"Match zero or more (`*`).",3,N],[13,"OneOrMore",E,"Match one or more (`+`).",3,N],[13,"Range",E,"Match for at least `min` and at most `max` (`{m,n}`).",3,N],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,N],[12,"max",E,"Optional upper bound on the number of matches.",3,N],[4,R[644],R[625],"The specific type of parse error that can occur.",N,N],[13,"DoubleFlagNegation",E,"A negation symbol is used twice in flag settings. e.g.,…",4,N],[13,"DuplicateCaptureName",E,"The same capture name was used more than once. e.g.,…",4,N],[13,"EmptyAlternate",E,"An alternate is empty. e.g., `(|a)`.",4,N],[13,"EmptyCaptureName",E,"A capture group name is empty. e.g., `(?P<>a)`.",4,N],[13,"EmptyFlagNegation",E,"A negation symbol was not proceded by any flags. e.g.,…",4,N],[13,"EmptyGroup",E,"A group is empty. e.g., `()`.",4,N],[13,"InvalidBase10",E,"An invalid number was used in a counted repetition. e.g.,…",4,N],[13,"InvalidBase16",E,"An invalid hexadecimal number was used in an escape…",4,N],[13,"InvalidCaptureName",E,"An invalid capture name was used. e.g., `(?P<0a>b)`.",4,N],[13,"InvalidClassRange",E,"An invalid class range was givien. Specifically, when the…",4,N],[12,"start",R[629],"The first character specified in the range.",4,N],[12,"end",E,"The second character specified in the range.",4,N],[13,"InvalidClassEscape",R[625],"An escape sequence was used in a character class where it…",4,N],[13,"InvalidRepeatRange",E,"An invalid counted repetition min/max was given. e.g.,…",4,N],[12,"min",R[629],"The first number specified in the repetition.",4,N],[12,"max",E,"The second number specified in the repetition.",4,N],[13,"InvalidScalarValue",R[625],"An invalid Unicode scalar value was used in a long…",4,N],[13,"MissingBase10",E,"An empty counted repetition operator. e.g., `a{}`.",4,N],[13,"RepeaterExpectsExpr",E,"A repetition operator was not applied to an expression.…",4,N],[13,"RepeaterUnexpectedExpr",E,"A repetition operator was applied to an expression that…",4,N],[13,"UnclosedCaptureName",E,"A capture group name that is never closed. e.g., `(?P<a`.",4,N],[13,"UnclosedHex",E,"An unclosed hexadecimal literal. e.g., `\\x{a`.",4,N],[13,"UnclosedParen",E,"An unclosed parenthesis. e.g., `(a`.",4,N],[13,"UnclosedRepeat",E,"An unclosed counted repetition operator. e.g., `a{2`.",4,N],[13,"UnclosedUnicodeName",E,"An unclosed named Unicode class. e.g., `\\p{Yi`.",4,N],[13,"UnexpectedClassEof",E,"Saw end of regex before class was closed. e.g., `[a`.",4,N],[13,"UnexpectedEscapeEof",E,"Saw end of regex before escape sequence was closed. e.g.,…",4,N],[13,"UnexpectedFlagEof",E,"Saw end of regex before flags were closed. e.g., `(?i`.",4,N],[13,"UnexpectedTwoDigitHexEof",E,"Saw end of regex before two hexadecimal digits were seen.…",4,N],[13,"UnopenedParen",E,"Unopened parenthesis. e.g., `)`.",4,N],[13,"UnrecognizedEscape",E,"Unrecognized escape sequence. e.g., `\\q`.",4,N],[13,"UnrecognizedFlag",E,"Unrecognized flag. e.g., `(?a)`.",4,N],[13,"UnrecognizedUnicodeClass",E,"Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,N],[13,"StackExhausted",E,"Indicates that the regex uses too much nesting.",4,N],[13,"FlagNotAllowed",E,"A disallowed flag was found (e.g., `u`).",4,N],[13,"UnicodeNotAllowed",E,"A Unicode class was used when the Unicode (`u`) flag was…",4,N],[13,"InvalidUtf8",E,"InvalidUtf8 indicates that the expression may match…",4,N],[13,"EmptyClass",E,"A character class was constructed such that it is empty.…",4,N],[13,"UnsupportedClassChar",E,"Indicates that unsupported notation was used in a…",4,N],[5,"escape",E,R[1685],N,[[["str"]],["string"]]],[11,"empty",E,"Returns a new empty set of literals using default limits.",5,[[],[R[630]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",5,[[["self"]],["usize"]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",5,[[["self"],["usize"]],[R[630]]]],[11,"limit_class",E,"Get the character class size limit for this set.",5,[[["self"]],["usize"]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",5,[[["self"],["usize"]],[R[630]]]],[11,R[630],E,"Returns the set of literals as a slice. Its order is…",5,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",5,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",5,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",5,[[["self"]],["bool"]]],[11,R[677],E,"Returns true if this set is empty or if all of its members…",5,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",5,[[["self"]],[R[630]]]],[11,"longest_common_prefix",E,"Returns the longest common prefix of all members in this…",5,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",5,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",5,[[["self"],["usize"]],[["option",[R[630]]],[R[630]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",5,[[["self"]],[R[630]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",5,[[["self"]],[R[630]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",5,[[["self"],["expr"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",5,[[["self"],["expr"]],["bool"]]],[11,"union",E,"Unions this set with another set.",5,[[["self"],[R[630]]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",5,[[["self"],[R[630]]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",5,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",5,[[["self"],["lit"]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",5,[[[R[635]],["self"]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",5,[[["self"],[R[638]]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",5,[[["self"]]]],[11,"reverse",E,"Reverses all members in place.",5,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",5,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",6,[[["vec",["u8"]],["u8"]],["lit"]]],[11,"empty",E,"Returns a new complete empty literal.",6,[[],["lit"]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",6,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",6,[[["self"]]]],[6,"Result",E,"An alias for computations that can return a `Error`.",N,N],[11,"new",E,"Create a new builder for configuring expression parsing.",7,[[],[R[631]]]],[11,R[1615],E,"Set the default value for the case insensitive (`i`) flag.",7,[[["bool"]],[R[631]]]],[11,R[1629],E,"Set the default value for the multi-line matching (`m`)…",7,[[["bool"]],[R[631]]]],[11,R[1618],E,"Set the default value for the any character (`s`) flag.",7,[[["bool"]],[R[631]]]],[11,R[1630],E,"Set the default value for the greedy swap (`U`) flag.",7,[[["bool"]],[R[631]]]],[11,R[1621],E,"Set the default value for the ignore whitespace (`x`) flag.",7,[[["bool"]],[R[631]]]],[11,"unicode",E,"Set the default value for the Unicode (`u`) flag.",7,[[["bool"]],[R[631]]]],[11,"allow_bytes",E,"Whether the parser allows matching arbitrary bytes or not.",7,[[["bool"]],[R[631]]]],[11,"nest_limit",E,"Set the nesting limit for regular expression parsing.",7,[[["usize"]],[R[631]]]],[11,"parse",E,"Parse a string as a regular expression using the current…",7,[[["str"]],[["expr"],[R[48],["expr"]]]]],[11,"parse",E,"Parses a string in a regular expression syntax tree.",2,[[["str"]],[["expr"],[R[48],["expr"]]]]],[11,"prefixes",E,"Returns a set of literal prefixes extracted from this…",2,[[["self"]],[R[630]]]],[11,"suffixes",E,"Returns a set of literal suffixes extracted from this…",2,[[["self"]],[R[630]]]],[11,"is_anchored_start",E,R[632],2,[[["self"]],["bool"]]],[11,"has_anchored_start",E,R[633],2,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[632],2,[[["self"]],["bool"]]],[11,"has_anchored_end",E,R[633],2,[[["self"]],["bool"]]],[11,"has_bytes",E,"Returns true if and only if the expression contains…",2,[[["self"]],["bool"]]],[11,"new",E,R[636],8,[[[R[634]],["vec",[R[634]]]],[R[635]]]],[11,"matches",E,"Returns true if `c` is matched by this character class.",8,[[["self"],["char"]],["bool"]]],[11,"remove",E,"Removes the given character from the class if it exists.",8,[[["self"],["char"]]]],[11,"negate",E,"Negates the character class.",8,[[],[R[635]]]],[11,R[639],E,"Apply case folding to this character class.",8,[[],[R[635]]]],[11,"new",E,R[636],9,[[[R[637]],["vec",[R[637]]]],[R[638]]]],[11,"matches",E,"Returns true if `b` is matched by this byte class.",9,[[["self"],["u8"]],["bool"]]],[11,"remove",E,"Removes the given byte from the class if it exists.",9,[[["self"],["u8"]]]],[11,"negate",E,"Negates the byte class.",9,[[],[R[638]]]],[11,R[639],E,"Apply case folding to this byte class.",9,[[],[R[638]]]],[11,R[1401],E,"Returns an approximate character offset at which the error…",10,[[["self"]],["usize"]]],[11,"kind",E,"Returns the type of the regex parse error.",10,[[["self"]],[R[640]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[364],E,E,8,[[],["i"]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[205],E,E,8,[[["self"]],["string"]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[364],E,E,9,[[],["i"]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[205],E,E,9,[[["self"]],["string"]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[205],E,E,1,[[["self"]],["string"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[205],E,E,10,[[["self"]],["string"]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[205],E,E,2,[[["self"]],["string"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[205],E,E,4,[[["self"]],["string"]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"as_ref",E,E,6,[[["self"]]]],[11,R[364],E,E,8,[[],[[R[634]],[R[800],[R[634]]]]]],[11,R[364],E,E,9,[[],[[R[637]],[R[800],[R[637]]]]]],[11,"clone",E,E,5,[[["self"]],[R[630]]]],[11,"clone",E,E,6,[[["self"]],["lit"]]],[11,"clone",E,E,2,[[["self"]],["expr"]]],[11,"clone",E,E,3,[[["self"]],[R[641]]]],[11,"clone",E,E,8,[[["self"]],[R[635]]]],[11,"clone",E,E,0,[[["self"]],[R[634]]]],[11,"clone",E,E,9,[[["self"]],[R[638]]]],[11,"clone",E,E,1,[[["self"]],[R[637]]]],[11,"clone",E,E,7,[[["self"]],[R[631]]]],[11,"clone",E,E,10,[[["self"]],["error"]]],[11,"clone",E,E,4,[[["self"]],[R[640]]]],[11,"cmp",E,E,6,[[["lit"],["self"]],[R[313]]]],[11,"cmp",E,E,0,[[[R[634]],["self"]],[R[313]]]],[11,"cmp",E,E,1,[[[R[637]],["self"]],[R[313]]]],[11,"eq",E,E,5,[[["self"],[R[630]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[630]]],["bool"]]],[11,"eq",E,E,6,[[["lit"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["expr"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["expr"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[641]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[641]]],["bool"]]],[11,"eq",E,E,8,[[[R[635]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[635]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[638]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[638]]],["bool"]]],[11,"eq",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["char"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,10,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[640]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[640]],["self"]],["bool"]]],[11,R[314],E,E,6,[[["lit"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,0,[[[R[634]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[634]],["self"]],["bool"]]],[11,R[314],E,E,1,[[[R[637]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[637]],["self"]],["bool"]]],[11,R[314],E,E,0,[[["self"],["char"]],[["option",[R[313]]],[R[313]]]]],[11,R[314],E,E,1,[[["self"],["u8"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"deref",E,E,6,[[["self"]],["vec"]]],[11,"deref",E,E,8,[[["self"]],["vec"]]],[11,"deref",E,E,9,[[["self"]],["vec"]]],[11,R[368],E,E,6,[[["self"]],["vec"]]],[11,R[256],E,E,10,[[["self"]],["str"]]]],"p":[[3,R[642]],[3,R[643]],[4,"Expr"],[4,"Repeater"],[4,R[644]],[3,"Literals"],[3,"Lit"],[3,R[645]],[3,R[646]],[3,R[647]],[3,"Error"]]};
searchIndex["rustc_serialize"]={"doc":"Support code for encoding and decoding types.","i":[[0,"base64",R[194],"Base64 binary-to-text encoding",N,N],[3,"Config",R[204],"Contains configuration parameters for `to_base64`.",N,N],[12,"char_set",E,"Character set to use",0,N],[12,"newline",E,"Newline to use",0,N],[12,"pad",E,"True to pad output with `=` characters",0,N],[12,R[965],E,"`Some(len)` to wrap lines at `len`, `None` to disable line…",0,N],[4,R[257],E,"Available encoding character sets",N,N],[13,"Standard",E,"The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe",E,"The URL safe character set (uses `-` and `_`)",1,N],[4,"Newline",E,"Available newline types",N,N],[13,"LF",E,"A linefeed (i.e. Unix-style newline)",2,N],[13,"CRLF",E,"A carriage return and a linefeed (i.e. Windows-style…",2,N],[4,R[258],E,"Errors that can occur when decoding a base64 encoded string",N,N],[13,"InvalidBase64Byte",E,"The input contained a character not part of the base64…",3,N],[13,"InvalidBase64Length",E,R[195],3,N],[7,"STANDARD",E,"Configuration for RFC 4648 standard base64 encoding",N,N],[7,"URL_SAFE",E,"Configuration for RFC 4648 base64url encoding",N,N],[7,"MIME",E,"Configuration for RFC 2045 MIME base64 encoding",N,N],[8,"ToBase64",E,"A trait for converting a value to base64 encoding.",N,N],[10,"to_base64",E,"Converts the value of `self` to a base64 value following…",4,[[["self"],["config"]],["string"]]],[8,R[259],E,"A trait for converting from base64 encoded values.",N,N],[10,"from_base64",E,"Converts the value of `self`, interpreted as base64…",5,[[["self"]],[["vec",["u8"]],[R[48],["vec",R[193]]],[R[193]]]]],[0,"hex",R[194],"Hex binary-to-text encoding",N,N],[4,R[260],R[206],"Errors that can occur when decoding a hex encoded string",N,N],[13,"InvalidHexCharacter",E,"The input contained a character not part of the hex format",6,N],[13,"InvalidHexLength",E,R[195],6,N],[8,"ToHex",E,"A trait for converting a value to hexadecimal encoding",N,N],[10,"to_hex",E,"Converts the value of `self` to a hex value, returning the…",7,[[["self"]],["string"]]],[8,"FromHex",E,"A trait for converting hexadecimal encoded values",N,N],[10,"from_hex",E,"Converts the value of `self`, interpreted as hexadecimal…",8,[[["self"]],[["vec",["u8"]],[R[196]],[R[48],["vec",R[196]]]]]],[0,"json",R[194],"JSON parsing and serialization",N,N],[3,R[272],R[207],E,N,N],[3,"AsJson",E,E,N,N],[3,R[267],E,E,N,N],[3,R[392],E,"A structure for implementing serialization to JSON.",N,N],[3,"Stack",E,"A Stack represents the current position of the parser in…",N,N],[3,"Parser",E,"A streaming JSON parser implemented as an iterator of…",N,N],[3,"Builder",E,"A Builder consumes a json::Parser to create a generic Json…",N,N],[3,R[391],E,"A structure to decode JSON to values in rust.",N,N],[4,"Json",E,"Represents a json value",N,N],[13,"I64",E,E,9,N],[13,"U64",E,E,9,N],[13,"F64",E,E,9,N],[13,"String",E,E,9,N],[13,"Boolean",E,E,9,N],[13,"Array",E,E,9,N],[13,"Object",E,E,9,N],[13,"Null",E,E,9,N],[4,R[261],E,"The errors that can arise while parsing a JSON stream.",N,N],[13,"InvalidSyntax",E,E,10,N],[13,"InvalidNumber",E,E,10,N],[13,"EOFWhileParsingObject",E,E,10,N],[13,"EOFWhileParsingArray",E,E,10,N],[13,"EOFWhileParsingValue",E,E,10,N],[13,"EOFWhileParsingString",E,E,10,N],[13,"KeyMustBeAString",E,E,10,N],[13,"ExpectedColon",E,E,10,N],[13,"TrailingCharacters",E,E,10,N],[13,"TrailingComma",E,E,10,N],[13,"InvalidEscape",E,E,10,N],[13,"InvalidUnicodeCodePoint",E,E,10,N],[13,"LoneLeadingSurrogateInHexEscape",E,E,10,N],[13,"UnexpectedEndOfHexEscape",E,E,10,N],[13,"UnrecognizedHex",E,E,10,N],[13,"NotFourDigit",E,E,10,N],[13,"ControlCharacterInString",E,E,10,N],[13,"NotUtf8",E,E,10,N],[4,R[262],E,E,N,N],[13,"SyntaxError",E,"msg, line, col",11,N],[13,"IoError",E,E,11,N],[4,R[263],E,E,N,N],[13,R[747],E,E,12,N],[13,"ExpectedError",E,E,12,N],[13,"MissingFieldError",E,E,12,N],[13,"UnknownVariantError",E,E,12,N],[13,"ApplicationError",E,E,12,N],[13,"EOF",E,E,12,N],[4,R[264],E,E,N,N],[13,"FmtError",E,E,13,N],[13,"BadHashmapKey",E,E,13,N],[4,R[265],E,"The output of the streaming parser.",N,N],[13,"ObjectStart",E,E,14,N],[13,"ObjectEnd",E,E,14,N],[13,"ArrayStart",E,E,14,N],[13,"ArrayEnd",E,E,14,N],[13,"BooleanValue",E,E,14,N],[13,"I64Value",E,E,14,N],[13,"U64Value",E,E,14,N],[13,"F64Value",E,E,14,N],[13,"StringValue",E,E,14,N],[13,"NullValue",E,E,14,N],[13,"Error",E,E,14,N],[4,R[266],E,"StackElements compose a Stack. For example, Key(\"foo\"),…",N,N],[13,"Index",E,E,15,N],[13,"Key",E,E,15,N],[5,"error_str",E,"Returns a readable error string for a given error code.",N,[[[R[253]]],["str"]]],[5,"decode",E,"Shortcut function to decode a JSON `&str` into an object",N,[[["str"]],[["decodable"],[R[230]]]]],[5,"encode",E,"Shortcut function to encode a `T` into a JSON `String`",N,[[[T]],[["string"],[R[208],["string"]]]]],[5,"as_json",E,"Create an `AsJson` wrapper which can be used to print a…",N,[[[T]],[["asjson"],[R[197]]]]],[5,"as_pretty_json",E,"Create an `AsPrettyJson` wrapper which can be used to…",N,[[[T]],[[R[201]],[R[197]]]]],[6,"Array",E,E,N,N],[6,"Object",E,E,N,N],[6,"BuilderError",E,E,N,N],[6,"EncodeResult",E,E,N,N],[6,"DecodeResult",E,E,N,N],[8,"ToJson",E,"A trait for converting values to JSON",N,N],[10,"to_json",E,"Converts the value of `self` to an instance of JSON",16,[[["self"]],["json"]]],[11,"new_pretty",E,R[198],17,[[["write"]],["encoder"]]],[11,"new",E,R[198],17,[[["write"]],["encoder"]]],[11,"set_indent",E,"Set the number of spaces to indent for each level. This is…",17,[[["self"],["u32"]],[R[48]]]],[11,R[1352],E,"Decodes a json value from an `&mut io::Read`",9,[[["read"]],[[R[199]],[R[48],[R[199]]]]]],[11,R[815],E,"Decodes a json value from a string",9,[[["str"]],[[R[199]],[R[48],[R[199]]]]]],[11,"pretty",E,"Borrow this json object as a pretty object to generate a…",9,[[["self"]],["prettyjson"]]],[11,"find",E,"If the Json value is an Object, returns the value…",9,[[["str"],["self"]],[["option",["json"]],["json"]]]],[11,"find_path",E,"Attempts to get a nested Json Object for each key in…",9,[[["self"]],[["option",["json"]],["json"]]]],[11,"search",E,"If the Json value is an Object, performs a depth-first…",9,[[["str"],["self"]],[["option",["json"]],["json"]]]],[11,"is_object",E,"Returns true if the Json value is an Object. Returns false…",9,[[["self"]],["bool"]]],[11,"as_object",E,"If the Json value is an Object, returns a reference to the…",9,[[["self"]],[["option",["object"]],["object"]]]],[11,R[1383],E,"If the Json value is an Object, returns a mutable…",9,[[["self"]],[["object"],["option",["object"]]]]],[11,"into_object",E,"If the Json value is an Object, returns the associated…",9,[[],[["object"],["option",["object"]]]]],[11,"is_array",E,"Returns true if the Json value is an Array. Returns false…",9,[[["self"]],["bool"]]],[11,"as_array",E,"If the Json value is an Array, returns a reference to the…",9,[[["self"]],[["option",["array"]],["array"]]]],[11,R[1384],E,"If the Json value is an Array, returns a mutable reference…",9,[[["self"]],[["array"],["option",["array"]]]]],[11,"into_array",E,"If the Json value is an Array, returns the associated…",9,[[],[["option",["array"]],["array"]]]],[11,"is_string",E,"Returns true if the Json value is a String. Returns false…",9,[[["self"]],["bool"]]],[11,"as_string",E,"If the Json value is a String, returns the associated str.…",9,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_number",E,"Returns true if the Json value is a Number. Returns false…",9,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the Json value is a i64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the Json value is a u64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the Json value is a f64. Returns false…",9,[[["self"]],["bool"]]],[11,"as_i64",E,"If the Json value is a number, return or cast it to a i64.…",9,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64",E,"If the Json value is a number, return or cast it to a u64.…",9,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64",E,"If the Json value is a number, return or cast it to a f64.…",9,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean",E,"Returns true if the Json value is a Boolean. Returns false…",9,[[["self"]],["bool"]]],[11,"as_boolean",E,"If the Json value is a Boolean, returns the associated…",9,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the Json value is a Null. Returns false…",9,[[["self"]],["bool"]]],[11,"as_null",E,"If the Json value is a Null, returns (). Returns None…",9,[[["self"]],["option"]]],[11,"new",E,E,18,[[],["stack"]]],[11,"len",E,"Returns The number of elements in the Stack.",18,[[["self"]],["usize"]]],[11,R[677],E,"Returns true if the stack is empty.",18,[[["self"]],["bool"]]],[11,"get",E,"Provides access to the StackElement at a given index.…",18,[[["usize"],["self"]],[R[200]]]],[11,"is_equal_to",E,"Compares this stack with an array of StackElements.",18,[[["self"]],["bool"]]],[11,"starts_with",E,"Returns true if the bottom-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"ends_with",E,"Returns true if the top-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"top",E,"Returns the top-most element (if any).",18,[[["self"]],[["option",[R[200]]],[R[200]]]]],[11,"new",E,"Creates the JSON parser.",19,[[[T]],["parser"]]],[11,"stack",E,"Provides access to the current position in the logical…",19,[[["self"]],["stack"]]],[11,"new",E,"Create a JSON Builder.",20,[[[T]],["builder"]]],[11,"build",E,E,20,[[["self"]],[[R[48],["json",R[199]]],[R[199]],["json"]]]],[11,"new",E,"Creates a new decoder instance for decoding the specified…",21,[[["json"]],["decoder"]]],[11,"indent",E,"Set the indentation level for the emitted JSON",22,[[["u32"]],[R[201]]]],[8,R[391],R[194],"Trait for reading in an encoding for deserialization.",N,N],[16,"Error",E,R[203],23,N],[10,"read_nil",E,"Read a nil value.",23,[[["self"]],[R[48]]]],[10,R[231],E,"Read a usize value.",23,[[["self"]],[[R[48],["usize"]],["usize"]]]],[10,R[302],E,"Read a u64 value.",23,[[["self"]],[[R[48],["u64"]],["u64"]]]],[10,R[301],E,"Read a u32 value.",23,[[["self"]],[[R[48],["u32"]],["u32"]]]],[10,R[300],E,"Read a u16 value.",23,[[["self"]],[["u16"],[R[48],["u16"]]]]],[10,"read_u8",E,"Read a u8 value.",23,[[["self"]],[[R[48],["u8"]],["u8"]]]],[10,R[232],E,"Read a isize value.",23,[[["self"]],[[R[48],["isize"]],["isize"]]]],[10,R[328],E,"Read a i64 value.",23,[[["self"]],[["i64"],[R[48],["i64"]]]]],[10,R[325],E,"Read a i32 value.",23,[[["self"]],[[R[48],["i32"]],["i32"]]]],[10,R[318],E,"Read a i16 value.",23,[[["self"]],[[R[48],["i16"]],["i16"]]]],[10,"read_i8",E,"Read a i8 value.",23,[[["self"]],[["i8"],[R[48],["i8"]]]]],[10,R[233],E,"Read a bool value.",23,[[["self"]],[[R[48],["bool"]],["bool"]]]],[10,R[334],E,"Read a f64 value.",23,[[["self"]],[[R[48],["f64"]],["f64"]]]],[10,R[333],E,"Read a f32 value.",23,[[["self"]],[["f32"],[R[48],["f32"]]]]],[10,R[234],E,"Read a char value.",23,[[["self"]],[[R[48],["char"]],["char"]]]],[10,"read_str",E,"Read a string value.",23,[[["self"]],[[R[48],["string"]],["string"]]]],[10,R[235],E,R[202],23,[[["str"],["self"],["f"]],[R[48]]]],[10,R[236],E,R[202],23,[[["self"],["f"]],[R[48]]]],[10,R[237],E,"Read an unnamed data item for an enumeration variant.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[238],E,R[202],23,[[["self"],["f"]],[R[48]]]],[10,R[239],E,"Read a named data item for an enumeration variant.",23,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[240],E,"Read an struct value.",23,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[241],E,"Read a field for a struct value.",23,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[242],E,"Read a tuple value.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[243],E,"Read a data item for a tuple.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[244],E,"Read a tuple struct value.",23,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[245],E,"Read a data item for a tuple struct.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[246],E,"Read an optional value.",23,[[["self"],["f"]],[R[48]]]],[10,"read_seq",E,"Read a sequence of values.",23,[[["self"],["f"]],[R[48]]]],[10,R[247],E,"Read an element in the sequence.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,"read_map",E,"Read an associative container (map).",23,[[["self"],["f"]],[R[48]]]],[10,R[248],E,"Read the key for an entry in a map.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[249],E,"Read the value for an entry in a map.",23,[[["self"],["usize"],["f"]],[R[48]]]],[10,"error",E,"Record a decoding error.",23,[[["str"],["self"]]]],[8,R[392],E,"Trait for writing out an encoding when serializing.",N,N],[16,"Error",E,R[203],24,N],[10,"emit_nil",E,"Emit a nil value.",24,[[["self"]],[R[48]]]],[10,R[209],E,"Emit a usize value.",24,[[["self"],["usize"]],[R[48]]]],[10,"emit_u64",E,"Emit a u64 value.",24,[[["self"],["u64"]],[R[48]]]],[10,"emit_u32",E,"Emit a u32 value.",24,[[["self"],["u32"]],[R[48]]]],[10,"emit_u16",E,"Emit a u16 value.",24,[[["u16"],["self"]],[R[48]]]],[10,"emit_u8",E,"Emit a u8 value.",24,[[["self"],["u8"]],[R[48]]]],[10,R[210],E,"Emit a isize value.",24,[[["isize"],["self"]],[R[48]]]],[10,"emit_i64",E,"Emit a i64 value.",24,[[["i64"],["self"]],[R[48]]]],[10,"emit_i32",E,"Emit a i32 value.",24,[[["self"],["i32"]],[R[48]]]],[10,"emit_i16",E,"Emit a i16 value.",24,[[["self"],["i16"]],[R[48]]]],[10,"emit_i8",E,"Emit a i8 value.",24,[[["self"],["i8"]],[R[48]]]],[10,R[211],E,"Emit a bool value.",24,[[["self"],["bool"]],[R[48]]]],[10,"emit_f64",E,"Emit a f64 value.",24,[[["self"],["f64"]],[R[48]]]],[10,"emit_f32",E,"Emit a f32 value.",24,[[["f32"],["self"]],[R[48]]]],[10,R[212],E,"Emit a char value.",24,[[["self"],["char"]],[R[48]]]],[10,"emit_str",E,"Emit a string value.",24,[[["str"],["self"]],[R[48]]]],[10,R[213],E,"Emit an enumeration value.",24,[[["str"],["self"],["f"]],[R[48]]]],[10,R[214],E,"Emit a enumeration variant value with no or unnamed data.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[215],E,"Emit an unnamed data item for an enumeration variant.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[216],E,"Emit a enumeration variant value with no or named data.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[217],E,"Emit a named data item for an enumeration variant.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[218],E,"Emit a struct value.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[219],E,"Emit a field item for a struct.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[220],E,"Emit a tuple value.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[221],E,"Emit a data item for a tuple.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[222],E,"Emit a tuple struct value.",24,[[["str"],["usize"],["self"],["f"]],[R[48]]]],[10,R[223],E,"Emit a data item for a tuple struct.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[224],E,"Emit an optional value.",24,[[["self"],["f"]],[R[48]]]],[10,R[225],E,"Emit the `None` optional value.",24,[[["self"]],[R[48]]]],[10,R[226],E,"Emit the `Some(x)` optional value.",24,[[["self"],["f"]],[R[48]]]],[10,"emit_seq",E,"Emit a sequence of values.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[227],E,"Emit an element in a sequence.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,"emit_map",E,"Emit an associative container (map).",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[228],E,"Emit the key for an entry in a map.",24,[[["self"],["usize"],["f"]],[R[48]]]],[10,R[229],E,"Emit the value for an entry in a map.",24,[[["self"],["usize"],["f"]],[R[48]]]],[8,R[268],E,"Trait for deserializing a type.",N,N],[10,"decode",E,"Deserialize a value using a `Decoder`.",25,[[["d"]],[R[48]]]],[8,R[269],E,"Trait for serializing a type.",N,N],[10,"encode",E,"Serialize a value using an `Encoder`.",26,[[["s"],["self"]],[R[48]]]],[8,R[270],E,"Trait with helper functions for implementing `Decodable`.",N,N],[10,"read_to_vec",E,"Read a sequence into a vector.",27,[[["self"],["f"]],[[R[48],["vec"]],["vec"]]]],[8,R[271],E,"Trait with helper functions for implementing `Encodable`.",N,N],[10,"emit_from_vec",E,"Emit a vector as a sequence.",28,[[["self"],["f"]],[R[48]]]],[11,"into",R[204],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",R[206],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[205],E,E,6,[[["self"]],["string"]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",R[207],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[205],E,E,29,[[["self"]],["string"]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[205],E,E,30,[[["self"]],["string"]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[205],E,E,22,[[["self"]],["string"]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[364],E,E,19,[[],["i"]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[205],E,E,9,[[["self"]],["string"]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[205],E,E,11,[[["self"]],["string"]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[205],E,E,12,[[["self"]],["string"]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[205],E,E,13,[[["self"]],["string"]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"emit_nil",E,E,17,[[["self"]],[R[208]]]],[11,R[209],E,E,17,[[["self"],["usize"]],[R[208]]]],[11,"emit_u64",E,E,17,[[["self"],["u64"]],[R[208]]]],[11,"emit_u32",E,E,17,[[["self"],["u32"]],[R[208]]]],[11,"emit_u16",E,E,17,[[["u16"],["self"]],[R[208]]]],[11,"emit_u8",E,E,17,[[["self"],["u8"]],[R[208]]]],[11,R[210],E,E,17,[[["isize"],["self"]],[R[208]]]],[11,"emit_i64",E,E,17,[[["i64"],["self"]],[R[208]]]],[11,"emit_i32",E,E,17,[[["self"],["i32"]],[R[208]]]],[11,"emit_i16",E,E,17,[[["self"],["i16"]],[R[208]]]],[11,"emit_i8",E,E,17,[[["self"],["i8"]],[R[208]]]],[11,R[211],E,E,17,[[["self"],["bool"]],[R[208]]]],[11,"emit_f64",E,E,17,[[["self"],["f64"]],[R[208]]]],[11,"emit_f32",E,E,17,[[["f32"],["self"]],[R[208]]]],[11,R[212],E,E,17,[[["self"],["char"]],[R[208]]]],[11,"emit_str",E,E,17,[[["str"],["self"]],[R[208]]]],[11,R[213],E,E,17,[[["str"],["self"],["f"]],[R[208]]]],[11,R[214],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[215],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[216],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[217],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[218],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[219],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[220],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[221],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[222],E,E,17,[[["str"],["usize"],["self"],["f"]],[R[208]]]],[11,R[223],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[224],E,E,17,[[["self"],["f"]],[R[208]]]],[11,R[225],E,E,17,[[["self"]],[R[208]]]],[11,R[226],E,E,17,[[["self"],["f"]],[R[208]]]],[11,"emit_seq",E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[227],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,"emit_map",E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[228],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,R[229],E,E,17,[[["self"],["usize"],["f"]],[R[208]]]],[11,"read_nil",E,E,21,[[["self"]],[R[230]]]],[11,R[231],E,E,21,[[["self"]],[[R[230],["usize"]],["usize"]]]],[11,"read_u8",E,E,21,[[["self"]],[[R[230],["u8"]],["u8"]]]],[11,R[300],E,E,21,[[["self"]],[["u16"],[R[230],["u16"]]]]],[11,R[301],E,E,21,[[["self"]],[[R[230],["u32"]],["u32"]]]],[11,R[302],E,E,21,[[["self"]],[[R[230],["u64"]],["u64"]]]],[11,R[232],E,E,21,[[["self"]],[["isize"],[R[230],["isize"]]]]],[11,"read_i8",E,E,21,[[["self"]],[["i8"],[R[230],["i8"]]]]],[11,R[318],E,E,21,[[["self"]],[[R[230],["i16"]],["i16"]]]],[11,R[325],E,E,21,[[["self"]],[[R[230],["i32"]],["i32"]]]],[11,R[328],E,E,21,[[["self"]],[["i64"],[R[230],["i64"]]]]],[11,R[333],E,E,21,[[["self"]],[["f32"],[R[230],["f32"]]]]],[11,R[334],E,E,21,[[["self"]],[[R[230],["f64"]],["f64"]]]],[11,R[233],E,E,21,[[["self"]],[[R[230],["bool"]],["bool"]]]],[11,R[234],E,E,21,[[["self"]],[[R[230],["char"]],["char"]]]],[11,"read_str",E,E,21,[[["self"]],[["string"],[R[230],["string"]]]]],[11,R[235],E,E,21,[[["str"],["self"],["f"]],[R[230]]]],[11,R[236],E,E,21,[[["self"],["f"]],[R[230]]]],[11,R[237],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,R[238],E,E,21,[[["self"],["f"]],[R[230]]]],[11,R[239],E,E,21,[[["str"],["usize"],["self"],["f"]],[R[230]]]],[11,R[240],E,E,21,[[["str"],["usize"],["self"],["f"]],[R[230]]]],[11,R[241],E,E,21,[[["str"],["usize"],["self"],["f"]],[R[230]]]],[11,R[242],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,R[243],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,R[244],E,E,21,[[["str"],["usize"],["self"],["f"]],[R[230]]]],[11,R[245],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,R[246],E,E,21,[[["self"],["f"]],[R[230]]]],[11,"read_seq",E,E,21,[[["self"],["f"]],[R[230]]]],[11,R[247],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,"read_map",E,E,21,[[["self"],["f"]],[R[230]]]],[11,R[248],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,R[249],E,E,21,[[["self"],["usize"],["f"]],[R[230]]]],[11,"error",E,E,21,[[["str"],["self"]],[R[250]]]],[11,"encode",E,E,9,[[["s"],["self"]],[R[48]]]],[11,"to_json",E,E,9,[[["self"]],["json"]]],[11,"from",E,E,12,[[[R[251]]],[R[250]]]],[11,"from",E,E,11,[[["error"]],[R[251]]]],[11,"from",E,E,13,[[["error"]],[R[254]]]],[11,"next",E,E,19,[[["self"]],[["option",[R[252]]],[R[252]]]]],[11,"clone",R[204],E,1,[[["self"]],["characterset"]]],[11,"clone",E,E,2,[[["self"]],["newline"]]],[11,"clone",E,E,0,[[["self"]],["config"]]],[11,"clone",E,E,3,[[["self"]],[R[193]]]],[11,"clone",R[206],E,6,[[["self"]],[R[196]]]],[11,"clone",R[207],E,9,[[["self"]],["json"]]],[11,"clone",E,E,10,[[["self"]],[R[253]]]],[11,"clone",E,E,13,[[["self"]],["self"]]],[11,"clone",E,E,15,[[["self"]],[R[200]]]],[11,"eq",E,E,9,[[["self"],["json"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["json"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[253]]],["bool"]]],[11,"eq",E,E,11,[[[R[251]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[250]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[250]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[254]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[252]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[252]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[200]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[200]]],["bool"]]],[11,R[314],E,E,9,[[["self"],["json"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,9,[[["self"],["json"]],["bool"]]],[11,"le",E,E,9,[[["self"],["json"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["json"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["json"]],["bool"]]],[11,"fmt",R[204],E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[206],E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[207],E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[255],9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[255],29,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[255],30,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,R[255],22,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[204],E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[206],E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[207],E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,15,[[["self"],[R[176]]],[R[48]]]],[11,R[815],E,E,9,[[["str"]],[["json"],[R[251]],[R[48],["json",R[251]]]]]],[11,"index",E,E,9,[[["str"],["self"]],["json"]]],[11,"index",E,E,9,[[["self"],["usize"]],["json"]]],[11,R[256],R[204],E,3,[[["self"]],["str"]]],[11,R[256],R[206],E,6,[[["self"]],["str"]]],[11,R[256],R[207],E,12,[[["self"]],["str"]]],[11,"cause",E,E,12,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,R[256],E,E,11,[[["self"]],["str"]]],[11,R[256],E,E,13,[[["self"]],["str"]]]],"p":[[3,"Config"],[4,R[257]],[4,"Newline"],[4,R[258]],[8,"ToBase64"],[8,R[259]],[4,R[260]],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,R[261]],[4,R[262]],[4,R[263]],[4,R[264]],[4,R[265]],[4,R[266]],[8,"ToJson"],[3,R[392]],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,R[391]],[3,R[267]],[8,R[391]],[8,R[392]],[8,R[268]],[8,R[269]],[8,R[270]],[8,R[271]],[3,R[272]],[3,"AsJson"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",N,N],[3,"Scope",E,"Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new",E,"Construct a threadpool with the given number of threads.…",0,[[["u32"]],["pool"]]],[11,"scoped",E,"Borrows the pool and allows executing jobs on other…",0,[[["self"],["f"]],["r"]]],[11,"thread_count",E,"Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute",E,"Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all",E,"Blocks until all currently queued jobs have run to…",1,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[369],R[365],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[4,"OnUnwind",E,"Run on scope exit through unwinding.",N,N],[5,"guard",E,R[366],N,[[[T],["f"]],[[R[365],["always"]],["always"]]]],[5,"guard_on_unwind",E,R[366],N,[[[T],["f"]],[[R[365],["onunwind"]],["onunwind"]]]],[8,"Strategy",E,E,N,N],[10,R[367],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[365]]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind",E,"Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,R[367],E,E,2,[[],["bool"]]],[11,R[367],E,E,3,[[],["bool"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,R[368],E,E,1,[[["self"]],[T]]]],"p":[[8,"Strategy"],[3,R[369]],[4,"Always"],[4,"OnUnwind"]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,R[605],R[567],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",0,[[[T]],["self"]]],[8,R[432],E,R[433],N,N],[10,R[434],E,R[435],1,[[["s"],["self"]],[R[48]]]],[8,R[436],E,R[437],N,N],[16,"Ok",E,R[438],2,N],[16,"Error",E,R[439],2,N],[16,R[402],E,R[440],2,N],[16,R[403],E,R[441],2,N],[16,R[407],E,R[442],2,N],[16,R[408],E,R[443],2,N],[16,R[410],E,R[444],2,N],[16,R[411],E,R[445],2,N],[16,R[412],E,R[446],2,N],[10,R[447],E,R[448],2,[[["bool"]],[R[48]]]],[10,R[449],E,R[450],2,[[["i8"]],[R[48]]]],[10,R[451],E,R[452],2,[[["i16"]],[R[48]]]],[10,R[453],E,R[454],2,[[["i32"]],[R[48]]]],[10,R[455],E,R[456],2,[[["i64"]],[R[48]]]],[10,R[457],E,R[458],2,[[["u8"]],[R[48]]]],[10,R[459],E,R[460],2,[[["u16"]],[R[48]]]],[10,R[461],E,R[462],2,[[["u32"]],[R[48]]]],[10,R[463],E,R[464],2,[[["u64"]],[R[48]]]],[10,R[465],E,R[466],2,[[["f32"]],[R[48]]]],[10,R[467],E,R[468],2,[[["f64"]],[R[48]]]],[10,R[469],E,R[470],2,[[["char"]],[R[48]]]],[10,R[471],E,R[472],2,[[["str"]],[R[48]]]],[10,R[473],E,R[474],2,[[],[R[48]]]],[10,R[475],E,R[476],2,[[],[R[48]]]],[10,R[477],E,R[478],2,[[[T]],[R[48]]]],[10,R[479],E,R[480],2,[[],[R[48]]]],[10,R[481],E,R[482],2,[[["str"]],[R[48]]]],[10,R[483],E,R[484],2,[[["str"],["u32"]],[R[48]]]],[10,R[485],E,R[486],2,[[["str"],[T]],[R[48]]]],[10,R[487],E,R[488],2,[[["str"],["u32"],[T]],[R[48]]]],[10,R[489],E,R[490],2,[[["option",["usize"]],["usize"]],[R[48]]]],[10,R[491],E,R[492],2,[[["usize"]],[R[48]]]],[10,R[493],E,R[494],2,[[["str"],["usize"]],[R[48]]]],[10,R[495],E,R[496],2,[[["str"],["u32"],["usize"]],[R[48]]]],[10,R[497],E,R[498],2,[[["option",["usize"]],["usize"]],[R[48]]]],[10,R[499],E,R[500],2,[[["str"],["usize"]],[R[48]]]],[10,R[501],E,R[502],2,[[["str"],["u32"],["usize"]],[R[48]]]],[11,R[503],E,R[504],2,[[["i"]],[R[48]]]],[11,R[505],E,R[506],2,[[["i"]],[R[48]]]],[11,R[507],E,R[508],2,[[[T]],[R[48]]]],[11,R[422],E,R[509],2,[[["self"]],["bool"]]],[8,R[402],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[404],3,N],[16,"Error",E,R[405],3,N],[10,R[406],E,"Serialize a sequence element.",3,[[["self"],[T]],[R[48]]]],[10,"end",E,"Finish serializing a sequence.",3,[[],[R[48]]]],[8,R[403],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[404],4,N],[16,"Error",E,R[405],4,N],[10,R[406],E,"Serialize a tuple element.",4,[[["self"],[T]],[R[48]]]],[10,"end",E,"Finish serializing a tuple.",4,[[],[R[48]]]],[8,R[407],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[404],5,N],[16,"Error",E,R[405],5,N],[10,R[409],E,"Serialize a tuple struct field.",5,[[["self"],[T]],[R[48]]]],[10,"end",E,"Finish serializing a tuple struct.",5,[[],[R[48]]]],[8,R[408],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[404],6,N],[16,"Error",E,R[405],6,N],[10,R[409],E,"Serialize a tuple variant field.",6,[[["self"],[T]],[R[48]]]],[10,"end",E,"Finish serializing a tuple variant.",6,[[],[R[48]]]],[8,R[410],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[404],7,N],[16,"Error",E,R[405],7,N],[10,R[569],E,"Serialize a map key.",7,[[["self"],[T]],[R[48]]]],[10,R[570],E,"Serialize a map value.",7,[[["self"],[T]],[R[48]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",7,[[["k"],["self"],["v"]],[R[48]]]],[10,"end",E,"Finish serializing a map.",7,[[],[R[48]]]],[8,R[411],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[404],8,N],[16,"Error",E,R[405],8,N],[10,R[409],E,"Serialize a struct field.",8,[[["self"],["str"],[T]],[R[48]]]],[11,R[413],E,"Indicate that a struct field has been skipped.",8,[[["self"],["str"]],[R[48]]]],[10,"end",E,"Finish serializing a struct.",8,[[],[R[48]]]],[8,R[412],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[404],9,N],[16,"Error",E,R[405],9,N],[10,R[409],E,"Serialize a struct variant field.",9,[[["self"],["str"],[T]],[R[48]]]],[11,R[413],E,"Indicate that a struct variant field has been skipped.",9,[[["self"],["str"]],[R[48]]]],[10,"end",E,"Finish serializing a struct variant.",9,[[],[R[48]]]],[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,R[606],R[415],"An efficient way of discarding data from a deserializer.",N,N],[4,R[592],E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",10,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",10,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",10,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",10,N],[13,"Char",E,"The input contained a `char` that was not expected.",10,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",10,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",10,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",10,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",10,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",10,N],[13,"Seq",E,"The input contained a sequence that was not expected.",10,N],[13,"Map",E,"The input contained a map that was not expected.",10,N],[13,"Enum",E,"The input contained an enum that was not expected.",10,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",10,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",10,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",10,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",10,N],[13,"Other",E,"A message stating what uncategorized thing the input…",10,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[568],"A minimal representation of all possible errors that can…",N,N],[3,R[607],E,"A deserializer holding a `()`.",N,N],[3,R[608],E,"A deserializer holding a `bool`.",N,N],[3,R[609],E,"A deserializer holding an `i8`.",N,N],[3,R[610],E,"A deserializer holding an `i16`.",N,N],[3,R[611],E,"A deserializer holding an `i32`.",N,N],[3,R[612],E,"A deserializer holding an `i64`.",N,N],[3,R[613],E,"A deserializer holding an `isize`.",N,N],[3,R[614],E,"A deserializer holding a `u8`.",N,N],[3,R[615],E,"A deserializer holding a `u16`.",N,N],[3,R[616],E,"A deserializer holding a `u64`.",N,N],[3,R[617],E,"A deserializer holding a `usize`.",N,N],[3,R[618],E,"A deserializer holding an `f32`.",N,N],[3,R[619],E,"A deserializer holding an `f64`.",N,N],[3,R[620],E,"A deserializer holding a `char`.",N,N],[3,R[621],E,"A deserializer holding a `u32`.",N,N],[3,R[622],E,"A deserializer holding a `&str`.",N,N],[3,R[593],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[623],E,"A deserializer holding a `String`.",N,N],[3,R[624],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[594],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[595],E,"A deserializer that iterates over a sequence.",N,N],[3,R[596],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[597],E,"A deserializer that iterates over a map.",N,N],[3,R[598],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",11,[[["str"]],[R[590]]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",12,[[],[R[591]]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",13,[[["i"]],["self"]]],[11,"end",E,R[414],13,[[],[R[48]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",14,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",15,[[["i"]],["self"]]],[11,"end",E,R[414],15,[[],[R[48]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",16,[[["a"]],["self"]]],[8,"Error",R[415],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",17,[[[T]],["self"]]],[11,R[1404],E,"Raised when a `Deserialize` receives a type different from…",17,[[[R[417]],[R[416]]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",17,[[[R[417]],[R[416]]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",17,[[[R[417]],["usize"]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",17,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",17,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",17,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",17,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",18,[[["self"],[R[176]]],[R[48]]]],[8,R[510],E,R[511],N,N],[10,R[418],E,R[512],19,[[["d"]],[R[48]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[599],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",20,N],[10,R[418],E,"Equivalent to the more common `Deserialize::deserialize`…",20,[[["d"]],[R[48]]]],[8,R[431],E,R[513],N,N],[16,"Error",E,R[423],21,N],[10,R[514],E,R[515],21,[[["v"]],[R[48]]]],[10,R[516],E,R[517],21,[[["v"]],[R[48]]]],[10,R[518],E,R[519],21,[[["v"]],[R[48]]]],[10,R[520],E,R[521],21,[[["v"]],[R[48]]]],[10,R[522],E,R[523],21,[[["v"]],[R[48]]]],[10,R[524],E,R[525],21,[[["v"]],[R[48]]]],[10,R[526],E,R[527],21,[[["v"]],[R[48]]]],[10,R[528],E,R[529],21,[[["v"]],[R[48]]]],[10,R[530],E,R[531],21,[[["v"]],[R[48]]]],[10,R[532],E,R[533],21,[[["v"]],[R[48]]]],[10,R[534],E,R[535],21,[[["v"]],[R[48]]]],[10,R[536],E,R[537],21,[[["v"]],[R[48]]]],[10,R[538],E,R[539],21,[[["v"]],[R[48]]]],[10,R[540],E,R[419],21,[[["v"]],[R[48]]]],[10,R[541],E,R[419],21,[[["v"]],[R[48]]]],[10,R[542],E,R[420],21,[[["v"]],[R[48]]]],[10,R[543],E,R[420],21,[[["v"]],[R[48]]]],[10,R[544],E,R[545],21,[[["v"]],[R[48]]]],[10,R[546],E,R[547],21,[[["v"]],[R[48]]]],[10,R[548],E,R[549],21,[[["str"],["v"]],[R[48]]]],[10,R[550],E,R[551],21,[[["str"],["v"]],[R[48]]]],[10,R[552],E,R[421],21,[[["v"]],[R[48]]]],[10,R[553],E,R[421],21,[[["usize"],["v"]],[R[48]]]],[10,R[554],E,R[555],21,[[["str"],["usize"],["v"]],[R[48]]]],[10,R[556],E,R[557],21,[[["v"]],[R[48]]]],[10,R[558],E,R[559],21,[[["str"],["v"]],[R[48]]]],[10,R[560],E,R[561],21,[[["str"],["v"]],[R[48]]]],[10,R[562],E,R[563],21,[[["v"]],[R[48]]]],[10,R[564],E,R[565],21,[[["v"]],[R[48]]]],[11,R[422],E,R[566],21,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",22,N],[10,R[572],E,"Format a message stating what data this Visitor expects to…",22,[[["self"],[R[176]]],[R[48]]]],[11,R[573],E,"The input contains a boolean.",22,[[["bool"]],[R[48]]]],[11,"visit_i8",E,"The input contains an `i8`.",22,[[["i8"]],[R[48]]]],[11,"visit_i16",E,"The input contains an `i16`.",22,[[["i16"]],[R[48]]]],[11,"visit_i32",E,"The input contains an `i32`.",22,[[["i32"]],[R[48]]]],[11,R[574],E,"The input contains an `i64`.",22,[[["i64"]],[R[48]]]],[11,"visit_u8",E,"The input contains a `u8`.",22,[[["u8"]],[R[48]]]],[11,"visit_u16",E,"The input contains a `u16`.",22,[[["u16"]],[R[48]]]],[11,"visit_u32",E,"The input contains a `u32`.",22,[[["u32"]],[R[48]]]],[11,R[575],E,"The input contains a `u64`.",22,[[["u64"]],[R[48]]]],[11,"visit_f32",E,"The input contains an `f32`.",22,[[["f32"]],[R[48]]]],[11,R[576],E,"The input contains an `f64`.",22,[[["f64"]],[R[48]]]],[11,"visit_char",E,"The input contains a `char`.",22,[[["char"]],[R[48]]]],[11,R[577],E,"The input contains a string. The lifetime of the string is…",22,[[["str"]],[R[48]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",22,[[["str"]],[R[48]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",22,[[["string"]],[R[48]]]],[11,R[584],E,"The input contains a byte array. The lifetime of the byte…",22,[[],[R[48]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",22,[[],[R[48]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",22,[[["vec",["u8"]],["u8"]],[R[48]]]],[11,R[578],E,"The input contains an optional that is absent.",22,[[],[R[48]]]],[11,R[579],E,"The input contains an optional that is present.",22,[[["d"]],[R[48]]]],[11,R[581],E,"The input contains a unit `()`.",22,[[],[R[48]]]],[11,R[580],E,"The input contains a newtype struct.",22,[[["d"]],[R[48]]]],[11,R[582],E,"The input contains a sequence of elements.",22,[[["a"]],[R[48]]]],[11,R[583],E,"The input contains a key-value map.",22,[[["a"]],[R[48]]]],[11,"visit_enum",E,"The input contains an enum.",22,[[["a"]],[R[48]]]],[8,R[600],E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[423],23,N],[10,R[585],E,R[424],23,[[["self"],[T]],[[R[48],["option"]],["option"]]]],[11,"next_element",E,R[424],23,[[["self"]],[["option"],[R[48],["option"]]]]],[11,R[425],E,"Returns the number of elements remaining in the sequence,…",23,[[["self"]],[["option",["usize"]],["usize"]]]],[8,R[601],E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[423],24,N],[10,R[586],E,R[426],24,[[["self"],["k"]],[["option"],[R[48],["option"]]]]],[10,R[587],E,R[427],24,[[["self"],["v"]],[R[48]]]],[11,R[588],E,R[428],24,[[["self"],["k"],["v"]],[[R[48],["option"]],["option"]]]],[11,"next_key",E,R[426],24,[[["self"]],[[R[48],["option"]],["option"]]]],[11,"next_value",E,R[427],24,[[["self"]],[R[48]]]],[11,"next_entry",E,R[428],24,[[["self"]],[[R[48],["option"]],["option"]]]],[11,R[425],E,"Returns the number of entries remaining in the map, if…",24,[[["self"]],[["option",["usize"]],["usize"]]]],[8,R[602],E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[423],25,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",25,N],[10,R[589],E,R[429],25,[[["v"]],[R[48]]]],[11,"variant",E,R[429],25,[[],[R[48]]]],[8,R[603],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[423],26,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",26,[[],[R[48]]]],[10,"newtype_variant_seed",E,R[430],26,[[[T]],[R[48]]]],[11,"newtype_variant",E,R[430],26,[[],[R[48]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",26,[[["usize"],["v"]],[R[48]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",26,[[["v"]],[R[48]]]],[8,R[604],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[431],E,"The type of the deserializer being converted into.",27,N],[10,"into_deserializer",E,"Convert this value into a deserializer.",27,[[]]],[8,R[432],"serde",R[433],N,N],[10,R[434],E,R[435],1,[[["s"],["self"]],[R[48]]]],[8,R[436],E,R[437],N,N],[16,"Ok",E,R[438],2,N],[16,"Error",E,R[439],2,N],[16,R[402],E,R[440],2,N],[16,R[403],E,R[441],2,N],[16,R[407],E,R[442],2,N],[16,R[408],E,R[443],2,N],[16,R[410],E,R[444],2,N],[16,R[411],E,R[445],2,N],[16,R[412],E,R[446],2,N],[10,R[447],E,R[448],2,[[["bool"]],[R[48]]]],[10,R[449],E,R[450],2,[[["i8"]],[R[48]]]],[10,R[451],E,R[452],2,[[["i16"]],[R[48]]]],[10,R[453],E,R[454],2,[[["i32"]],[R[48]]]],[10,R[455],E,R[456],2,[[["i64"]],[R[48]]]],[10,R[457],E,R[458],2,[[["u8"]],[R[48]]]],[10,R[459],E,R[460],2,[[["u16"]],[R[48]]]],[10,R[461],E,R[462],2,[[["u32"]],[R[48]]]],[10,R[463],E,R[464],2,[[["u64"]],[R[48]]]],[10,R[465],E,R[466],2,[[["f32"]],[R[48]]]],[10,R[467],E,R[468],2,[[["f64"]],[R[48]]]],[10,R[469],E,R[470],2,[[["char"]],[R[48]]]],[10,R[471],E,R[472],2,[[["str"]],[R[48]]]],[10,R[473],E,R[474],2,[[],[R[48]]]],[10,R[475],E,R[476],2,[[],[R[48]]]],[10,R[477],E,R[478],2,[[[T]],[R[48]]]],[10,R[479],E,R[480],2,[[],[R[48]]]],[10,R[481],E,R[482],2,[[["str"]],[R[48]]]],[10,R[483],E,R[484],2,[[["str"],["u32"]],[R[48]]]],[10,R[485],E,R[486],2,[[["str"],[T]],[R[48]]]],[10,R[487],E,R[488],2,[[["str"],["u32"],[T]],[R[48]]]],[10,R[489],E,R[490],2,[[["option",["usize"]],["usize"]],[R[48]]]],[10,R[491],E,R[492],2,[[["usize"]],[R[48]]]],[10,R[493],E,R[494],2,[[["str"],["usize"]],[R[48]]]],[10,R[495],E,R[496],2,[[["str"],["u32"],["usize"]],[R[48]]]],[10,R[497],E,R[498],2,[[["option",["usize"]],["usize"]],[R[48]]]],[10,R[499],E,R[500],2,[[["str"],["usize"]],[R[48]]]],[10,R[501],E,R[502],2,[[["str"],["u32"],["usize"]],[R[48]]]],[11,R[503],E,R[504],2,[[["i"]],[R[48]]]],[11,R[505],E,R[506],2,[[["i"]],[R[48]]]],[11,R[507],E,R[508],2,[[[T]],[R[48]]]],[11,R[422],E,R[509],2,[[["self"]],["bool"]]],[8,R[510],E,R[511],N,N],[10,R[418],E,R[512],19,[[["d"]],[R[48]]]],[8,R[431],E,R[513],N,N],[16,"Error",E,R[423],21,N],[10,R[514],E,R[515],21,[[["v"]],[R[48]]]],[10,R[516],E,R[517],21,[[["v"]],[R[48]]]],[10,R[518],E,R[519],21,[[["v"]],[R[48]]]],[10,R[520],E,R[521],21,[[["v"]],[R[48]]]],[10,R[522],E,R[523],21,[[["v"]],[R[48]]]],[10,R[524],E,R[525],21,[[["v"]],[R[48]]]],[10,R[526],E,R[527],21,[[["v"]],[R[48]]]],[10,R[528],E,R[529],21,[[["v"]],[R[48]]]],[10,R[530],E,R[531],21,[[["v"]],[R[48]]]],[10,R[532],E,R[533],21,[[["v"]],[R[48]]]],[10,R[534],E,R[535],21,[[["v"]],[R[48]]]],[10,R[536],E,R[537],21,[[["v"]],[R[48]]]],[10,R[538],E,R[539],21,[[["v"]],[R[48]]]],[10,R[540],E,R[419],21,[[["v"]],[R[48]]]],[10,R[541],E,R[419],21,[[["v"]],[R[48]]]],[10,R[542],E,R[420],21,[[["v"]],[R[48]]]],[10,R[543],E,R[420],21,[[["v"]],[R[48]]]],[10,R[544],E,R[545],21,[[["v"]],[R[48]]]],[10,R[546],E,R[547],21,[[["v"]],[R[48]]]],[10,R[548],E,R[549],21,[[["str"],["v"]],[R[48]]]],[10,R[550],E,R[551],21,[[["str"],["v"]],[R[48]]]],[10,R[552],E,R[421],21,[[["v"]],[R[48]]]],[10,R[553],E,R[421],21,[[["usize"],["v"]],[R[48]]]],[10,R[554],E,R[555],21,[[["str"],["usize"],["v"]],[R[48]]]],[10,R[556],E,R[557],21,[[["v"]],[R[48]]]],[10,R[558],E,R[559],21,[[["str"],["v"]],[R[48]]]],[10,R[560],E,R[561],21,[[["str"],["v"]],[R[48]]]],[10,R[562],E,R[563],21,[[["v"]],[R[48]]]],[10,R[564],E,R[565],21,[[["v"]],[R[48]]]],[11,R[422],E,R[566],21,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[11,"into",R[567],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"fmt",R[415],E,29,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[43],E,E,29,[[["self"]],[T]]],[11,R[44],E,E,29,[[["self"],[T]]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[205],E,E,10,[[["self"]],["string"]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",R[568],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[43],E,E,30,[[["self"]],[T]]],[11,R[44],E,E,30,[[["self"],[T]]]],[11,R[205],E,E,30,[[["self"]],["string"]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[44],E,E,31,[[["self"],[T]]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[44],E,E,35,[[["self"],[T]]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[44],E,E,36,[[["self"],[T]]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[44],E,E,37,[[["self"],[T]]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[44],E,E,39,[[["self"],[T]]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[43],E,E,41,[[["self"]],[T]]],[11,R[44],E,E,41,[[["self"],[T]]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[43],E,E,42,[[["self"]],[T]]],[11,R[44],E,E,42,[[["self"],[T]]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[43],E,E,43,[[["self"]],[T]]],[11,R[44],E,E,43,[[["self"],[T]]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[43],E,E,44,[[["self"]],[T]]],[11,R[44],E,E,44,[[["self"],[T]]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[43],E,E,45,[[["self"]],[T]]],[11,R[44],E,E,45,[[["self"],[T]]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[43],E,E,46,[[["self"]],[T]]],[11,R[44],E,E,46,[[["self"],[T]]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[43],E,E,48,[[["self"]],[T]]],[11,R[44],E,E,48,[[["self"],[T]]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,R[406],R[567],E,28,[[["self"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[406],E,E,28,[[["self"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[409],E,E,28,[[["self"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[409],E,E,28,[[["self"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[569],E,E,28,[[["self"],[T]],[R[48]]]],[11,R[570],E,E,28,[[["self"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[409],E,E,28,[[["self"],["str"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[409],E,E,28,[[["self"],["str"],[T]],[R[48]]]],[11,"end",E,E,28,[[],[R[48]]]],[11,R[418],R[415],E,29,[[["d"]],[[R[48],[R[571]]],[R[571]]]]],[11,R[516],R[568],E,31,[[["v"]],[R[48]]]],[11,R[518],E,E,31,[[["v"]],[R[48]]]],[11,R[520],E,E,31,[[["v"]],[R[48]]]],[11,R[522],E,E,31,[[["v"]],[R[48]]]],[11,R[524],E,E,31,[[["v"]],[R[48]]]],[11,R[526],E,E,31,[[["v"]],[R[48]]]],[11,R[528],E,E,31,[[["v"]],[R[48]]]],[11,R[530],E,E,31,[[["v"]],[R[48]]]],[11,R[532],E,E,31,[[["v"]],[R[48]]]],[11,R[534],E,E,31,[[["v"]],[R[48]]]],[11,R[536],E,E,31,[[["v"]],[R[48]]]],[11,R[538],E,E,31,[[["v"]],[R[48]]]],[11,R[540],E,E,31,[[["v"]],[R[48]]]],[11,R[541],E,E,31,[[["v"]],[R[48]]]],[11,R[542],E,E,31,[[["v"]],[R[48]]]],[11,R[543],E,E,31,[[["v"]],[R[48]]]],[11,R[546],E,E,31,[[["v"]],[R[48]]]],[11,R[548],E,E,31,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,31,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,31,[[["v"]],[R[48]]]],[11,R[553],E,E,31,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,31,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,31,[[["v"]],[R[48]]]],[11,R[558],E,E,31,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,31,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,31,[[["v"]],[R[48]]]],[11,R[564],E,E,31,[[["v"]],[R[48]]]],[11,R[514],E,E,31,[[["v"]],[R[48]]]],[11,R[544],E,E,31,[[["v"]],[R[48]]]],[11,R[516],E,E,32,[[["v"]],[R[48]]]],[11,R[518],E,E,32,[[["v"]],[R[48]]]],[11,R[520],E,E,32,[[["v"]],[R[48]]]],[11,R[522],E,E,32,[[["v"]],[R[48]]]],[11,R[524],E,E,32,[[["v"]],[R[48]]]],[11,R[526],E,E,32,[[["v"]],[R[48]]]],[11,R[528],E,E,32,[[["v"]],[R[48]]]],[11,R[530],E,E,32,[[["v"]],[R[48]]]],[11,R[532],E,E,32,[[["v"]],[R[48]]]],[11,R[534],E,E,32,[[["v"]],[R[48]]]],[11,R[536],E,E,32,[[["v"]],[R[48]]]],[11,R[538],E,E,32,[[["v"]],[R[48]]]],[11,R[540],E,E,32,[[["v"]],[R[48]]]],[11,R[541],E,E,32,[[["v"]],[R[48]]]],[11,R[542],E,E,32,[[["v"]],[R[48]]]],[11,R[543],E,E,32,[[["v"]],[R[48]]]],[11,R[544],E,E,32,[[["v"]],[R[48]]]],[11,R[546],E,E,32,[[["v"]],[R[48]]]],[11,R[548],E,E,32,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,32,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,32,[[["v"]],[R[48]]]],[11,R[553],E,E,32,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,32,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,32,[[["v"]],[R[48]]]],[11,R[558],E,E,32,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,32,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,32,[[["v"]],[R[48]]]],[11,R[564],E,E,32,[[["v"]],[R[48]]]],[11,R[514],E,E,32,[[["v"]],[R[48]]]],[11,R[516],E,E,33,[[["v"]],[R[48]]]],[11,R[518],E,E,33,[[["v"]],[R[48]]]],[11,R[520],E,E,33,[[["v"]],[R[48]]]],[11,R[522],E,E,33,[[["v"]],[R[48]]]],[11,R[524],E,E,33,[[["v"]],[R[48]]]],[11,R[526],E,E,33,[[["v"]],[R[48]]]],[11,R[528],E,E,33,[[["v"]],[R[48]]]],[11,R[530],E,E,33,[[["v"]],[R[48]]]],[11,R[532],E,E,33,[[["v"]],[R[48]]]],[11,R[534],E,E,33,[[["v"]],[R[48]]]],[11,R[536],E,E,33,[[["v"]],[R[48]]]],[11,R[538],E,E,33,[[["v"]],[R[48]]]],[11,R[540],E,E,33,[[["v"]],[R[48]]]],[11,R[541],E,E,33,[[["v"]],[R[48]]]],[11,R[542],E,E,33,[[["v"]],[R[48]]]],[11,R[543],E,E,33,[[["v"]],[R[48]]]],[11,R[544],E,E,33,[[["v"]],[R[48]]]],[11,R[546],E,E,33,[[["v"]],[R[48]]]],[11,R[548],E,E,33,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,33,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,33,[[["v"]],[R[48]]]],[11,R[553],E,E,33,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,33,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,33,[[["v"]],[R[48]]]],[11,R[558],E,E,33,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,33,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,33,[[["v"]],[R[48]]]],[11,R[564],E,E,33,[[["v"]],[R[48]]]],[11,R[514],E,E,33,[[["v"]],[R[48]]]],[11,R[516],E,E,34,[[["v"]],[R[48]]]],[11,R[518],E,E,34,[[["v"]],[R[48]]]],[11,R[520],E,E,34,[[["v"]],[R[48]]]],[11,R[522],E,E,34,[[["v"]],[R[48]]]],[11,R[524],E,E,34,[[["v"]],[R[48]]]],[11,R[526],E,E,34,[[["v"]],[R[48]]]],[11,R[528],E,E,34,[[["v"]],[R[48]]]],[11,R[530],E,E,34,[[["v"]],[R[48]]]],[11,R[532],E,E,34,[[["v"]],[R[48]]]],[11,R[534],E,E,34,[[["v"]],[R[48]]]],[11,R[536],E,E,34,[[["v"]],[R[48]]]],[11,R[538],E,E,34,[[["v"]],[R[48]]]],[11,R[540],E,E,34,[[["v"]],[R[48]]]],[11,R[541],E,E,34,[[["v"]],[R[48]]]],[11,R[542],E,E,34,[[["v"]],[R[48]]]],[11,R[543],E,E,34,[[["v"]],[R[48]]]],[11,R[544],E,E,34,[[["v"]],[R[48]]]],[11,R[546],E,E,34,[[["v"]],[R[48]]]],[11,R[548],E,E,34,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,34,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,34,[[["v"]],[R[48]]]],[11,R[553],E,E,34,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,34,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,34,[[["v"]],[R[48]]]],[11,R[558],E,E,34,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,34,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,34,[[["v"]],[R[48]]]],[11,R[564],E,E,34,[[["v"]],[R[48]]]],[11,R[514],E,E,34,[[["v"]],[R[48]]]],[11,R[516],E,E,35,[[["v"]],[R[48]]]],[11,R[518],E,E,35,[[["v"]],[R[48]]]],[11,R[520],E,E,35,[[["v"]],[R[48]]]],[11,R[522],E,E,35,[[["v"]],[R[48]]]],[11,R[524],E,E,35,[[["v"]],[R[48]]]],[11,R[526],E,E,35,[[["v"]],[R[48]]]],[11,R[528],E,E,35,[[["v"]],[R[48]]]],[11,R[530],E,E,35,[[["v"]],[R[48]]]],[11,R[532],E,E,35,[[["v"]],[R[48]]]],[11,R[534],E,E,35,[[["v"]],[R[48]]]],[11,R[536],E,E,35,[[["v"]],[R[48]]]],[11,R[538],E,E,35,[[["v"]],[R[48]]]],[11,R[540],E,E,35,[[["v"]],[R[48]]]],[11,R[541],E,E,35,[[["v"]],[R[48]]]],[11,R[542],E,E,35,[[["v"]],[R[48]]]],[11,R[543],E,E,35,[[["v"]],[R[48]]]],[11,R[544],E,E,35,[[["v"]],[R[48]]]],[11,R[546],E,E,35,[[["v"]],[R[48]]]],[11,R[548],E,E,35,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,35,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,35,[[["v"]],[R[48]]]],[11,R[553],E,E,35,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,35,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,35,[[["v"]],[R[48]]]],[11,R[558],E,E,35,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,35,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,35,[[["v"]],[R[48]]]],[11,R[564],E,E,35,[[["v"]],[R[48]]]],[11,R[514],E,E,35,[[["v"]],[R[48]]]],[11,R[516],E,E,36,[[["v"]],[R[48]]]],[11,R[518],E,E,36,[[["v"]],[R[48]]]],[11,R[520],E,E,36,[[["v"]],[R[48]]]],[11,R[522],E,E,36,[[["v"]],[R[48]]]],[11,R[524],E,E,36,[[["v"]],[R[48]]]],[11,R[526],E,E,36,[[["v"]],[R[48]]]],[11,R[528],E,E,36,[[["v"]],[R[48]]]],[11,R[530],E,E,36,[[["v"]],[R[48]]]],[11,R[532],E,E,36,[[["v"]],[R[48]]]],[11,R[534],E,E,36,[[["v"]],[R[48]]]],[11,R[536],E,E,36,[[["v"]],[R[48]]]],[11,R[538],E,E,36,[[["v"]],[R[48]]]],[11,R[540],E,E,36,[[["v"]],[R[48]]]],[11,R[541],E,E,36,[[["v"]],[R[48]]]],[11,R[542],E,E,36,[[["v"]],[R[48]]]],[11,R[543],E,E,36,[[["v"]],[R[48]]]],[11,R[544],E,E,36,[[["v"]],[R[48]]]],[11,R[546],E,E,36,[[["v"]],[R[48]]]],[11,R[548],E,E,36,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,36,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,36,[[["v"]],[R[48]]]],[11,R[553],E,E,36,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,36,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,36,[[["v"]],[R[48]]]],[11,R[558],E,E,36,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,36,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,36,[[["v"]],[R[48]]]],[11,R[564],E,E,36,[[["v"]],[R[48]]]],[11,R[514],E,E,36,[[["v"]],[R[48]]]],[11,R[516],E,E,37,[[["v"]],[R[48]]]],[11,R[518],E,E,37,[[["v"]],[R[48]]]],[11,R[520],E,E,37,[[["v"]],[R[48]]]],[11,R[522],E,E,37,[[["v"]],[R[48]]]],[11,R[524],E,E,37,[[["v"]],[R[48]]]],[11,R[526],E,E,37,[[["v"]],[R[48]]]],[11,R[528],E,E,37,[[["v"]],[R[48]]]],[11,R[530],E,E,37,[[["v"]],[R[48]]]],[11,R[532],E,E,37,[[["v"]],[R[48]]]],[11,R[534],E,E,37,[[["v"]],[R[48]]]],[11,R[536],E,E,37,[[["v"]],[R[48]]]],[11,R[538],E,E,37,[[["v"]],[R[48]]]],[11,R[540],E,E,37,[[["v"]],[R[48]]]],[11,R[541],E,E,37,[[["v"]],[R[48]]]],[11,R[542],E,E,37,[[["v"]],[R[48]]]],[11,R[543],E,E,37,[[["v"]],[R[48]]]],[11,R[544],E,E,37,[[["v"]],[R[48]]]],[11,R[546],E,E,37,[[["v"]],[R[48]]]],[11,R[548],E,E,37,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,37,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,37,[[["v"]],[R[48]]]],[11,R[553],E,E,37,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,37,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,37,[[["v"]],[R[48]]]],[11,R[558],E,E,37,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,37,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,37,[[["v"]],[R[48]]]],[11,R[564],E,E,37,[[["v"]],[R[48]]]],[11,R[514],E,E,37,[[["v"]],[R[48]]]],[11,R[516],E,E,38,[[["v"]],[R[48]]]],[11,R[518],E,E,38,[[["v"]],[R[48]]]],[11,R[520],E,E,38,[[["v"]],[R[48]]]],[11,R[522],E,E,38,[[["v"]],[R[48]]]],[11,R[524],E,E,38,[[["v"]],[R[48]]]],[11,R[526],E,E,38,[[["v"]],[R[48]]]],[11,R[528],E,E,38,[[["v"]],[R[48]]]],[11,R[530],E,E,38,[[["v"]],[R[48]]]],[11,R[532],E,E,38,[[["v"]],[R[48]]]],[11,R[534],E,E,38,[[["v"]],[R[48]]]],[11,R[536],E,E,38,[[["v"]],[R[48]]]],[11,R[538],E,E,38,[[["v"]],[R[48]]]],[11,R[540],E,E,38,[[["v"]],[R[48]]]],[11,R[541],E,E,38,[[["v"]],[R[48]]]],[11,R[542],E,E,38,[[["v"]],[R[48]]]],[11,R[543],E,E,38,[[["v"]],[R[48]]]],[11,R[544],E,E,38,[[["v"]],[R[48]]]],[11,R[546],E,E,38,[[["v"]],[R[48]]]],[11,R[548],E,E,38,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,38,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,38,[[["v"]],[R[48]]]],[11,R[553],E,E,38,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,38,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,38,[[["v"]],[R[48]]]],[11,R[558],E,E,38,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,38,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,38,[[["v"]],[R[48]]]],[11,R[564],E,E,38,[[["v"]],[R[48]]]],[11,R[514],E,E,38,[[["v"]],[R[48]]]],[11,R[516],E,E,39,[[["v"]],[R[48]]]],[11,R[518],E,E,39,[[["v"]],[R[48]]]],[11,R[520],E,E,39,[[["v"]],[R[48]]]],[11,R[522],E,E,39,[[["v"]],[R[48]]]],[11,R[524],E,E,39,[[["v"]],[R[48]]]],[11,R[526],E,E,39,[[["v"]],[R[48]]]],[11,R[528],E,E,39,[[["v"]],[R[48]]]],[11,R[530],E,E,39,[[["v"]],[R[48]]]],[11,R[532],E,E,39,[[["v"]],[R[48]]]],[11,R[534],E,E,39,[[["v"]],[R[48]]]],[11,R[536],E,E,39,[[["v"]],[R[48]]]],[11,R[538],E,E,39,[[["v"]],[R[48]]]],[11,R[540],E,E,39,[[["v"]],[R[48]]]],[11,R[541],E,E,39,[[["v"]],[R[48]]]],[11,R[542],E,E,39,[[["v"]],[R[48]]]],[11,R[543],E,E,39,[[["v"]],[R[48]]]],[11,R[544],E,E,39,[[["v"]],[R[48]]]],[11,R[546],E,E,39,[[["v"]],[R[48]]]],[11,R[548],E,E,39,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,39,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,39,[[["v"]],[R[48]]]],[11,R[553],E,E,39,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,39,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,39,[[["v"]],[R[48]]]],[11,R[558],E,E,39,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,39,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,39,[[["v"]],[R[48]]]],[11,R[564],E,E,39,[[["v"]],[R[48]]]],[11,R[514],E,E,39,[[["v"]],[R[48]]]],[11,R[516],E,E,40,[[["v"]],[R[48]]]],[11,R[518],E,E,40,[[["v"]],[R[48]]]],[11,R[520],E,E,40,[[["v"]],[R[48]]]],[11,R[522],E,E,40,[[["v"]],[R[48]]]],[11,R[524],E,E,40,[[["v"]],[R[48]]]],[11,R[526],E,E,40,[[["v"]],[R[48]]]],[11,R[528],E,E,40,[[["v"]],[R[48]]]],[11,R[530],E,E,40,[[["v"]],[R[48]]]],[11,R[532],E,E,40,[[["v"]],[R[48]]]],[11,R[534],E,E,40,[[["v"]],[R[48]]]],[11,R[536],E,E,40,[[["v"]],[R[48]]]],[11,R[538],E,E,40,[[["v"]],[R[48]]]],[11,R[540],E,E,40,[[["v"]],[R[48]]]],[11,R[541],E,E,40,[[["v"]],[R[48]]]],[11,R[542],E,E,40,[[["v"]],[R[48]]]],[11,R[543],E,E,40,[[["v"]],[R[48]]]],[11,R[544],E,E,40,[[["v"]],[R[48]]]],[11,R[546],E,E,40,[[["v"]],[R[48]]]],[11,R[548],E,E,40,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,40,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,40,[[["v"]],[R[48]]]],[11,R[553],E,E,40,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,40,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,40,[[["v"]],[R[48]]]],[11,R[558],E,E,40,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,40,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,40,[[["v"]],[R[48]]]],[11,R[564],E,E,40,[[["v"]],[R[48]]]],[11,R[514],E,E,40,[[["v"]],[R[48]]]],[11,R[516],E,E,41,[[["v"]],[R[48]]]],[11,R[518],E,E,41,[[["v"]],[R[48]]]],[11,R[520],E,E,41,[[["v"]],[R[48]]]],[11,R[522],E,E,41,[[["v"]],[R[48]]]],[11,R[524],E,E,41,[[["v"]],[R[48]]]],[11,R[526],E,E,41,[[["v"]],[R[48]]]],[11,R[528],E,E,41,[[["v"]],[R[48]]]],[11,R[530],E,E,41,[[["v"]],[R[48]]]],[11,R[532],E,E,41,[[["v"]],[R[48]]]],[11,R[534],E,E,41,[[["v"]],[R[48]]]],[11,R[536],E,E,41,[[["v"]],[R[48]]]],[11,R[538],E,E,41,[[["v"]],[R[48]]]],[11,R[540],E,E,41,[[["v"]],[R[48]]]],[11,R[541],E,E,41,[[["v"]],[R[48]]]],[11,R[542],E,E,41,[[["v"]],[R[48]]]],[11,R[543],E,E,41,[[["v"]],[R[48]]]],[11,R[544],E,E,41,[[["v"]],[R[48]]]],[11,R[546],E,E,41,[[["v"]],[R[48]]]],[11,R[548],E,E,41,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,41,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,41,[[["v"]],[R[48]]]],[11,R[553],E,E,41,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,41,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,41,[[["v"]],[R[48]]]],[11,R[558],E,E,41,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,41,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,41,[[["v"]],[R[48]]]],[11,R[564],E,E,41,[[["v"]],[R[48]]]],[11,R[514],E,E,41,[[["v"]],[R[48]]]],[11,R[516],E,E,42,[[["v"]],[R[48]]]],[11,R[518],E,E,42,[[["v"]],[R[48]]]],[11,R[520],E,E,42,[[["v"]],[R[48]]]],[11,R[522],E,E,42,[[["v"]],[R[48]]]],[11,R[524],E,E,42,[[["v"]],[R[48]]]],[11,R[526],E,E,42,[[["v"]],[R[48]]]],[11,R[528],E,E,42,[[["v"]],[R[48]]]],[11,R[530],E,E,42,[[["v"]],[R[48]]]],[11,R[532],E,E,42,[[["v"]],[R[48]]]],[11,R[534],E,E,42,[[["v"]],[R[48]]]],[11,R[536],E,E,42,[[["v"]],[R[48]]]],[11,R[538],E,E,42,[[["v"]],[R[48]]]],[11,R[540],E,E,42,[[["v"]],[R[48]]]],[11,R[541],E,E,42,[[["v"]],[R[48]]]],[11,R[542],E,E,42,[[["v"]],[R[48]]]],[11,R[543],E,E,42,[[["v"]],[R[48]]]],[11,R[544],E,E,42,[[["v"]],[R[48]]]],[11,R[546],E,E,42,[[["v"]],[R[48]]]],[11,R[548],E,E,42,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,42,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,42,[[["v"]],[R[48]]]],[11,R[553],E,E,42,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,42,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,42,[[["v"]],[R[48]]]],[11,R[558],E,E,42,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,42,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,42,[[["v"]],[R[48]]]],[11,R[564],E,E,42,[[["v"]],[R[48]]]],[11,R[514],E,E,42,[[["v"]],[R[48]]]],[11,R[516],E,E,43,[[["v"]],[R[48]]]],[11,R[518],E,E,43,[[["v"]],[R[48]]]],[11,R[520],E,E,43,[[["v"]],[R[48]]]],[11,R[522],E,E,43,[[["v"]],[R[48]]]],[11,R[524],E,E,43,[[["v"]],[R[48]]]],[11,R[526],E,E,43,[[["v"]],[R[48]]]],[11,R[528],E,E,43,[[["v"]],[R[48]]]],[11,R[530],E,E,43,[[["v"]],[R[48]]]],[11,R[532],E,E,43,[[["v"]],[R[48]]]],[11,R[534],E,E,43,[[["v"]],[R[48]]]],[11,R[536],E,E,43,[[["v"]],[R[48]]]],[11,R[538],E,E,43,[[["v"]],[R[48]]]],[11,R[540],E,E,43,[[["v"]],[R[48]]]],[11,R[541],E,E,43,[[["v"]],[R[48]]]],[11,R[542],E,E,43,[[["v"]],[R[48]]]],[11,R[543],E,E,43,[[["v"]],[R[48]]]],[11,R[544],E,E,43,[[["v"]],[R[48]]]],[11,R[546],E,E,43,[[["v"]],[R[48]]]],[11,R[548],E,E,43,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,43,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,43,[[["v"]],[R[48]]]],[11,R[553],E,E,43,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,43,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,43,[[["v"]],[R[48]]]],[11,R[558],E,E,43,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,43,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,43,[[["v"]],[R[48]]]],[11,R[564],E,E,43,[[["v"]],[R[48]]]],[11,R[514],E,E,43,[[["v"]],[R[48]]]],[11,R[516],E,E,44,[[["v"]],[R[48]]]],[11,R[518],E,E,44,[[["v"]],[R[48]]]],[11,R[520],E,E,44,[[["v"]],[R[48]]]],[11,R[522],E,E,44,[[["v"]],[R[48]]]],[11,R[524],E,E,44,[[["v"]],[R[48]]]],[11,R[526],E,E,44,[[["v"]],[R[48]]]],[11,R[528],E,E,44,[[["v"]],[R[48]]]],[11,R[530],E,E,44,[[["v"]],[R[48]]]],[11,R[532],E,E,44,[[["v"]],[R[48]]]],[11,R[534],E,E,44,[[["v"]],[R[48]]]],[11,R[536],E,E,44,[[["v"]],[R[48]]]],[11,R[538],E,E,44,[[["v"]],[R[48]]]],[11,R[540],E,E,44,[[["v"]],[R[48]]]],[11,R[541],E,E,44,[[["v"]],[R[48]]]],[11,R[542],E,E,44,[[["v"]],[R[48]]]],[11,R[543],E,E,44,[[["v"]],[R[48]]]],[11,R[544],E,E,44,[[["v"]],[R[48]]]],[11,R[546],E,E,44,[[["v"]],[R[48]]]],[11,R[548],E,E,44,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,44,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,44,[[["v"]],[R[48]]]],[11,R[553],E,E,44,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,44,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,44,[[["v"]],[R[48]]]],[11,R[558],E,E,44,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,44,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,44,[[["v"]],[R[48]]]],[11,R[564],E,E,44,[[["v"]],[R[48]]]],[11,R[514],E,E,44,[[["v"]],[R[48]]]],[11,R[516],E,E,45,[[["v"]],[R[48]]]],[11,R[518],E,E,45,[[["v"]],[R[48]]]],[11,R[520],E,E,45,[[["v"]],[R[48]]]],[11,R[522],E,E,45,[[["v"]],[R[48]]]],[11,R[524],E,E,45,[[["v"]],[R[48]]]],[11,R[526],E,E,45,[[["v"]],[R[48]]]],[11,R[528],E,E,45,[[["v"]],[R[48]]]],[11,R[530],E,E,45,[[["v"]],[R[48]]]],[11,R[532],E,E,45,[[["v"]],[R[48]]]],[11,R[534],E,E,45,[[["v"]],[R[48]]]],[11,R[536],E,E,45,[[["v"]],[R[48]]]],[11,R[538],E,E,45,[[["v"]],[R[48]]]],[11,R[540],E,E,45,[[["v"]],[R[48]]]],[11,R[541],E,E,45,[[["v"]],[R[48]]]],[11,R[542],E,E,45,[[["v"]],[R[48]]]],[11,R[543],E,E,45,[[["v"]],[R[48]]]],[11,R[544],E,E,45,[[["v"]],[R[48]]]],[11,R[546],E,E,45,[[["v"]],[R[48]]]],[11,R[548],E,E,45,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,45,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,45,[[["v"]],[R[48]]]],[11,R[553],E,E,45,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,45,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,45,[[["v"]],[R[48]]]],[11,R[558],E,E,45,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,45,[[["v"]],[R[48]]]],[11,R[564],E,E,45,[[["v"]],[R[48]]]],[11,R[514],E,E,45,[[["v"]],[R[48]]]],[11,R[560],E,E,45,[[["str"],["v"]],[R[48]]]],[11,R[514],E,E,46,[[["v"]],[R[48]]]],[11,R[560],E,E,46,[[["str"],["v"]],[R[48]]]],[11,R[516],E,E,46,[[["v"]],[R[48]]]],[11,R[518],E,E,46,[[["v"]],[R[48]]]],[11,R[520],E,E,46,[[["v"]],[R[48]]]],[11,R[522],E,E,46,[[["v"]],[R[48]]]],[11,R[524],E,E,46,[[["v"]],[R[48]]]],[11,R[526],E,E,46,[[["v"]],[R[48]]]],[11,R[528],E,E,46,[[["v"]],[R[48]]]],[11,R[530],E,E,46,[[["v"]],[R[48]]]],[11,R[532],E,E,46,[[["v"]],[R[48]]]],[11,R[534],E,E,46,[[["v"]],[R[48]]]],[11,R[536],E,E,46,[[["v"]],[R[48]]]],[11,R[538],E,E,46,[[["v"]],[R[48]]]],[11,R[540],E,E,46,[[["v"]],[R[48]]]],[11,R[541],E,E,46,[[["v"]],[R[48]]]],[11,R[542],E,E,46,[[["v"]],[R[48]]]],[11,R[543],E,E,46,[[["v"]],[R[48]]]],[11,R[544],E,E,46,[[["v"]],[R[48]]]],[11,R[546],E,E,46,[[["v"]],[R[48]]]],[11,R[548],E,E,46,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,46,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,46,[[["v"]],[R[48]]]],[11,R[553],E,E,46,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,46,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,46,[[["v"]],[R[48]]]],[11,R[558],E,E,46,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,46,[[["v"]],[R[48]]]],[11,R[564],E,E,46,[[["v"]],[R[48]]]],[11,R[514],E,E,11,[[["v"]],[R[48]]]],[11,R[560],E,E,11,[[["str"],["v"]],[R[48]]]],[11,R[516],E,E,11,[[["v"]],[R[48]]]],[11,R[518],E,E,11,[[["v"]],[R[48]]]],[11,R[520],E,E,11,[[["v"]],[R[48]]]],[11,R[522],E,E,11,[[["v"]],[R[48]]]],[11,R[524],E,E,11,[[["v"]],[R[48]]]],[11,R[526],E,E,11,[[["v"]],[R[48]]]],[11,R[528],E,E,11,[[["v"]],[R[48]]]],[11,R[530],E,E,11,[[["v"]],[R[48]]]],[11,R[532],E,E,11,[[["v"]],[R[48]]]],[11,R[534],E,E,11,[[["v"]],[R[48]]]],[11,R[536],E,E,11,[[["v"]],[R[48]]]],[11,R[538],E,E,11,[[["v"]],[R[48]]]],[11,R[540],E,E,11,[[["v"]],[R[48]]]],[11,R[541],E,E,11,[[["v"]],[R[48]]]],[11,R[542],E,E,11,[[["v"]],[R[48]]]],[11,R[543],E,E,11,[[["v"]],[R[48]]]],[11,R[544],E,E,11,[[["v"]],[R[48]]]],[11,R[546],E,E,11,[[["v"]],[R[48]]]],[11,R[548],E,E,11,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,11,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,11,[[["v"]],[R[48]]]],[11,R[553],E,E,11,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,11,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,11,[[["v"]],[R[48]]]],[11,R[558],E,E,11,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,11,[[["v"]],[R[48]]]],[11,R[564],E,E,11,[[["v"]],[R[48]]]],[11,R[514],E,E,47,[[["v"]],[R[48]]]],[11,R[560],E,E,47,[[["str"],["v"]],[R[48]]]],[11,R[516],E,E,47,[[["v"]],[R[48]]]],[11,R[518],E,E,47,[[["v"]],[R[48]]]],[11,R[520],E,E,47,[[["v"]],[R[48]]]],[11,R[522],E,E,47,[[["v"]],[R[48]]]],[11,R[524],E,E,47,[[["v"]],[R[48]]]],[11,R[526],E,E,47,[[["v"]],[R[48]]]],[11,R[528],E,E,47,[[["v"]],[R[48]]]],[11,R[530],E,E,47,[[["v"]],[R[48]]]],[11,R[532],E,E,47,[[["v"]],[R[48]]]],[11,R[534],E,E,47,[[["v"]],[R[48]]]],[11,R[536],E,E,47,[[["v"]],[R[48]]]],[11,R[538],E,E,47,[[["v"]],[R[48]]]],[11,R[540],E,E,47,[[["v"]],[R[48]]]],[11,R[541],E,E,47,[[["v"]],[R[48]]]],[11,R[542],E,E,47,[[["v"]],[R[48]]]],[11,R[543],E,E,47,[[["v"]],[R[48]]]],[11,R[544],E,E,47,[[["v"]],[R[48]]]],[11,R[546],E,E,47,[[["v"]],[R[48]]]],[11,R[548],E,E,47,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,47,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,47,[[["v"]],[R[48]]]],[11,R[553],E,E,47,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,47,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,47,[[["v"]],[R[48]]]],[11,R[558],E,E,47,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,47,[[["v"]],[R[48]]]],[11,R[564],E,E,47,[[["v"]],[R[48]]]],[11,R[514],E,E,48,[[["v"]],[R[48]]]],[11,R[560],E,E,48,[[["str"],["v"]],[R[48]]]],[11,R[516],E,E,48,[[["v"]],[R[48]]]],[11,R[518],E,E,48,[[["v"]],[R[48]]]],[11,R[520],E,E,48,[[["v"]],[R[48]]]],[11,R[522],E,E,48,[[["v"]],[R[48]]]],[11,R[524],E,E,48,[[["v"]],[R[48]]]],[11,R[526],E,E,48,[[["v"]],[R[48]]]],[11,R[528],E,E,48,[[["v"]],[R[48]]]],[11,R[530],E,E,48,[[["v"]],[R[48]]]],[11,R[532],E,E,48,[[["v"]],[R[48]]]],[11,R[534],E,E,48,[[["v"]],[R[48]]]],[11,R[536],E,E,48,[[["v"]],[R[48]]]],[11,R[538],E,E,48,[[["v"]],[R[48]]]],[11,R[540],E,E,48,[[["v"]],[R[48]]]],[11,R[541],E,E,48,[[["v"]],[R[48]]]],[11,R[542],E,E,48,[[["v"]],[R[48]]]],[11,R[543],E,E,48,[[["v"]],[R[48]]]],[11,R[544],E,E,48,[[["v"]],[R[48]]]],[11,R[546],E,E,48,[[["v"]],[R[48]]]],[11,R[548],E,E,48,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,48,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,48,[[["v"]],[R[48]]]],[11,R[553],E,E,48,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,48,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,48,[[["v"]],[R[48]]]],[11,R[558],E,E,48,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,48,[[["v"]],[R[48]]]],[11,R[564],E,E,48,[[["v"]],[R[48]]]],[11,R[514],E,E,12,[[["v"]],[R[48]]]],[11,R[516],E,E,12,[[["v"]],[R[48]]]],[11,R[518],E,E,12,[[["v"]],[R[48]]]],[11,R[520],E,E,12,[[["v"]],[R[48]]]],[11,R[522],E,E,12,[[["v"]],[R[48]]]],[11,R[524],E,E,12,[[["v"]],[R[48]]]],[11,R[526],E,E,12,[[["v"]],[R[48]]]],[11,R[528],E,E,12,[[["v"]],[R[48]]]],[11,R[530],E,E,12,[[["v"]],[R[48]]]],[11,R[532],E,E,12,[[["v"]],[R[48]]]],[11,R[534],E,E,12,[[["v"]],[R[48]]]],[11,R[536],E,E,12,[[["v"]],[R[48]]]],[11,R[538],E,E,12,[[["v"]],[R[48]]]],[11,R[540],E,E,12,[[["v"]],[R[48]]]],[11,R[541],E,E,12,[[["v"]],[R[48]]]],[11,R[542],E,E,12,[[["v"]],[R[48]]]],[11,R[543],E,E,12,[[["v"]],[R[48]]]],[11,R[544],E,E,12,[[["v"]],[R[48]]]],[11,R[546],E,E,12,[[["v"]],[R[48]]]],[11,R[548],E,E,12,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,12,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,12,[[["v"]],[R[48]]]],[11,R[553],E,E,12,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,12,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,12,[[["v"]],[R[48]]]],[11,R[558],E,E,12,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,12,[[["v"]],[R[48]]]],[11,R[564],E,E,12,[[["v"]],[R[48]]]],[11,R[560],E,E,12,[[["str"],["v"]],[R[48]]]],[11,R[514],E,E,13,[[["v"]],[R[48]]]],[11,R[516],E,E,13,[[["v"]],[R[48]]]],[11,R[518],E,E,13,[[["v"]],[R[48]]]],[11,R[520],E,E,13,[[["v"]],[R[48]]]],[11,R[522],E,E,13,[[["v"]],[R[48]]]],[11,R[524],E,E,13,[[["v"]],[R[48]]]],[11,R[526],E,E,13,[[["v"]],[R[48]]]],[11,R[528],E,E,13,[[["v"]],[R[48]]]],[11,R[530],E,E,13,[[["v"]],[R[48]]]],[11,R[532],E,E,13,[[["v"]],[R[48]]]],[11,R[534],E,E,13,[[["v"]],[R[48]]]],[11,R[536],E,E,13,[[["v"]],[R[48]]]],[11,R[538],E,E,13,[[["v"]],[R[48]]]],[11,R[540],E,E,13,[[["v"]],[R[48]]]],[11,R[541],E,E,13,[[["v"]],[R[48]]]],[11,R[542],E,E,13,[[["v"]],[R[48]]]],[11,R[543],E,E,13,[[["v"]],[R[48]]]],[11,R[544],E,E,13,[[["v"]],[R[48]]]],[11,R[546],E,E,13,[[["v"]],[R[48]]]],[11,R[548],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,13,[[["v"]],[R[48]]]],[11,R[553],E,E,13,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,13,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,13,[[["v"]],[R[48]]]],[11,R[558],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,13,[[["v"]],[R[48]]]],[11,R[564],E,E,13,[[["v"]],[R[48]]]],[11,R[514],E,E,14,[[["v"]],[R[48]]]],[11,R[516],E,E,14,[[["v"]],[R[48]]]],[11,R[518],E,E,14,[[["v"]],[R[48]]]],[11,R[520],E,E,14,[[["v"]],[R[48]]]],[11,R[522],E,E,14,[[["v"]],[R[48]]]],[11,R[524],E,E,14,[[["v"]],[R[48]]]],[11,R[526],E,E,14,[[["v"]],[R[48]]]],[11,R[528],E,E,14,[[["v"]],[R[48]]]],[11,R[530],E,E,14,[[["v"]],[R[48]]]],[11,R[532],E,E,14,[[["v"]],[R[48]]]],[11,R[534],E,E,14,[[["v"]],[R[48]]]],[11,R[536],E,E,14,[[["v"]],[R[48]]]],[11,R[538],E,E,14,[[["v"]],[R[48]]]],[11,R[540],E,E,14,[[["v"]],[R[48]]]],[11,R[541],E,E,14,[[["v"]],[R[48]]]],[11,R[542],E,E,14,[[["v"]],[R[48]]]],[11,R[543],E,E,14,[[["v"]],[R[48]]]],[11,R[544],E,E,14,[[["v"]],[R[48]]]],[11,R[546],E,E,14,[[["v"]],[R[48]]]],[11,R[548],E,E,14,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,14,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,14,[[["v"]],[R[48]]]],[11,R[553],E,E,14,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,14,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,14,[[["v"]],[R[48]]]],[11,R[558],E,E,14,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,14,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,14,[[["v"]],[R[48]]]],[11,R[564],E,E,14,[[["v"]],[R[48]]]],[11,R[514],E,E,15,[[["v"]],[R[48]]]],[11,R[552],E,E,15,[[["v"]],[R[48]]]],[11,R[553],E,E,15,[[["usize"],["v"]],[R[48]]]],[11,R[516],E,E,15,[[["v"]],[R[48]]]],[11,R[518],E,E,15,[[["v"]],[R[48]]]],[11,R[520],E,E,15,[[["v"]],[R[48]]]],[11,R[522],E,E,15,[[["v"]],[R[48]]]],[11,R[524],E,E,15,[[["v"]],[R[48]]]],[11,R[526],E,E,15,[[["v"]],[R[48]]]],[11,R[528],E,E,15,[[["v"]],[R[48]]]],[11,R[530],E,E,15,[[["v"]],[R[48]]]],[11,R[532],E,E,15,[[["v"]],[R[48]]]],[11,R[534],E,E,15,[[["v"]],[R[48]]]],[11,R[536],E,E,15,[[["v"]],[R[48]]]],[11,R[538],E,E,15,[[["v"]],[R[48]]]],[11,R[540],E,E,15,[[["v"]],[R[48]]]],[11,R[541],E,E,15,[[["v"]],[R[48]]]],[11,R[542],E,E,15,[[["v"]],[R[48]]]],[11,R[543],E,E,15,[[["v"]],[R[48]]]],[11,R[544],E,E,15,[[["v"]],[R[48]]]],[11,R[546],E,E,15,[[["v"]],[R[48]]]],[11,R[548],E,E,15,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,15,[[["str"],["v"]],[R[48]]]],[11,R[554],E,E,15,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,15,[[["v"]],[R[48]]]],[11,R[558],E,E,15,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,15,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,15,[[["v"]],[R[48]]]],[11,R[564],E,E,15,[[["v"]],[R[48]]]],[11,R[514],E,E,16,[[["v"]],[R[48]]]],[11,R[516],E,E,16,[[["v"]],[R[48]]]],[11,R[518],E,E,16,[[["v"]],[R[48]]]],[11,R[520],E,E,16,[[["v"]],[R[48]]]],[11,R[522],E,E,16,[[["v"]],[R[48]]]],[11,R[524],E,E,16,[[["v"]],[R[48]]]],[11,R[526],E,E,16,[[["v"]],[R[48]]]],[11,R[528],E,E,16,[[["v"]],[R[48]]]],[11,R[530],E,E,16,[[["v"]],[R[48]]]],[11,R[532],E,E,16,[[["v"]],[R[48]]]],[11,R[534],E,E,16,[[["v"]],[R[48]]]],[11,R[536],E,E,16,[[["v"]],[R[48]]]],[11,R[538],E,E,16,[[["v"]],[R[48]]]],[11,R[540],E,E,16,[[["v"]],[R[48]]]],[11,R[541],E,E,16,[[["v"]],[R[48]]]],[11,R[542],E,E,16,[[["v"]],[R[48]]]],[11,R[543],E,E,16,[[["v"]],[R[48]]]],[11,R[544],E,E,16,[[["v"]],[R[48]]]],[11,R[546],E,E,16,[[["v"]],[R[48]]]],[11,R[548],E,E,16,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,16,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,16,[[["v"]],[R[48]]]],[11,R[553],E,E,16,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,16,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,16,[[["v"]],[R[48]]]],[11,R[558],E,E,16,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,16,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,16,[[["v"]],[R[48]]]],[11,R[564],E,E,16,[[["v"]],[R[48]]]],[11,R[572],R[415],E,29,[[["self"],[R[176]]],[R[48]]]],[11,R[573],E,E,29,[[["bool"]],[R[48]]]],[11,R[574],E,E,29,[[["i64"]],[R[48]]]],[11,R[575],E,E,29,[[["u64"]],[R[48]]]],[11,R[576],E,E,29,[[["f64"]],[R[48]]]],[11,R[577],E,E,29,[[["str"]],[R[48]]]],[11,R[578],E,E,29,[[],[R[48]]]],[11,R[579],E,E,29,[[["d"]],[R[48]]]],[11,R[580],E,E,29,[[["d"]],[R[48]]]],[11,R[581],E,E,29,[[],[R[48]]]],[11,R[582],E,E,29,[[["a"]],[R[48]]]],[11,R[583],E,E,29,[[["a"]],[R[48]]]],[11,R[584],E,E,29,[[],[R[48]]]],[11,R[585],R[568],E,13,[[["self"],["v"]],[["option"],[R[48],["option"]]]]],[11,R[425],E,E,13,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[585],E,E,15,[[["self"],[T]],[[R[48],["option"]],["option"]]]],[11,R[425],E,E,15,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[586],E,E,15,[[["self"],[T]],[["option"],[R[48],["option"]]]]],[11,R[587],E,E,15,[[["self"],[T]],[R[48]]]],[11,R[588],E,E,15,[[["tv"],["self"],["tk"]],[["option"],[R[48],["option"]]]]],[11,R[425],E,E,15,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[589],E,E,45,[[[T]],[R[48]]]],[11,R[589],E,E,46,[[[T]],[R[48]]]],[11,R[589],E,E,11,[[[T]],[R[48]]]],[11,R[589],E,E,47,[[[T]],[R[48]]]],[11,R[589],E,E,48,[[[T]],[R[48]]]],[11,"custom",E,E,30,[[[T]],["self"]]],[11,"custom",E,E,30,[[[T]],["self"]]],[11,"clone",E,E,30,[[["self"]],["error"]]],[11,"clone",E,E,31,[[["self"]],["unitdeserializer"]]],[11,"clone",E,E,32,[[["self"]],["booldeserializer"]]],[11,"clone",E,E,33,[[["self"]],["i8deserializer"]]],[11,"clone",E,E,34,[[["self"]],["i16deserializer"]]],[11,"clone",E,E,35,[[["self"]],["i32deserializer"]]],[11,"clone",E,E,36,[[["self"]],["i64deserializer"]]],[11,"clone",E,E,37,[[["self"]],["isizedeserializer"]]],[11,"clone",E,E,38,[[["self"]],["u8deserializer"]]],[11,"clone",E,E,39,[[["self"]],["u16deserializer"]]],[11,"clone",E,E,40,[[["self"]],["u64deserializer"]]],[11,"clone",E,E,41,[[["self"]],["usizedeserializer"]]],[11,"clone",E,E,42,[[["self"]],["f32deserializer"]]],[11,"clone",E,E,43,[[["self"]],["f64deserializer"]]],[11,"clone",E,E,44,[[["self"]],["chardeserializer"]]],[11,"clone",E,E,45,[[["self"]],["u32deserializer"]]],[11,"clone",E,E,46,[[["self"]],["strdeserializer"]]],[11,"clone",E,E,11,[[["self"]],[R[590]]]],[11,"clone",E,E,47,[[["self"]],["stringdeserializer"]]],[11,"clone",E,E,48,[[["self"]],["cowstrdeserializer"]]],[11,"clone",E,E,12,[[["self"]],[R[591]]]],[11,"clone",E,E,13,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,14,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,15,[[["self"]],["self"]]],[11,"clone",E,E,16,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[415],E,29,[[["self"]],[R[571]]]],[11,"clone",E,E,10,[[["self"]],[R[416]]]],[11,R[744],E,E,29,[[],[R[571]]]],[11,"eq",R[568],E,30,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,30,[[["self"],["error"]],["bool"]]],[11,"eq",R[415],E,10,[[[R[416]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[416]],["self"]],["bool"]]],[11,"fmt",R[568],E,30,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",R[415],E,10,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[568],E,30,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,31,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,32,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,33,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,34,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,35,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,36,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,37,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,38,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,39,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,40,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,41,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,42,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,43,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,44,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,45,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,46,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,47,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,48,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[415],E,29,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,R[256],R[568],E,30,[[["self"]],["str"]]]],"p":[[8,"Error"],[8,R[432]],[8,R[436]],[8,R[402]],[8,R[403]],[8,R[407]],[8,R[408]],[8,R[410]],[8,R[411]],[8,R[412]],[4,R[592]],[3,R[593]],[3,R[594]],[3,R[595]],[3,R[596]],[3,R[597]],[3,R[598]],[8,"Error"],[8,"Expected"],[8,R[510]],[8,R[599]],[8,R[431]],[8,"Visitor"],[8,R[600]],[8,R[601]],[8,R[602]],[8,R[603]],[8,R[604]],[3,R[605]],[3,R[606]],[3,"Error"],[3,R[607]],[3,R[608]],[3,R[609]],[3,R[610]],[3,R[611]],[3,R[612]],[3,R[613]],[3,R[614]],[3,R[615]],[3,R[616]],[3,R[617]],[3,R[618]],[3,R[619]],[3,R[620]],[3,R[621]],[3,R[622]],[3,R[623]],[3,R[624]]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","i":[[24,R[432],"serde_derive",E,N,N],[24,R[510],E,E,N,N]],"p":[]};
searchIndex["serde_derive_internals"]={"doc":E,"i":[[3,"Ctxt",R[1766],E,N,N],[0,"ast",E,E,N,N],[3,R[1778],R[1776],E,N,N],[12,"ident",E,E,0,N],[12,"attrs",E,E,0,N],[12,"body",E,E,0,N],[12,R[1527],E,E,0,N],[3,"Variant",E,E,N,N],[12,"ident",E,E,1,N],[12,"attrs",E,E,1,N],[12,"style",E,E,1,N],[12,"fields",E,E,1,N],[3,"Field",E,E,N,N],[12,"ident",E,E,2,N],[12,"attrs",E,E,2,N],[12,"ty",E,E,2,N],[4,"Body",E,E,N,N],[13,"Enum",E,E,3,N],[13,"Struct",E,E,3,N],[4,"Style",E,E,N,N],[13,"Struct",E,E,4,N],[13,"Tuple",E,E,4,N],[13,"Newtype",E,E,4,N],[13,"Unit",E,E,4,N],[11,"from_ast",E,E,0,[[["ctxt"],[R[1515]]],["container"]]],[11,"all_fields",E,E,3,[[["self"]],[["box",["iterator"]],["iterator"]]]],[11,"has_getter",E,E,3,[[["self"]],["bool"]]],[0,"attr",R[1766],E,N,N],[3,"Name",R[1767],E,N,N],[3,R[1778],E,"Represents container (e.g. struct) attribute information",N,N],[3,"Variant",E,"Represents variant attribute information",N,N],[3,"Field",E,"Represents field attribute information",N,N],[4,"RenameRule",E,E,N,N],[13,"None",E,"Don't apply a default rename rule.",5,N],[13,"LowerCase",E,"Rename direct children to \"lowercase\" style.",5,N],[13,"UPPERCASE",E,"Rename direct children to \"UPPERCASE\" style.",5,N],[13,"PascalCase",E,"Rename direct children to \"PascalCase\" style, as typically…",5,N],[13,"CamelCase",E,"Rename direct children to \"camelCase\" style.",5,N],[13,"SnakeCase",E,"Rename direct children to \"snake_case\" style, as commonly…",5,N],[13,"ScreamingSnakeCase",E,"Rename direct children to \"SCREAMING_SNAKE_CASE\" style, as…",5,N],[13,"KebabCase",E,"Rename direct children to \"kebab-case\" style.",5,N],[13,"ScreamingKebabCase",E,"Rename direct children to \"SCREAMING-KEBAB-CASE\" style.",5,N],[4,"EnumTag",E,"Styles of representing an enum.",N,N],[13,"External",E,"The default.",6,N],[13,"Internal",E,"`#[serde(tag = \"type\")]`",6,N],[12,"tag",R[1768],E,6,N],[13,"Adjacent",R[1767],"`#[serde(tag = \"t\", content = \"c\")]`",6,N],[12,"tag",R[1768],E,6,N],[12,"content",E,E,6,N],[13,"None",R[1767],"`#[serde(untagged)]`",6,N],[4,"Identifier",E,"Whether this enum represents the fields of a struct or the…",N,N],[13,"No",E,"It does not.",7,N],[13,"Field",E,"This enum represents the fields of a struct. All of the…",7,N],[13,"Variant",E,"This enum represents the variants of an enum. All of the…",7,N],[4,"Default",E,"Represents the default to use for a field when…",N,N],[13,"None",E,"Field must always be specified because it does not have a…",8,N],[13,"Default",E,"The default is given by `std::default::Default::default()`.",8,N],[13,"Path",E,"The default is given by this function.",8,N],[5,"get_serde_meta_items",E,E,N,[[[R[1526]]],[["vec",[R[1532]]],["option",["vec"]]]]],[11,"serialize_name",E,R[1769],9,[[["self"]],["string"]]],[11,"deserialize_name",E,R[1769],9,[[["self"]],["string"]]],[11,"is_some",E,E,7,[[],["bool"]]],[11,"from_ast",E,"Extract out the `#[serde(...)]` attributes from an item.",10,[[["ctxt"],[R[1515]]],["self"]]],[11,"name",E,E,10,[[["self"]],["name"]]],[11,"rename_all",E,E,10,[[["self"]],[R[1770]]]],[11,"deny_unknown_fields",E,E,10,[[["self"]],["bool"]]],[11,R[744],E,E,10,[[["self"]],[R[744]]]],[11,"ser_bound",E,E,10,[[["self"]],["option"]]],[11,"de_bound",E,E,10,[[["self"]],["option"]]],[11,"tag",E,E,10,[[["self"]],["enumtag"]]],[11,"from_type",E,E,10,[[["self"]],[["option",["ty"]],["ty"]]]],[11,"into_type",E,E,10,[[["self"]],[["option",["ty"]],["ty"]]]],[11,"remote",E,E,10,[[["self"]],[["option",["path"]],["path"]]]],[11,R[1777],E,E,10,[[["self"]],[R[1777]]]],[11,"from_ast",E,E,11,[[["ctxt"],["variant"]],["self"]]],[11,"name",E,E,11,[[["self"]],["name"]]],[11,R[1771],E,E,11,[[["self"],[R[1770]]]]],[11,"rename_all",E,E,11,[[["self"]],[R[1770]]]],[11,R[1773],E,E,11,[[["self"]],["bool"]]],[11,R[1772],E,E,11,[[["self"]],["bool"]]],[11,"other",E,E,11,[[["self"]],["bool"]]],[11,R[1774],E,E,11,[[["self"]],[["option",["path"]],["path"]]]],[11,R[1775],E,E,11,[[["self"]],[["option",["path"]],["path"]]]],[11,"from_ast",E,"Extract out the `#[serde(...)]` attributes from a struct…",12,[[["ctxt"],["usize"],["field"],["option",["variant"]],[R[744]],["variant"]],["self"]]],[11,"name",E,E,12,[[["self"]],["name"]]],[11,R[1771],E,E,12,[[["self"],[R[1770]]]]],[11,R[1772],E,E,12,[[["self"]],["bool"]]],[11,R[1773],E,E,12,[[["self"]],["bool"]]],[11,"skip_serializing_if",E,E,12,[[["self"]],[["option",["path"]],["path"]]]],[11,R[744],E,E,12,[[["self"]],[R[744]]]],[11,R[1774],E,E,12,[[["self"]],[["option",["path"]],["path"]]]],[11,R[1775],E,E,12,[[["self"]],[["option",["path"]],["path"]]]],[11,"ser_bound",E,E,12,[[["self"]],["option"]]],[11,"de_bound",E,E,12,[[["self"]],["option"]]],[11,"borrowed_lifetimes",E,E,12,[[["self"]],["btreeset"]]],[11,"getter",E,E,12,[[["self"]],[["option",["path"]],["path"]]]],[11,"new",R[1766],E,13,[[],["self"]]],[11,"error",E,E,13,[[["self"],["display"]]]],[11,"check",E,E,13,[[],[[R[48],["string"]],["string"]]]],[11,"apply_to_variant",R[1767],E,5,[[["str"],["self"]],["string"]]],[11,"apply_to_field",E,E,5,[[["str"],["self"]],["string"]]],[11,"into",R[1766],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",R[1776],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",R[1767],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"drop",R[1766],E,13,[[["self"]]]],[11,"clone",R[1776],E,4,[[["self"]],["style"]]],[11,"clone",R[1767],E,7,[[["self"]],[R[1777]]]],[11,R[744],R[1766],E,13,[[],["ctxt"]]],[11,"eq",R[1767],E,8,[[[R[744]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[744]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1770]]],["bool"]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,R[815],E,E,5,[[["str"]],[R[48]]]]],"p":[[3,R[1778]],[3,"Variant"],[3,"Field"],[4,"Body"],[4,"Style"],[4,"RenameRule"],[4,"EnumTag"],[4,"Identifier"],[4,"Default"],[3,"Name"],[3,R[1778]],[3,"Variant"],[3,"Field"],[3,"Ctxt"]]};
searchIndex["serde_json"]={"doc":"Serde JSON","i":[[3,R[431],R[1361],R[1354],N,N],[3,R[1355],E,R[1356],N,N],[3,"Error",E,R[1360],N,N],[3,R[436],E,R[1363],N,N],[3,"Map",E,R[1362],N,N],[3,"Number",E,R[1351],N,N],[4,"Value",E,R[1374],N,N],[13,"Null",E,R[1375],0,N],[13,"Bool",E,R[1376],0,N],[13,"Number",E,R[1351],0,N],[13,"String",E,R[1377],0,N],[13,"Array",E,R[1378],0,N],[13,"Object",E,R[1379],0,N],[5,R[1352],E,R[1357],N,[[["r"]],[R[48]]]],[5,R[674],E,R[1358],N,[[],[R[48]]]],[5,R[815],E,R[1359],N,[[["str"]],[R[48]]]],[5,R[205],E,R[1369],N,[[[T]],[[R[48],["string"]],["string"]]]],[5,R[1370],E,R[1353],N,[[[T]],[[R[48],["string"]],["string"]]]],[5,"to_vec",E,R[1367],N,[[[T]],[[R[48],["vec"]],["vec",["u8"]]]]],[5,R[1368],E,R[1353],N,[[[T]],[[R[48],["vec"]],["vec",["u8"]]]]],[5,"to_writer",E,R[1364],N,[[["w"],[T]],[R[48]]]],[5,R[1365],E,R[1366],N,[[["w"],[T]],[R[48]]]],[5,R[1381],E,R[1382],N,[[["value"]],[["error"],[R[48],["error"]]]]],[5,"to_value",E,R[1380],N,[[[T]],[["value"],[R[48],["value","error"]],["error"]]]],[0,"de",E,"Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead",R[1385],"JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead",E,"JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead",E,"JSON input source that reads from a UTF-8 string.",N,N],[3,R[431],E,R[1354],N,N],[3,R[1355],E,R[1356],N,N],[5,R[1352],E,R[1357],N,[[["r"]],[R[48]]]],[5,R[674],E,R[1358],N,[[],[R[48]]]],[5,R[815],E,R[1359],N,[[["str"]],[R[48]]]],[8,"Read",E,"Trait used by the deserializer for iterating over input.…",N,N],[11,"new",E,"Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,R[1352],E,"Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,R[674],E,"Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,R[815],E,"Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",1,[[["self"]],[R[48]]]],[11,R[364],E,"Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new",E,"Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,R[1398],E,"Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error",R[1361],"When serializing or deserializing JSON goes wrong.",N,N],[3,"Error",R[1387],R[1360],N,N],[4,"Category",E,"Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io",E,"The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax",E,"The error was caused by input that was not syntactically…",3,N],[13,"Data",E,"The error was caused by input data that was semantically…",3,N],[13,"Eof",E,"The error was caused by prematurely reaching the end of…",3,N],[6,"Result",E,R[1386],N,N],[11,"line",E,"One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column",E,"One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify",E,"Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io",E,"Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax",E,"Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data",E,"Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof",E,"Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map",R[1361],"A map of String to serde_json::Value.",N,N],[3,"Map",R[1389],R[1362],N,N],[3,R[1405],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[1406],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut",E,"A mutable iterator over a serde_json::Map's entries.",N,N],[3,R[1690],E,"An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys",E,"An iterator over a serde_json::Map's keys.",N,N],[3,"Values",E,"An iterator over a serde_json::Map's values.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry.",5,N],[13,"Occupied",E,"An occupied Entry.",5,N],[11,"new",E,"Makes a new empty Map.",6,[[],["self"]]],[11,R[2094],E,"Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear",E,"Clears the map, removing all values.",6,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert",E,"Inserts a key-value pair into the map.",6,[[["value"],["self"],["string"]],[["value"],["option",["value"]]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len",E,"Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,R[677],E,"Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"key",E,"Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key",E,"Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key",E,"Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get",E,"Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut",E,"Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["value"],["self"]],["value"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser",R[1361],"Serialize a Rust data structure into JSON data.",N,N],[3,R[436],R[1388],R[1363],N,N],[3,R[1408],E,"This structure compacts a JSON value with no extra…",N,N],[3,R[1407],E,"This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape",E,"Represents a character escape code in a type-safe manner.",N,N],[13,"Quote",E,"An escaped quote `\"`",9,N],[13,"ReverseSolidus",E,"An escaped reverse solidus `\\`",9,N],[13,"Solidus",E,"An escaped solidus `/`",9,N],[13,"Backspace",E,"An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed",E,"An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed",E,"An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn",E,"An escaped carriage return character (usually escaped as…",9,N],[13,"Tab",E,"An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl",E,"An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer",E,R[1364],N,[[["w"],[T]],[R[48]]]],[5,R[1365],E,R[1366],N,[[["w"],[T]],[R[48]]]],[5,"to_vec",E,R[1367],N,[[[T]],[[R[48],["vec"]],["vec",["u8"]]]]],[5,R[1368],E,R[1353],N,[[[T]],[[R[48],["vec"]],["vec",["u8"]]]]],[5,R[205],E,R[1369],N,[[[T]],[[R[48],["string"]],["string"]]]],[5,R[1370],E,R[1353],N,[[[T]],[[R[48],["string"]],["string"]]]],[8,"Formatter",E,"This trait abstracts away serializing the JSON control…",N,N],[11,"write_null",E,"Writes a `null` value to the specified writer.",10,[[["w"],["self"]],[R[48]]]],[11,"write_bool",E,"Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],[R[48]]]],[11,"write_i8",E,R[1371],10,[[["w"],["self"],["i8"]],[R[48]]]],[11,R[282],E,R[1371],10,[[["w"],["self"],["i16"]],[R[48]]]],[11,R[284],E,R[1371],10,[[["w"],["self"],["i32"]],[R[48]]]],[11,R[285],E,R[1371],10,[[["w"],["self"],["i64"]],[R[48]]]],[11,"write_u8",E,R[1372],10,[[["w"],["self"],["u8"]],[R[48]]]],[11,R[275],E,R[1372],10,[[["w"],["self"],["u16"]],[R[48]]]],[11,R[277],E,R[1372],10,[[["w"],["self"],["u32"]],[R[48]]]],[11,R[278],E,R[1372],10,[[["w"],["self"],["u64"]],[R[48]]]],[11,R[287],E,R[1373],10,[[["w"],["self"],["f32"]],[R[48]]]],[11,R[289],E,R[1373],10,[[["w"],["self"],["f64"]],[R[48]]]],[11,"begin_string",E,"Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],[R[48]]]],[11,"end_string",E,"Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],[R[48]]]],[11,"write_string_fragment",E,"Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],[R[48]]]],[11,"write_char_escape",E,"Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],[R[48]]]],[11,R[1391],E,"Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],[R[48]]]],[11,"end_array",E,"Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],[R[48]]]],[11,R[1392],E,"Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],[R[48]]]],[11,R[1393],E,"Called after every array value.",10,[[["w"],["self"]],[R[48]]]],[11,R[1394],E,"Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],[R[48]]]],[11,"end_object",E,"Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],[R[48]]]],[11,R[1395],E,"Called before every object key.",10,[[["w"],["self"],["bool"]],[R[48]]]],[11,"end_object_key",E,"Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],[R[48]]]],[11,R[1396],E,"Called before every object value. A `:` should be written…",10,[[["w"],["self"]],[R[48]]]],[11,R[1397],E,"Called after every object value.",10,[[["w"],["self"]],[R[48]]]],[11,"new",E,"Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty",E,"Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter",E,"Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,R[906],E,"Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new",E,"Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent",E,"Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value",R[1361],"The Value enum, a loosely typed way of representing any…",N,N],[3,"Number",R[1390],R[1351],N,N],[4,"Value",E,R[1374],N,N],[13,"Null",E,R[1375],0,N],[13,"Bool",E,R[1376],0,N],[13,"Number",E,R[1351],0,N],[13,"String",E,R[1377],0,N],[13,"Array",E,R[1378],0,N],[13,"Object",E,R[1379],0,N],[5,"to_value",E,R[1380],N,[[[T]],[["value"],[R[48],["value","error"]],["error"]]]],[5,R[1381],E,R[1382],N,[[["value"]],[["error"],[R[48],["error"]]]]],[8,"Index",E,"A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get",E,"Index into a JSON array or map. A string index can be used…",0,[[["index"],["self"]],[["value"],["option",["value"]]]]],[11,"get_mut",E,"Mutably index into a JSON array or map. A string index can…",0,[[["index"],["self"]],[["option",["value"]],["value"]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,R[1383],E,"If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,R[1384],E,"If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"is_i64",R[1361],"Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64",E,"Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["f64"],["option",["f64"]]]]],[11,R[1589],E,"Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["option",["number"]],["number"]]]],[11,"new",R[1385],"Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new",E,"Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new",E,"Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result",R[1361],R[1386],N,N],[14,"json",E,"Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into",R[1385],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",R[1387],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[205],E,E,4,[[["self"]],["string"]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",R[1388],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",R[1389],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[364],E,E,6,[[],["i"]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",R[1361],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[205],E,E,13,[[["self"]],["string"]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",R[1390],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[205],E,E,0,[[["self"]],["string"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",R[1385],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",R[1387],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",R[1389],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[364],E,E,17,[[],["i"]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[364],E,E,18,[[],["i"]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[364],E,E,19,[[],["i"]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[364],E,E,20,[[],["i"]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[364],E,E,21,[[],["i"]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",R[1388],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,R[1391],E,E,12,[[["w"],["self"]],[R[48]]]],[11,"end_array",E,E,12,[[["w"],["self"]],[R[48]]]],[11,R[1392],E,E,12,[[["w"],["self"],["bool"]],[R[48]]]],[11,R[1393],E,E,12,[[["w"],["self"]],[R[48]]]],[11,R[1394],E,E,12,[[["w"],["self"]],[R[48]]]],[11,"end_object",E,E,12,[[["w"],["self"]],[R[48]]]],[11,R[1395],E,E,12,[[["w"],["self"],["bool"]],[R[48]]]],[11,R[1396],E,E,12,[[["w"],["self"]],[R[48]]]],[11,R[1397],E,E,12,[[["w"],["self"]],[R[48]]]],[11,"next",R[1385],E,14,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"peek",E,E,14,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"discard",E,E,14,[[["self"]]]],[11,R[1401],E,E,14,[[["self"]],[R[1401]]]],[11,R[1400],E,E,14,[[["self"]],[R[1401]]]],[11,R[1398],E,E,14,[[["self"]],["usize"]]],[11,"parse_str",E,E,14,[[["self"],["vec"]],[[R[1399],["str"]],[R[48],[R[1399]]]]]],[11,R[1402],E,E,14,[[["self"],["vec"]],[[R[1399]],[R[48],[R[1399]]]]]],[11,R[1403],E,E,14,[[["self"]],[R[48]]]],[11,"next",E,E,15,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"peek",E,E,15,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"discard",E,E,15,[[["self"]]]],[11,R[1401],E,E,15,[[["self"]],[R[1401]]]],[11,R[1400],E,E,15,[[["self"]],[R[1401]]]],[11,R[1398],E,E,15,[[["self"]],["usize"]]],[11,"parse_str",E,E,15,[[["self"],["vec"]],[[R[1399],["str"]],[R[48],[R[1399]]]]]],[11,R[1402],E,E,15,[[["self"],["vec"]],[[R[48],[R[1399]]],[R[1399]]]]],[11,R[1403],E,E,15,[[["self"]],[R[48]]]],[11,"next",E,E,16,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"peek",E,E,16,[[["self"]],[[R[48],["option"]],["option",["u8"]]]]],[11,"discard",E,E,16,[[["self"]]]],[11,R[1401],E,E,16,[[["self"]],[R[1401]]]],[11,R[1400],E,E,16,[[["self"]],[R[1401]]]],[11,R[1398],E,E,16,[[["self"]],["usize"]]],[11,"parse_str",E,E,16,[[["self"],["vec"]],[[R[1399],["str"]],[R[48],[R[1399]]]]]],[11,R[1402],E,E,16,[[["self"],["vec"]],[[R[48],[R[1399]]],[R[1399]]]]],[11,R[1403],E,E,16,[[["self"]],[R[48]]]],[11,"from",R[1390],E,0,[[["i8"]],["self"]]],[11,"from",E,E,0,[[["i16"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,0,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["isize"]],["self"]]],[11,"from",E,E,0,[[["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"]],["self"]]],[11,"from",E,E,0,[[["u32"]],["self"]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"from",E,E,0,[[["usize"]],["self"]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from",E,"Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from",E,"Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from",E,"Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from",E,"Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,"Convert map (with string keys) to `Value`",0,[[["map",["string","value"]],["string"],["value"]],["self"]]],[11,"from",E,"Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from",E,"Convert a slice to `Value`",0,[[],["self"]]],[11,"from",R[1361],E,13,[[["i8"]],["self"]]],[11,"from",E,E,13,[[["i16"]],["self"]]],[11,"from",E,E,13,[[["i32"]],["self"]]],[11,"from",E,E,13,[[["i64"]],["self"]]],[11,"from",E,E,13,[[["isize"]],["self"]]],[11,"from",E,E,13,[[["u8"]],["self"]]],[11,"from",E,E,13,[[["u16"]],["self"]]],[11,"from",E,E,13,[[["u32"]],["self"]]],[11,"from",E,E,13,[[["u64"]],["self"]]],[11,"from",E,E,13,[[["usize"]],["self"]]],[11,"next",R[1385],E,2,[[["self"]],[[R[48]],["option",[R[48]]]]]],[11,"next",R[1389],E,17,[[["self"]],["option"]]],[11,R[425],E,E,17,[[["self"]]]],[11,"next",E,E,18,[[["self"]],["option"]]],[11,R[425],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],["option"]]],[11,R[425],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],["option"]]],[11,R[425],E,E,20,[[["self"]]]],[11,"next",E,E,21,[[["self"]],["option"]]],[11,R[425],E,E,21,[[["self"]]]],[11,"extend",E,E,6,[[["self"],[T]]]],[11,R[364],E,E,6,[[]]],[11,R[746],E,E,17,[[["self"]],["option"]]],[11,R[746],E,E,18,[[["self"]],["option"]]],[11,R[746],E,E,19,[[["self"]],["option"]]],[11,R[746],E,E,20,[[["self"]],["option"]]],[11,R[746],E,E,21,[[["self"]],["option"]]],[11,"len",E,E,17,[[["self"]],["usize"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,"clone",R[1387],E,3,[[["self"]],["category"]]],[11,"clone",R[1389],E,6,[[["self"]],["self"]]],[11,"clone",R[1388],E,22,[[["self"]],["compactformatter"]]],[11,"clone",E,E,12,[[["self"]],["prettyformatter"]]],[11,"clone",R[1390],E,0,[[["self"]],["value"]]],[11,"clone",R[1361],E,13,[[["self"]],["number"]]],[11,R[744],R[1389],E,6,[[],["self"]]],[11,R[744],R[1388],E,12,[[],["self"]]],[11,R[744],R[1390],E,0,[[],["value"]]],[11,"eq",R[1387],E,3,[[["category"],["self"]],["bool"]]],[11,"eq",R[1389],E,6,[[["self"]],["bool"]]],[11,"eq",R[1390],E,0,[[["value"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["value"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["i8"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,0,[[["i64"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["isize"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,0,[[["u16"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["u32"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,0,[[["f32"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["f64"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["bool"]],["bool"]]],[11,"eq",R[1361],E,13,[[["self"],["number"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["number"]],["bool"]]],[11,"fmt",R[1387],E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1390],"Display a JSON value as a string.",0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1361],E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1387],E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1389],E,6,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",R[1388],E,22,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1390],E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[1361],E,13,[[["self"],[R[176]]],[R[48]]]],[11,R[815],R[1390],E,0,[[["str"]],[["value"],[R[48],["value","error"]],["error"]]]],[11,"index",R[1389],E,6,[[["self"],["q"]],["value"]]],[11,"index",R[1390],"Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,R[2199],R[1389],E,6,[[["self"],["q"]],["value"]]],[11,R[2199],R[1390],"Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[784],R[1389],E,6,[[[T]],["self"]]],[11,R[784],R[1390],"Convert an iteratable type to a `Value`",0,[[[R[400]]],["self"]]],[11,R[256],R[1387],E,4,[[["self"]],["str"]]],[11,"cause",E,E,4,[[["self"]],[["option",["error"]],["error"]]]],[11,R[434],R[1389],E,6,[[["s"],["self"]],[R[48]]]],[11,R[434],R[1390],E,0,[[["s"],["self"]],[R[48]]]],[11,R[434],R[1361],E,13,[[["s"],["self"]],[R[48]]]],[11,"custom",R[1387],E,4,[[["display"]],["error"]]],[11,R[418],R[1389],E,6,[[["d"]],[R[48]]]],[11,R[418],R[1390],E,0,[[["d"]],[["value"],[R[48],["value"]]]]],[11,R[418],R[1361],E,13,[[["d"]],[[R[48],["number"]],["number"]]]],[11,R[514],R[1390],E,0,[[["v"]],[[R[48],["error"]],["error"]]]],[11,R[544],E,E,0,[[["v"]],[[R[48],["error"]],["error"]]]],[11,R[560],E,E,0,[[["str"],["v"]],[[R[48],["error"]],["error"]]]],[11,R[550],E,E,0,[[["str"],["v"]],[R[48]]]],[11,R[516],E,E,0,[[["v"]],[R[48]]]],[11,R[518],E,E,0,[[["v"]],[R[48]]]],[11,R[520],E,E,0,[[["v"]],[R[48]]]],[11,R[522],E,E,0,[[["v"]],[R[48]]]],[11,R[524],E,E,0,[[["v"]],[R[48]]]],[11,R[526],E,E,0,[[["v"]],[R[48]]]],[11,R[528],E,E,0,[[["v"]],[R[48]]]],[11,R[530],E,E,0,[[["v"]],[R[48]]]],[11,R[532],E,E,0,[[["v"]],[R[48]]]],[11,R[534],E,E,0,[[["v"]],[R[48]]]],[11,R[536],E,E,0,[[["v"]],[R[48]]]],[11,R[538],E,E,0,[[["v"]],[R[48]]]],[11,R[540],E,E,0,[[["v"]],[R[48]]]],[11,R[541],E,E,0,[[["v"]],[R[48]]]],[11,R[542],E,E,0,[[["v"]],[R[48]]]],[11,R[543],E,E,0,[[["v"]],[R[48]]]],[11,R[546],E,E,0,[[["v"]],[R[48]]]],[11,R[548],E,E,0,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,0,[[["v"]],[R[48]]]],[11,R[553],E,E,0,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,0,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,0,[[["v"]],[R[48]]]],[11,R[558],E,E,0,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,0,[[["v"]],[R[48]]]],[11,R[564],E,E,0,[[["v"]],[R[48]]]],[11,R[514],R[1361],E,13,[[["v"]],[[R[48],["error"]],["error"]]]],[11,R[516],E,E,13,[[["v"]],[R[48]]]],[11,R[518],E,E,13,[[["v"]],[R[48]]]],[11,R[520],E,E,13,[[["v"]],[R[48]]]],[11,R[522],E,E,13,[[["v"]],[R[48]]]],[11,R[524],E,E,13,[[["v"]],[R[48]]]],[11,R[526],E,E,13,[[["v"]],[R[48]]]],[11,R[528],E,E,13,[[["v"]],[R[48]]]],[11,R[530],E,E,13,[[["v"]],[R[48]]]],[11,R[532],E,E,13,[[["v"]],[R[48]]]],[11,R[534],E,E,13,[[["v"]],[R[48]]]],[11,R[536],E,E,13,[[["v"]],[R[48]]]],[11,R[538],E,E,13,[[["v"]],[R[48]]]],[11,R[540],E,E,13,[[["v"]],[R[48]]]],[11,R[541],E,E,13,[[["v"]],[R[48]]]],[11,R[542],E,E,13,[[["v"]],[R[48]]]],[11,R[543],E,E,13,[[["v"]],[R[48]]]],[11,R[544],E,E,13,[[["v"]],[R[48]]]],[11,R[546],E,E,13,[[["v"]],[R[48]]]],[11,R[548],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[550],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[552],E,E,13,[[["v"]],[R[48]]]],[11,R[553],E,E,13,[[["usize"],["v"]],[R[48]]]],[11,R[554],E,E,13,[[["str"],["usize"],["v"]],[R[48]]]],[11,R[556],E,E,13,[[["v"]],[R[48]]]],[11,R[558],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[560],E,E,13,[[["str"],["v"]],[R[48]]]],[11,R[562],E,E,13,[[["v"]],[R[48]]]],[11,R[564],E,E,13,[[["v"]],[R[48]]]],[11,"custom",R[1387],E,4,[[["display"]],["error"]]],[11,R[1404],E,E,4,[[[R[417]],[R[416]]],["self"]]]],"p":[[4,"Value"],[3,R[431]],[3,R[1355]],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,R[1405]],[3,R[1406]],[4,"CharEscape"],[8,"Formatter"],[3,R[436]],[3,R[1407]],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,R[1690]],[3,"Keys"],[3,"Values"],[3,R[1408]]]};
searchIndex["slab"]={"doc":E,"i":[[3,"Slab","slab","A preallocated chunk of memory for storing objects of the…",N,N],[3,"SlabIter",E,E,N,N],[3,R[690],E,E,N,N],[8,"Index",E,"Slab can be indexed by any type implementing `Index` trait.",N,N],[10,R[689],E,E,0,[[["usize"]],["self"]]],[10,"as_usize",E,E,0,[[["self"]],["usize"]]],[11,"new",E,E,1,[[["usize"]],["slab"]]],[11,"new_starting_at",E,E,1,[[["i"],["usize"]],["slab"]]],[11,"count",E,E,1,[[["self"]],["usize"]]],[11,R[677],E,E,1,[[["self"]],["bool"]]],[11,R[665],E,E,1,[[["self"]],["usize"]]],[11,R[666],E,E,1,[[["self"]],["bool"]]],[11,R[801],E,E,1,[[["i"],["self"]],["bool"]]],[11,"get",E,E,1,[[["i"],["self"]],[[T],["option"]]]],[11,"get_mut",E,E,1,[[["self"],["i"]],[[T],["option"]]]],[11,"insert",E,E,1,[[["self"],[T]],[R[48]]]],[11,"insert_with",E,"Like `insert` but for objects that require newly allocated…",1,[[["self"],["f"]],["option"]]],[11,"remove",E,"Releases the given slot",1,[[["self"],["i"]],["option"]]],[11,"replace",E,E,1,[[["self"],["i"],[T]],["option"]]],[11,"replace_with",E,"Execute a function on the value in the slot and put the…",1,[[["self"],["i"],["f"]],[R[48]]]],[11,"retain",E,"Retain only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"iter",E,E,1,[[["self"]],["slabiter"]]],[11,"iter_mut",E,E,1,[[["self"]],["slabmutiter"]]],[11,"clear",E,"Empty the slab, by freeing all entries",1,[[["self"]]]],[11,"grow",E,"Grow the slab, by adding `entries_num`",1,[[["self"],["usize"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[364],E,E,3,[[],["i"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"next",E,E,2,[[["self"]],[["option"],[T]]]],[11,"next",E,E,3,[[["self"]],[[T],["option"]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"index",E,E,1,[[["i"],["self"]],[T]]],[11,R[2199],E,E,1,[[["self"],["i"]],[T]]]],"p":[[8,"Index"],[3,"Slab"],[3,"SlabIter"],[3,R[690]]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","i":[[4,R[648],"strsim",E,N,N],[13,"DifferentLengthArgs",E,E,0,N],[5,"hamming",E,"Calculates the number of positions in the two strings…",N,[[["str"]],["hammingresult"]]],[5,"jaro",E,"Calculates the Jaro similarity between two strings. The…",N,[[["str"]],["f64"]]],[5,"jaro_against_vec",E,"Calculates the Jaro distance between a string and each…",N,[[["str"]],[["f64"],["vec",["f64"]]]]],[5,"jaro_winkler",E,"Like Jaro but gives a boost to strings that have a common…",N,[[["str"]],["f64"]]],[5,"jaro_winkler_against_vec",E,"Calculates the Jaro-Winkler distances between a string and…",N,[[["str"]],[["f64"],["vec",["f64"]]]]],[5,"levenshtein",E,"Calculates the minimum number of insertions, deletions,…",N,[[["str"]],["usize"]]],[5,"levenshtein_against_vec",E,"Calculates the Levenshtein distance between a string and…",N,[[["str"]],[["usize"],["vec",["usize"]]]]],[5,"osa_distance",E,"Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"]],["usize"]]],[5,"osa_distance_against_vec",E,"Calculates the optimal string alignment distance between a…",N,[[["str"]],[["usize"],["vec",["usize"]]]]],[5,"damerau_levenshtein",E,"Like optimal string alignment, but substrings can be…",N,[[["str"]],["usize"]]],[5,"damerau_levenshtein_against_vec",E,"Calculates the Damerau-Levenshtein distance between a…",N,[[["str"]],[["usize"],["vec",["usize"]]]]],[6,"HammingResult",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"eq",E,E,0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]]],"p":[[4,R[648]]]};
searchIndex["syn"]={"doc":E,"i":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have…",N,N],[12,"style",E,E,0,N],[12,"value",E,E,0,N],[12,"is_sugared_doc",E,E,0,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"ident",E,"Name of the field, if any.",1,N],[12,"vis",E,"Visibility of the field.",1,N],[12,"attrs",E,"Attributes tagged on the field.",1,N],[12,"ty",E,"Type of the field.",1,N],[3,"Variant",E,"An enum variant.",N,N],[12,"ident",E,"Name of the variant.",2,N],[12,"attrs",E,"Attributes tagged on the variant.",2,N],[12,"data",E,"Type of variant.",2,N],[12,"discriminant",E,"Explicit discriminant, e.g. `Foo = 1`",2,N],[3,"Generics",E,"Represents lifetimes and type parameters attached to a…",N,N],[12,"lifetimes",E,E,3,N],[12,"ty_params",E,E,3,N],[12,"where_clause",E,E,3,N],[3,"Lifetime",E,E,N,N],[12,"ident",E,E,4,N],[3,R[1542],E,"A lifetime definition, e.g. `'a: 'b+'c+'d`",N,N],[12,"attrs",E,E,5,N],[12,R[1528],E,E,5,N],[12,"bounds",E,E,5,N],[3,"TyParam",E,"A generic type parameter, e.g. `T: Into<String>`.",N,N],[12,"attrs",E,E,6,N],[12,"ident",E,E,6,N],[12,"bounds",E,E,6,N],[12,R[744],E,E,6,N],[3,R[1543],E,"A type bound.",N,N],[12,R[1514],E,"Any lifetimes from a `for` binding",7,N],[12,"bounded_ty",E,"The type being bounded",7,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",7,N],[3,R[1544],E,"A `where` clause in a definition",N,N],[12,"predicates",E,E,8,N],[3,R[1545],E,"An equality predicate (unsupported).",N,N],[12,"lhs_ty",E,E,9,N],[12,"rhs_ty",E,E,9,N],[3,R[1546],E,"A lifetime predicate.",N,N],[12,R[1528],E,E,10,N],[12,"bounds",E,E,10,N],[3,R[1560],E,R[1513],N,N],[3,"Turbofish",E,"Returned by `TyGenerics::as_turbofish`.",N,N],[3,"TyGenerics",E,R[1513],N,N],[3,"Ident",E,E,N,N],[3,"ByteStrLit",E,E,N,N],[12,"value",E,E,11,N],[12,"style",E,E,11,N],[3,"FloatLit",E,E,N,N],[12,"value",E,E,12,N],[12,"suffix",E,E,12,N],[3,"IntLit",E,E,N,N],[12,"value",E,E,13,N],[12,"suffix",E,E,13,N],[3,"StrLit",E,E,N,N],[12,"value",E,E,14,N],[12,"style",E,E,14,N],[3,"Delimited",E,E,N,N],[12,"delim",E,"The type of delimiter",15,N],[12,"tts",E,"The delimited sequence of token trees",15,N],[3,"Mac",E,"Represents a macro invocation. The Path indicates which…",N,N],[12,"path",E,E,16,N],[12,"tts",E,E,16,N],[3,R[1547],E,"Struct or enum sent to a `proc_macro_derive` macro.",N,N],[12,"ident",E,"Name of the struct or enum.",17,N],[12,"vis",E,"Visibility of the struct or enum.",17,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",17,N],[12,R[1527],E,"Generics required to complete the definition.",17,N],[12,"body",E,"Data within the struct or enum.",17,N],[3,R[1548],E,"A path like `Foo<'a, T>`",N,N],[12,"lifetimes",E,"The lifetime parameters for this path segment.",18,N],[12,"types",E,"The type parameters for this path segment, if present.",18,N],[12,"bindings",E,"Bindings (equality constraints) on associated types, if…",18,N],[3,"BareFnArg",E,"An argument in a function type.",N,N],[12,"name",E,E,19,N],[12,"ty",E,E,19,N],[3,"BareFnTy",E,E,N,N],[12,"unsafety",E,E,20,N],[12,"abi",E,E,20,N],[12,"lifetimes",E,E,20,N],[12,"inputs",E,E,20,N],[12,"output",E,E,20,N],[12,"variadic",E,E,20,N],[3,"MutTy",E,E,N,N],[12,"ty",E,E,21,N],[12,R[1539],E,E,21,N],[3,R[1549],E,"A path like `Foo(A,B) -> C`",N,N],[12,"inputs",E,"`(A, B)`",22,N],[12,"output",E,"`C`",22,N],[3,"Path",E,"A \"Path\" is essentially Rust's notion of a name.",N,N],[12,"global",E,"A `::foo` path, is relative to the crate root rather than…",23,N],[12,"segments",E,"The segments in the path: the things separated by `::`.",23,N],[3,R[1550],E,"A segment of a path: an identifier, an optional lifetime,…",N,N],[12,"ident",E,"The identifier portion of this path segment.",24,N],[12,"parameters",E,"Type/lifetime parameters attached to this path. They come…",24,N],[3,R[1551],E,E,N,N],[12,R[1514],E,"The `'a` in `<'a> Foo<&'a T>`",25,N],[12,"trait_ref",E,"The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,N],[3,"QSelf",E,"The explicit Self type in a \"qualified path\". The actual…",N,N],[12,"ty",E,E,26,N],[12,R[1401],E,E,26,N],[3,R[1552],E,"Bind a type to an associated type: `A=Foo`.",N,N],[12,"ident",E,E,27,N],[12,"ty",E,E,27,N],[4,"AttrStyle",E,"Distinguishes between Attributes that decorate items and…",N,N],[13,"Outer",E,"Attribute of the form `#![...]`.",28,N],[13,"Inner",E,"Attribute of the form `#[...]`.",28,N],[4,"MetaItem",E,"A compile-time attribute item.",N,N],[13,"Word",E,"Word meta item.",29,N],[13,"List",E,"List meta item.",29,N],[13,"NameValue",E,"Name-value meta item.",29,N],[4,R[1553],E,"Possible values inside of compile-time attribute lists.",N,N],[13,"MetaItem",E,"A full `MetaItem`.",30,N],[13,"Literal",E,"A Rust literal.",30,N],[4,"ConstExpr",E,E,N,N],[13,"Call",E,"A function call",31,N],[13,"Binary",E,"A binary operation (For example: `a + b`, `a * b`)",31,N],[13,"Unary",E,"A unary operation (For example: `!x`, `*x`)",31,N],[13,"Lit",E,"A literal (For example: `1`, `\"foo\"`)",31,N],[13,"Cast",E,"A cast (`foo as f64`)",31,N],[13,"Path",E,"Variable reference, possibly containing `::` and/or type…",31,N],[13,"Index",E,"An indexing operation (`foo[2]`)",31,N],[13,"Paren",E,"No-op: used solely so we can pretty-print faithfully",31,N],[13,"Other",E,"If compiling with full support for expression syntax, any…",31,N],[4,R[1554],E,"Data stored within an enum variant or struct.",N,N],[13,"Struct",E,"Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,N],[13,"Tuple",E,"Tuple variant, e.g. `Some(T)`.",32,N],[13,"Unit",E,"Unit variant, e.g. `None`.",32,N],[4,"Visibility",E,"Visibility level of an item.",N,N],[13,"Public",E,"Public, i.e. `pub`.",33,N],[13,"Crate",E,"Crate-visible, i.e. `pub(crate)`.",33,N],[13,"Restricted",E,"Restricted, e.g. `pub(some::module)`.",33,N],[13,"Inherited",E,"Inherited, i.e. private.",33,N],[4,R[1555],E,"A modifier on a bound, currently this is only used for…",N,N],[13,"None",E,E,34,N],[13,"Maybe",E,E,34,N],[4,R[1556],E,"The AST represents all type param bounds as types.…",N,N],[13,"Trait",E,E,35,N],[13,"Region",E,E,35,N],[4,R[1557],E,"A single predicate in a `where` clause",N,N],[13,"BoundPredicate",E,"A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,N],[13,"RegionPredicate",E,"A lifetime predicate, e.g. `'a: 'b+'c`",36,N],[13,"EqPredicate",E,"An equality predicate (unsupported)",36,N],[4,"FloatTy",E,E,N,N],[13,"F32",E,E,37,N],[13,"F64",E,E,37,N],[13,"Unsuffixed",E,E,37,N],[4,"IntTy",E,E,N,N],[13,"Isize",E,E,38,N],[13,"I8",E,E,38,N],[13,"I16",E,E,38,N],[13,"I32",E,E,38,N],[13,"I64",E,E,38,N],[13,"Usize",E,E,38,N],[13,"U8",E,E,38,N],[13,"U16",E,E,38,N],[13,"U32",E,E,38,N],[13,"U64",E,E,38,N],[13,"Unsuffixed",E,E,38,N],[4,"Lit",E,"Literal kind.",N,N],[13,"Str",E,"A string literal (`\"foo\"`)",39,N],[13,"ByteStr",E,"A byte string (`b\"foo\"`)",39,N],[13,"Byte",E,"A byte char (`b'f'`)",39,N],[13,"Char",E,"A character literal (`'a'`)",39,N],[13,"Int",E,"An integer literal (`1`)",39,N],[13,"Float",E,"A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,N],[13,"Bool",E,"A boolean literal",39,N],[4,"StrStyle",E,E,N,N],[13,"Cooked",E,"A regular string, like `\"foo\"`",40,N],[13,"Raw",E,"A raw string, like `r##\"foo\"##`",40,N],[4,"BinOpToken",E,E,N,N],[13,"Plus",E,E,41,N],[13,"Minus",E,E,41,N],[13,"Star",E,E,41,N],[13,"Slash",E,E,41,N],[13,"Percent",E,E,41,N],[13,"Caret",E,E,41,N],[13,"And",E,E,41,N],[13,"Or",E,E,41,N],[13,"Shl",E,E,41,N],[13,"Shr",E,E,41,N],[4,"DelimToken",E,"A delimiter token",N,N],[13,"Paren",E,"A round parenthesis: `(` or `)`",42,N],[13,"Bracket",E,"A square bracket: `[` or `]`",42,N],[13,"Brace",E,"A curly brace: `{` or `}`",42,N],[4,"Token",E,E,N,N],[13,"Eq",E,E,43,N],[13,"Lt",E,E,43,N],[13,"Le",E,E,43,N],[13,"EqEq",E,E,43,N],[13,"Ne",E,E,43,N],[13,"Ge",E,E,43,N],[13,"Gt",E,E,43,N],[13,"AndAnd",E,E,43,N],[13,"OrOr",E,E,43,N],[13,"Not",E,E,43,N],[13,"Tilde",E,E,43,N],[13,"BinOp",E,E,43,N],[13,"BinOpEq",E,E,43,N],[13,"At",E,E,43,N],[13,"Dot",E,E,43,N],[13,"DotDot",E,E,43,N],[13,"DotDotDot",E,E,43,N],[13,"Comma",E,E,43,N],[13,"Semi",E,E,43,N],[13,"Colon",E,E,43,N],[13,"ModSep",E,E,43,N],[13,"RArrow",E,E,43,N],[13,"LArrow",E,E,43,N],[13,"FatArrow",E,E,43,N],[13,"Pound",E,E,43,N],[13,"Dollar",E,E,43,N],[13,"Question",E,E,43,N],[13,"Literal",E,E,43,N],[13,"Ident",E,E,43,N],[13,"Underscore",E,E,43,N],[13,"Lifetime",E,E,43,N],[13,"DocComment",E,E,43,N],[4,"TokenTree",E,"When the main rust parser encounters a syntax-extension…",N,N],[13,"Token",E,"A single token",44,N],[13,"Delimited",E,"A delimited sequence of token trees",44,N],[4,"Body",E,"Body of a derived struct or enum.",N,N],[13,"Enum",E,"It's an enum.",45,N],[13,"Struct",E,"It's a struct.",45,N],[4,"BinOp",E,E,N,N],[13,"Add",E,"The `+` operator (addition)",46,N],[13,"Sub",E,"The `-` operator (subtraction)",46,N],[13,"Mul",E,"The `*` operator (multiplication)",46,N],[13,"Div",E,"The `/` operator (division)",46,N],[13,"Rem",E,"The `%` operator (modulus)",46,N],[13,"And",E,"The `&&` operator (logical and)",46,N],[13,"Or",E,"The `||` operator (logical or)",46,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",46,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",46,N],[13,"BitOr",E,"The `|` operator (bitwise or)",46,N],[13,"Shl",E,"The `<<` operator (shift left)",46,N],[13,"Shr",E,"The `>>` operator (shift right)",46,N],[13,"Eq",E,"The `==` operator (equality)",46,N],[13,"Lt",E,"The `<` operator (less than)",46,N],[13,"Le",E,"The `<=` operator (less than or equal to)",46,N],[13,"Ne",E,"The `!=` operator (not equal to)",46,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",46,N],[13,"Gt",E,"The `>` operator (greater than)",46,N],[4,"UnOp",E,E,N,N],[13,"Deref",E,"The `*` operator for dereferencing",47,N],[13,"Not",E,"The `!` operator for logical inversion",47,N],[13,"Neg",E,"The `-` operator for negation",47,N],[4,"Abi",E,E,N,N],[13,"Named",E,E,48,N],[13,"Rust",E,E,48,N],[4,R[1558],E,E,N,N],[13,"Default",E,"Return type is not specified.",49,N],[13,"Ty",E,"Everything else",49,N],[4,"Mutability",E,E,N,N],[13,"Mutable",E,E,50,N],[13,"Immutable",E,E,50,N],[4,R[1559],E,"Parameters of a path segment.",N,N],[13,"AngleBracketed",E,"The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,N],[13,"Parenthesized",E,"The `(A, B)` and `C` in `Foo(A, B) -> C`",51,N],[4,"Ty",E,"The different kinds of types recognized by the compiler",N,N],[13,"Slice",E,"A variable-length array (`[T]`)",52,N],[13,"Array",E,"A fixed length array (`[T; n]`)",52,N],[13,"Ptr",E,"A raw pointer (`*const T` or `*mut T`)",52,N],[13,"Rptr",E,"A reference (`&'a T` or `&'a mut T`)",52,N],[13,"BareFn",E,"A bare function (e.g. `fn(usize) -> bool`)",52,N],[13,"Never",E,"The never type (`!`)",52,N],[13,"Tup",E,"A tuple (`(A, B, C, D, ...)`)",52,N],[13,"Path",E,"A path (`module::module::...::Type`), optionally…",52,N],[13,"TraitObject",E,"A trait object type `Bound1 + Bound2 + Bound3` where…",52,N],[13,"ImplTrait",E,"An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",52,N],[13,"Paren",E,"No-op; kept solely so that we can pretty-print faithfully",52,N],[13,"Infer",E,"TyKind::Infer means the type should be inferred instead of…",52,N],[13,"Mac",E,"A macro in the type position.",52,N],[4,"Unsafety",E,E,N,N],[13,"Unsafe",E,E,53,N],[13,"Normal",E,E,53,N],[5,"parse_derive_input",E,E,N,[[["str"]],[[R[48],[R[1515],"string"]],[R[1515]],["string"]]]],[5,"parse_type",E,E,N,[[["str"]],[["ty"],[R[48],["ty","string"]],["string"]]]],[5,"parse_path",E,E,N,[[["str"]],[["path"],["string"],[R[48],["path","string"]]]]],[5,"parse_where_clause",E,E,N,[[["str"]],[[R[1516]],["string"],[R[48],[R[1516],"string"]]]]],[5,"parse_token_trees",E,E,N,[[["str"]],[[R[48],["vec","string"]],["string"],["vec",[R[1530]]]]]],[5,"parse_ident",E,E,N,[[["str"]],[["ident"],[R[48],["ident","string"]],["string"]]]],[5,"parse_ty_param_bound",E,E,N,[[["str"]],[[R[1517]],[R[48],[R[1517],"string"]],["string"]]]],[5,"parse_outer_attr",E,E,N,[[["str"]],[[R[1526]],["string"],[R[48],[R[1526],"string"]]]]],[11,"name",E,E,0,[[["self"]],["str"]]],[11,"name",E,"Name of the item.",29,[[["self"]],["str"]]],[11,"fields",E,"Slice containing the fields stored in the variant.",32,[[["self"]]]],[11,"fields_mut",E,"Mutable slice containing the fields stored in the variant.",32,[[["self"]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",3,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",54,[[["self"]],["turbofish"]]],[11,"new",E,E,4,[[["into",["ident"]],["ident"]],["self"]]],[11,"new",E,E,5,[[["into",["ident"]],["ident"]],["self"]]],[11,"none",E,E,8,[[],["self"]]],[11,"new",E,E,55,[[["into",["ident"]],["ident"]],["self"]]],[11,"op",E,E,46,[[["self"]],["str"]]],[11,"assign_op",E,E,46,[[["self"]],[["option",["str"]],["str"]]]],[11,"op",E,E,47,[[["self"]],["str"]]],[11,"none",E,E,51,[[],["self"]]],[11,R[677],E,E,51,[[["self"]],["bool"]]],[0,"visit",E,"AST walker. Each overridden visit method has full control…",N,N],[5,"walk_opt_ident","syn::visit",E,N,[[["option"],["v"]]]],[5,"walk_lifetime_def",E,E,N,[[[R[1521]],["v"]]]],[5,"walk_poly_trait_ref",E,E,N,[[[R[1518]],[R[1519]],["v"]]]],[5,"walk_derive_input",E,E,N,[[["v"],[R[1515]]]]],[5,"walk_variant",E,E,N,[[["variant"],["v"],[R[1527]]]]],[5,"walk_ty",E,E,N,[[["v"],["ty"]]]],[5,"walk_path",E,E,N,[[["path"],["v"]]]],[5,"walk_path_segment",E,E,N,[[[R[1522]],["v"]]]],[5,"walk_path_parameters",E,E,N,[[[R[1523]],["v"]]]],[5,"walk_assoc_type_binding",E,E,N,[[["v"],[R[1524]]]]],[5,"walk_ty_param_bound",E,E,N,[[["v"],[R[1517]]]]],[5,"walk_generics",E,E,N,[[["v"],[R[1527]]]]],[5,"walk_fn_ret_ty",E,E,N,[[[R[1525]],["v"]]]],[5,"walk_variant_data",E,E,N,[[["v"],[R[1520]]]]],[5,"walk_field",E,E,N,[[["v"],["field"]]]],[5,"walk_const_expr",E,E,N,[[["v"],[R[1533]]]]],[5,"walk_mac",E,E,N,[[["v"],["mac"]]]],[8,"Visitor",E,"Each method of the Visitor trait is a hook to be…",N,N],[11,"visit_ident",E,E,56,[[["self"],["ident"]]]],[11,"visit_derive_input",E,E,56,[[["self"],[R[1515]]]]],[11,"visit_ty",E,E,56,[[["self"],["ty"]]]],[11,"visit_generics",E,E,56,[[["self"],[R[1527]]]]],[11,"visit_ty_param_bound",E,E,56,[[["self"],[R[1517]]]]],[11,"visit_poly_trait_ref",E,E,56,[[[R[1518]],["self"],[R[1519]]]]],[11,"visit_variant_data",E,E,56,[[[R[1527]],["self"],[R[1520]],["ident"]]]],[11,"visit_field",E,E,56,[[["self"],["field"]]]],[11,"visit_variant",E,E,56,[[["self"],["variant"],[R[1527]]]]],[11,"visit_lifetime",E,E,56,[[["self"],[R[1528]]]]],[11,"visit_lifetime_def",E,E,56,[[["self"],[R[1521]]]]],[11,"visit_path",E,E,56,[[["self"],["path"]]]],[11,"visit_path_segment",E,E,56,[[[R[1522]],["self"]]]],[11,"visit_path_parameters",E,E,56,[[[R[1523]],["self"]]]],[11,"visit_assoc_type_binding",E,E,56,[[["self"],[R[1524]]]]],[11,"visit_attribute",E,E,56,[[[R[1526]],["self"]]]],[11,"visit_fn_ret_ty",E,E,56,[[["self"],[R[1525]]]]],[11,"visit_const_expr",E,E,56,[[["self"],[R[1533]]]]],[11,"visit_lit",E,E,56,[[["self"],["lit"]]]],[11,"visit_mac",E,E,56,[[["self"],["mac"]]]],[0,"parse","syn","This module contains a set of exported nom parsers which…",N,N],[4,"IResult",R[1541],R[1561],N,N],[13,"Done",E,R[1562],57,N],[13,"Error",E,R[1563],57,N],[5,"lit",E,E,N,[[["str"]],[["str"],["iresult",["str","lit"]],["lit"]]]],[5,"string",E,E,N,[[["str"]],[["str"],["strlit"],["iresult",["str","strlit"]]]]],[5,"byte_string",E,E,N,[[["str"]],[["str"],[R[1529]],["iresult",["str",R[1529]]]]]],[5,"byte",E,E,N,[[["str"]],[["iresult",["str","u8"]],["str"],["u8"]]]],[5,"character",E,E,N,[[["str"]],[["str"],["char"],["iresult",["str","char"]]]]],[5,"float",E,E,N,[[["str"]],[["str"],["floatlit"],["iresult",["str","floatlit"]]]]],[5,"int",E,E,N,[[["str"]],[["str"],["iresult",["str","intlit"]],["intlit"]]]],[5,"boolean",E,E,N,[[["str"]],[["str"],["iresult",["str","bool"]],["bool"]]]],[5,"ty",E,E,N,[[["str"]],[["iresult",["str","ty"]],["str"],["ty"]]]],[5,"path",E,E,N,[[["str"]],[["iresult",["str","path"]],["str"],["path"]]]],[5,"tt",E,E,N,[[["str"]],[["str"],["iresult",["str",R[1530]]],[R[1530]]]]],[5,"ident",E,E,N,[[["str"]],[["str"],["iresult",["str","ident"]],["ident"]]]],[5,R[1528],E,E,N,[[["str"]],[["iresult",["str",R[1528]]],["str"],[R[1528]]]]],[11,"into","syn",E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[45],E,E,58,[[[U]],[R[48]]]],[11,R[46],E,E,58,[[],[R[48]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[51]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[45],E,E,59,[[[U]],[R[48]]]],[11,R[46],E,E,59,[[],[R[48]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[51]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[45],E,E,54,[[[U]],[R[48]]]],[11,R[46],E,E,54,[[],[R[48]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[51]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[43],E,E,55,[[["self"]],[T]]],[11,R[44],E,E,55,[[["self"],[T]]]],[11,R[205],E,E,55,[[["self"]],["string"]]],[11,R[45],E,E,55,[[[U]],[R[48]]]],[11,R[46],E,E,55,[[],[R[48]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[51]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"],[T]]]],[11,R[45],E,E,17,[[[U]],[R[48]]]],[11,R[46],E,E,17,[[],[R[48]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[["self"]],[R[51]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"],[T]]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"],[T]]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[44],E,E,23,[[["self"],[T]]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"],[T]]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"],[T]]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[43],E,E,27,[[["self"]],[T]]],[11,R[44],E,E,27,[[["self"],[T]]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[43],E,E,28,[[["self"]],[T]]],[11,R[44],E,E,28,[[["self"],[T]]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[43],E,E,29,[[["self"]],[T]]],[11,R[44],E,E,29,[[["self"],[T]]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[43],E,E,30,[[["self"]],[T]]],[11,R[44],E,E,30,[[["self"],[T]]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[44],E,E,31,[[["self"],[T]]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[44],E,E,32,[[["self"],[T]]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[44],E,E,33,[[["self"],[T]]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[44],E,E,34,[[["self"],[T]]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[44],E,E,35,[[["self"],[T]]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[44],E,E,36,[[["self"],[T]]]],[11,R[45],E,E,36,[[[U]],[R[48]]]],[11,R[46],E,E,36,[[],[R[48]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[51]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[44],E,E,37,[[["self"],[T]]]],[11,R[205],E,E,37,[[["self"]],["string"]]],[11,R[45],E,E,37,[[[U]],[R[48]]]],[11,R[46],E,E,37,[[],[R[48]]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[51]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[44],E,E,38,[[["self"],[T]]]],[11,R[205],E,E,38,[[["self"]],["string"]]],[11,R[45],E,E,38,[[[U]],[R[48]]]],[11,R[46],E,E,38,[[],[R[48]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[51]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[44],E,E,39,[[["self"],[T]]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[43],E,E,41,[[["self"]],[T]]],[11,R[44],E,E,41,[[["self"],[T]]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[43],E,E,42,[[["self"]],[T]]],[11,R[44],E,E,42,[[["self"],[T]]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[43],E,E,43,[[["self"]],[T]]],[11,R[44],E,E,43,[[["self"],[T]]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[43],E,E,44,[[["self"]],[T]]],[11,R[44],E,E,44,[[["self"],[T]]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[43],E,E,45,[[["self"]],[T]]],[11,R[44],E,E,45,[[["self"],[T]]]],[11,R[45],E,E,45,[[[U]],[R[48]]]],[11,R[46],E,E,45,[[],[R[48]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[51]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[43],E,E,46,[[["self"]],[T]]],[11,R[44],E,E,46,[[["self"],[T]]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[43],E,E,48,[[["self"]],[T]]],[11,R[44],E,E,48,[[["self"],[T]]]],[11,R[45],E,E,48,[[[U]],[R[48]]]],[11,R[46],E,E,48,[[],[R[48]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[["self"]],[R[51]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[43],E,E,49,[[["self"]],[T]]],[11,R[44],E,E,49,[[["self"],[T]]]],[11,R[45],E,E,49,[[[U]],[R[48]]]],[11,R[46],E,E,49,[[],[R[48]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[51]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[43],E,E,50,[[["self"]],[T]]],[11,R[44],E,E,50,[[["self"],[T]]]],[11,R[45],E,E,50,[[[U]],[R[48]]]],[11,R[46],E,E,50,[[],[R[48]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[51]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[43],E,E,51,[[["self"]],[T]]],[11,R[44],E,E,51,[[["self"],[T]]]],[11,R[45],E,E,51,[[[U]],[R[48]]]],[11,R[46],E,E,51,[[],[R[48]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[51]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[43],E,E,52,[[["self"]],[T]]],[11,R[44],E,E,52,[[["self"],[T]]]],[11,R[45],E,E,52,[[[U]],[R[48]]]],[11,R[46],E,E,52,[[],[R[48]]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[["self"]],[R[51]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[43],E,E,53,[[["self"]],[T]]],[11,R[44],E,E,53,[[["self"],[T]]]],[11,R[45],E,E,53,[[[U]],[R[48]]]],[11,R[46],E,E,53,[[],[R[48]]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[["self"]],[R[51]]]],[11,"into",R[1541],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[43],E,E,57,[[["self"]],[T]]],[11,R[44],E,E,57,[[["self"],[T]]]],[11,R[45],E,E,57,[[[U]],[R[48]]]],[11,R[46],E,E,57,[[],[R[48]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[51]]]],[11,"clone",E,E,57,[[["self"]],["iresult"]]],[11,"fmt",E,E,57,[[[R[176]],["self"]],[["error"],[R[48],["error"]]]]],[11,"eq",E,E,57,[[["self"],["iresult"]],["bool"]]],[11,"ne",E,E,57,[[["self"],["iresult"]],["bool"]]],[11,"as_ref","syn",E,55,[[["self"]],["str"]]],[11,"from",E,E,6,[[["ident"]],["self"]]],[11,"from",E,E,55,[[["str"]],["self"]]],[11,"from",E,E,55,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,E,55,[[["string"]],["self"]]],[11,"from",E,E,55,[[["usize"]],["self"]]],[11,"from",E,E,39,[[["string"]],["lit"]]],[11,"from",E,E,39,[[["str"]],["lit"]]],[11,"from",E,E,39,[[["vec",["u8"]],["u8"]],["lit"]]],[11,"from",E,E,39,[[],["lit"]]],[11,"from",E,E,39,[[["char"]],["lit"]]],[11,"from",E,E,39,[[["bool"]],["lit"]]],[11,"from",E,E,39,[[["isize"]],["lit"]]],[11,"from",E,E,39,[[["i8"]],["lit"]]],[11,"from",E,E,39,[[["i16"]],["lit"]]],[11,"from",E,E,39,[[["i32"]],["lit"]]],[11,"from",E,E,39,[[["i64"]],["lit"]]],[11,"from",E,E,39,[[["usize"]],["lit"]]],[11,"from",E,E,39,[[["u8"]],["lit"]]],[11,"from",E,E,39,[[["u16"]],["lit"]]],[11,"from",E,E,39,[[["u32"]],["lit"]]],[11,"from",E,E,39,[[["u64"]],["lit"]]],[11,"from",E,E,39,[[["f32"]],["lit"]]],[11,"from",E,E,39,[[["f64"]],["lit"]]],[11,"from",E,E,23,[[[T]],["self"]]],[11,"from",E,E,24,[[[T]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[1526]]]],[11,"clone",E,E,28,[[["self"]],["attrstyle"]]],[11,"clone",E,E,29,[[["self"]],["metaitem"]]],[11,"clone",E,E,30,[[["self"]],[R[1532]]]],[11,"clone",E,E,31,[[["self"]],[R[1533]]]],[11,"clone",E,E,2,[[["self"]],["variant"]]],[11,"clone",E,E,32,[[["self"]],[R[1520]]]],[11,"clone",E,E,1,[[["self"]],["field"]]],[11,"clone",E,E,33,[[["self"]],[R[1534]]]],[11,"clone",E,E,3,[[["self"]],[R[1527]]]],[11,"clone",E,E,4,[[["self"]],[R[1528]]]],[11,"clone",E,E,5,[[["self"]],[R[1521]]]],[11,"clone",E,E,6,[[["self"]],["typaram"]]],[11,"clone",E,E,35,[[["self"]],[R[1517]]]],[11,"clone",E,E,34,[[["self"]],[R[1519]]]],[11,"clone",E,E,8,[[["self"]],[R[1516]]]],[11,"clone",E,E,36,[[["self"]],[R[1535]]]],[11,"clone",E,E,7,[[["self"]],[R[1536]]]],[11,"clone",E,E,10,[[["self"]],[R[1537]]]],[11,"clone",E,E,9,[[["self"]],[R[1538]]]],[11,"clone",E,E,55,[[["self"]],["ident"]]],[11,"clone",E,E,39,[[["self"]],["lit"]]],[11,"clone",E,E,40,[[["self"]],["strstyle"]]],[11,"clone",E,E,38,[[["self"]],["intty"]]],[11,"clone",E,E,37,[[["self"]],["floatty"]]],[11,"clone",E,E,14,[[["self"]],["strlit"]]],[11,"clone",E,E,11,[[["self"]],[R[1529]]]],[11,"clone",E,E,13,[[["self"]],["intlit"]]],[11,"clone",E,E,12,[[["self"]],["floatlit"]]],[11,"clone",E,E,16,[[["self"]],["mac"]]],[11,"clone",E,E,44,[[["self"]],[R[1530]]]],[11,"clone",E,E,15,[[["self"]],[R[1565]]]],[11,"clone",E,E,43,[[["self"]],["token"]]],[11,"clone",E,E,41,[[["self"]],["binoptoken"]]],[11,"clone",E,E,42,[[["self"]],["delimtoken"]]],[11,"clone",E,E,17,[[["self"]],[R[1515]]]],[11,"clone",E,E,45,[[["self"]],["body"]]],[11,"clone",E,E,46,[[["self"]],["binop"]]],[11,"clone",E,E,47,[[["self"]],["unop"]]],[11,"clone",E,E,52,[[["self"]],["ty"]]],[11,"clone",E,E,21,[[["self"]],["mutty"]]],[11,"clone",E,E,50,[[["self"]],[R[1539]]]],[11,"clone",E,E,23,[[["self"]],["path"]]],[11,"clone",E,E,24,[[["self"]],[R[1522]]]],[11,"clone",E,E,51,[[["self"]],[R[1523]]]],[11,"clone",E,E,18,[[["self"]],[R[1531]]]],[11,"clone",E,E,27,[[["self"]],[R[1524]]]],[11,"clone",E,E,22,[[["self"]],[R[1540]]]],[11,"clone",E,E,25,[[["self"]],[R[1518]]]],[11,"clone",E,E,26,[[["self"]],["qself"]]],[11,"clone",E,E,20,[[["self"]],["barefnty"]]],[11,"clone",E,E,53,[[["self"]],["unsafety"]]],[11,"clone",E,E,48,[[["self"]],["abi"]]],[11,"clone",E,E,19,[[["self"]],["barefnarg"]]],[11,"clone",E,E,49,[[["self"]],[R[1525]]]],[11,R[744],E,E,3,[[],[R[1527]]]],[11,R[744],E,E,8,[[],[R[1516]]]],[11,R[744],E,E,18,[[],[R[1531]]]],[11,"cmp",E,E,4,[[["self"],[R[1528]]],[R[313]]]],[11,"cmp",E,E,55,[[["self"],["ident"]],[R[313]]]],[11,"eq",E,E,0,[[[R[1526]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[1526]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["attrstyle"],["self"]],["bool"]]],[11,"eq",E,E,29,[[["self"],["metaitem"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["metaitem"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[1532]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[1532]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1533]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[1533]]],["bool"]]],[11,"eq",E,E,2,[[["variant"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["variant"],["self"]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[1520]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[1520]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["field"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["field"]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[1534]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[1534]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1527]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1527]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,"eq",E,E,5,[[[R[1521]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[1521]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["typaram"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["typaram"]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[1517]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[1517]]],["bool"]]],[11,"eq",E,E,34,[[[R[1519]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[1516]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[1516]],["self"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[1535]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[1535]]],["bool"]]],[11,"eq",E,E,7,[[[R[1536]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[1536]],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[1537]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[1537]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[1538]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[1538]],["self"]],["bool"]]],[11,"eq",E,E,55,[[[T],["self"]],["bool"]]],[11,"eq",E,E,39,[[["self"],["lit"]],["bool"]]],[11,"ne",E,E,39,[[["self"],["lit"]],["bool"]]],[11,"eq",E,E,40,[[["self"],["strstyle"]],["bool"]]],[11,"ne",E,E,40,[[["self"],["strstyle"]],["bool"]]],[11,"eq",E,E,38,[[["self"],["intty"]],["bool"]]],[11,"eq",E,E,37,[[["floatty"],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["mac"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["mac"]],["bool"]]],[11,"eq",E,E,44,[[[R[1530]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[1530]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[1565]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[1565]],["self"]],["bool"]]],[11,"eq",E,E,43,[[["self"],["token"]],["bool"]]],[11,"ne",E,E,43,[[["self"],["token"]],["bool"]]],[11,"eq",E,E,41,[[["self"],["binoptoken"]],["bool"]]],[11,"eq",E,E,42,[[["delimtoken"],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[1515]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1515]]],["bool"]]],[11,"eq",E,E,45,[[["body"],["self"]],["bool"]]],[11,"ne",E,E,45,[[["body"],["self"]],["bool"]]],[11,"eq",E,E,46,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,47,[[["unop"],["self"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["ty"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["ty"]],["bool"]]],[11,"eq",E,E,21,[[["mutty"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["mutty"],["self"]],["bool"]]],[11,"eq",E,E,50,[[[R[1539]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["path"],["self"]],["bool"]]],[11,"ne",E,E,23,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,24,[[[R[1522]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[1522]],["self"]],["bool"]]],[11,"eq",E,E,51,[[[R[1523]],["self"]],["bool"]]],[11,"ne",E,E,51,[[[R[1523]],["self"]],["bool"]]],[11,"eq",E,E,18,[[[R[1531]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[1531]],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[1524]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[1524]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1540]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1540]]],["bool"]]],[11,"eq",E,E,25,[[[R[1518]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[1518]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["qself"]],["bool"]]],[11,"ne",E,E,26,[[["self"],["qself"]],["bool"]]],[11,"eq",E,E,20,[[["barefnty"],["self"]],["bool"]]],[11,"ne",E,E,20,[[["barefnty"],["self"]],["bool"]]],[11,"eq",E,E,53,[[["self"],["unsafety"]],["bool"]]],[11,"eq",E,E,48,[[["abi"],["self"]],["bool"]]],[11,"ne",E,E,48,[[["abi"],["self"]],["bool"]]],[11,"eq",E,E,19,[[["barefnarg"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["barefnarg"],["self"]],["bool"]]],[11,"eq",E,E,49,[[[R[1525]],["self"]],["bool"]]],[11,"ne",E,E,49,[[[R[1525]],["self"]],["bool"]]],[11,R[314],E,E,4,[[["self"],[R[1528]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[1528]]],["bool"]]],[11,R[314],E,E,55,[[["self"],["ident"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,55,[[["self"],["ident"]],["bool"]]],[11,"le",E,E,55,[[["self"],["ident"]],["bool"]]],[11,"gt",E,E,55,[[["self"],["ident"]],["bool"]]],[11,"ge",E,E,55,[[["self"],["ident"]],["bool"]]],[11,"fmt",E,E,55,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,38,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,37,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,28,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,29,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,30,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,31,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,32,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,33,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,58,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,54,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,59,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,35,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,34,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,36,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,55,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,39,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,40,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,38,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,37,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,13,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,12,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,44,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,43,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,41,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,42,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,17,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,45,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,46,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,47,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,52,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,21,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,50,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,23,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,24,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,51,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,27,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,22,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,25,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,26,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,20,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,53,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,48,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,19,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,49,[[["self"],[R[176]]],[R[48]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,R[374],E,E,0,[[["self"],["tokens"]]]],[11,R[374],E,E,29,[[["self"],["tokens"]]]],[11,R[374],E,E,30,[[["self"],["tokens"]]]],[11,R[374],E,E,31,[[["self"],["tokens"]]]],[11,R[374],E,E,2,[[["self"],["tokens"]]]],[11,R[374],E,E,32,[[["self"],["tokens"]]]],[11,R[374],E,E,1,[[["self"],["tokens"]]]],[11,R[374],E,E,33,[[["self"],["tokens"]]]],[11,R[374],E,E,3,[[["self"],["tokens"]]]],[11,R[374],E,E,58,[[["self"],["tokens"]]]],[11,R[374],E,E,54,[[["self"],["tokens"]]]],[11,R[374],E,E,59,[[["self"],["tokens"]]]],[11,R[374],E,E,4,[[["self"],["tokens"]]]],[11,R[374],E,E,5,[[["self"],["tokens"]]]],[11,R[374],E,E,6,[[["self"],["tokens"]]]],[11,R[374],E,E,35,[[["self"],["tokens"]]]],[11,R[374],E,E,8,[[["self"],["tokens"]]]],[11,R[374],E,E,36,[[["self"],["tokens"]]]],[11,R[374],E,E,7,[[["self"],["tokens"]]]],[11,R[374],E,E,10,[[["self"],["tokens"]]]],[11,R[374],E,E,9,[[["self"],["tokens"]]]],[11,R[374],E,E,55,[[["self"],["tokens"]]]],[11,R[374],E,E,39,[[["self"],["tokens"]]]],[11,R[374],E,E,16,[[["self"],["tokens"]]]],[11,R[374],E,E,44,[[["self"],["tokens"]]]],[11,R[374],E,E,15,[[["self"],["tokens"]]]],[11,R[374],E,E,43,[[["self"],["tokens"]]]],[11,R[374],E,E,41,[[["self"],["tokens"]]]],[11,R[374],E,E,17,[[["self"],["tokens"]]]],[11,R[374],E,E,46,[[["self"],["tokens"]]]],[11,R[374],E,E,47,[[["self"],["tokens"]]]],[11,R[374],E,E,52,[[["self"],["tokens"]]]],[11,R[374],E,E,50,[[["self"],["tokens"]]]],[11,R[374],E,E,23,[[["self"],["tokens"]]]],[11,R[374],E,E,24,[[["self"],["tokens"]]]],[11,R[374],E,E,51,[[["self"],["tokens"]]]],[11,R[374],E,E,18,[[["self"],["tokens"]]]],[11,R[374],E,E,27,[[["self"],["tokens"]]]],[11,R[374],E,E,22,[[["self"],["tokens"]]]],[11,R[374],E,E,25,[[["self"],["tokens"]]]],[11,R[374],E,E,20,[[["self"],["tokens"]]]],[11,R[374],E,E,19,[[["self"],["tokens"]]]],[11,R[374],E,E,53,[[["self"],["tokens"]]]],[11,R[374],E,E,48,[[["self"],["tokens"]]]],[11,"expect",R[1541],R[1564],57,[[["str"]],["o"]]]],"p":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,R[1542]],[3,"TyParam"],[3,R[1543]],[3,R[1544]],[3,R[1545]],[3,R[1546]],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,R[1547]],[3,R[1548]],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,R[1549]],[3,"Path"],[3,R[1550]],[3,R[1551]],[3,"QSelf"],[3,R[1552]],[4,"AttrStyle"],[4,"MetaItem"],[4,R[1553]],[4,"ConstExpr"],[4,R[1554]],[4,"Visibility"],[4,R[1555]],[4,R[1556]],[4,R[1557]],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,R[1558]],[4,"Mutability"],[4,R[1559]],[4,"Ty"],[4,"Unsafety"],[3,"TyGenerics"],[3,"Ident"],[8,"Visitor"],[4,"IResult"],[3,R[1560]],[3,"Turbofish"]]};
searchIndex["synom"]={"doc":"Adapted from `nom` by removing the `IResult::Incomplete`…","i":[[4,"IResult","synom",R[1561],N,N],[13,"Done",E,R[1562],0,N],[13,"Error",E,R[1563],0,N],[11,"expect",E,R[1564],0,[[["str"]],["o"]]],[14,"punct",E,"Parse a piece of punctuation like \"+\" or \"+=\".",N,N],[14,"keyword",E,"Parse a keyword like \"fn\" or \"struct\".",N,N],[14,"option",E,"Turn a failed parse into `None` and a successful parse…",N,N],[14,"opt_vec",E,"Turn a failed parse into an empty vector. The argument…",N,N],[14,"epsilon",E,"Parses nothing and always succeeds.",N,N],[14,"separated_list",E,"Zero or more values separated by some separator. Does not…",N,N],[14,"terminated_list",E,"Zero or more values separated by some separator. A…",N,N],[14,"named",E,"Define a function from a parser combination.",N,N],[14,"call",E,"Invoke the given parser function with the passed in…",N,N],[14,"map",E,"Transform the result of a parser by applying a function or…",N,N],[14,"not",E,"Parses successfully if the given parser fails to parse.…",N,N],[14,"cond",E,"Conditionally execute the given parser.",N,N],[14,"cond_reduce",E,"Fail to parse if condition is false, otherwise parse the…",N,N],[14,"preceded",E,"Parse two things, returning the value of the second.",N,N],[14,"terminated",E,"Parse two things, returning the value of the first.",N,N],[14,"many0",E,"Parse zero or more values using the given parser.",N,N],[14,"peek",E,"Parse a value without consuming it from the input data.",N,N],[14,"take_until",E,"Parse the part of the input up to but not including the…",N,N],[14,"tag",E,"Parse the given string from exactly the current position…",N,N],[14,"switch",E,"Pattern-match the result of a parser to select which other…",N,N],[14,"value",E,"Produce the given value without parsing anything. Useful…",N,N],[14,R[1565],E,"Value surrounded by a pair of delimiters.",N,N],[14,"separated_nonempty_list",E,"One or more values separated by some separator. Does not…",N,N],[14,"tuple",E,"Run a series of parsers and produce all of the results in…",N,N],[14,"alt",E,"Run a series of parsers, returning the result of the first…",N,N],[14,"do_parse",E,"Run a series of parsers, one after another, optionally…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"clone",E,E,0,[[["self"]],["iresult"]]],[11,"eq",E,E,0,[[["self"],["iresult"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["iresult"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]]],"p":[[4,"IResult"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","i":[[3,R[1511],"thread_local","Thread-local variable wrapper",N,N],[3,"IterMut",E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[1690],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[3,R[1512],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut",E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter",E,"An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `ThreadLocal`.",0,[[],[R[1509]]]],[11,"get",E,R[1504],0,[[["self"]],[[T],["option"]]]],[11,"get_or",E,R[1503],0,[[["self"],["f"]],[T]]],[11,"get_or_try",E,R[1503],0,[[["self"],["f"]],[[R[48]],[T]]]],[11,"iter_mut",E,R[1505],0,[[["self"]],["itermut"]]],[11,"clear",E,R[1506],0,[[["self"]]]],[11,R[1507],E,R[1508],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",1,[[],[R[1510]]]],[11,"get",E,R[1504],1,[[["self"]],[[T],["option"]]]],[11,"get_or",E,R[1503],1,[[["self"],["f"]],[T]]],[11,"get_or_try",E,R[1503],1,[[["self"],["f"]],[[R[48]],[T]]]],[11,"iter_mut",E,R[1505],1,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[1506],1,[[["self"]]]],[11,R[1507],E,R[1508],1,[[["self"]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[364],E,E,0,[[],["i"]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[364],E,E,3,[[],["i"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[364],E,E,1,[[],["i"]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["box"],["option",["box"]]]]],[11,R[425],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[["box"],["option",["box"]]]]],[11,R[425],E,E,3,[[["self"]]]],[11,R[364],E,E,0,[[],[R[800]]]],[11,R[364],E,E,1,[[],["cachedintoiter"]]],[11,R[744],E,E,0,[[],[R[1509]]]],[11,R[744],E,E,1,[[],[R[1510]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]]],"p":[[3,R[1511]],[3,R[1512]],[3,"IterMut"],[3,R[1690]]]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,R[762],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[760],E,"An opaque structure representing a moment in time.",N,N],[3,R[761],E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[747],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[[R[48],["tm",R[748]]],["tm"],[R[748]]]]],[5,"get_time",E,"Returns the current time as a `timespec` containing the…",N,[[],[R[52]]]],[5,"precise_time_ns",E,R[749],N,[[],["u64"]]],[5,"precise_time_s",E,R[749],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[52]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[52]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[757],N,[[["str"],["tm"]],[["string"],[R[48],["string",R[748]]],[R[748]]]]],[11,"weeks",E,"Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],[R[750]]]],[11,"days",E,"Makes a new `Duration` with given number of days.…",3,[[["i64"]],[R[750]]]],[11,"hours",E,"Makes a new `Duration` with given number of hours.…",3,[[["i64"]],[R[750]]]],[11,"minutes",E,"Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],[R[750]]]],[11,"seconds",E,"Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],[R[750]]]],[11,R[1333],E,"Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],[R[750]]]],[11,R[1334],E,"Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],[R[750]]]],[11,"nanoseconds",E,"Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],[R[750]]]],[11,"span",E,"Runs a closure, returning the duration of time it took to…",3,[[["f"]],[R[750]]]],[11,"num_weeks",E,"Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days",E,"Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours",E,"Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,R[1335],E,"Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,R[1336],E,"Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,R[1337],E,"Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,R[1338],E,"Returns the total number of whole microseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"num_nanoseconds",E,"Returns the total number of whole nanoseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,R[751],E,"Add two durations, returning `None` if overflow occurred.",3,[[[R[750]],["self"]],[["option",[R[750]]],[R[750]]]]],[11,R[752],E,"Subtract two durations, returning `None` if overflow…",3,[[[R[750]],["self"]],[["option",[R[750]]],[R[750]]]]],[11,R[121],E,"The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],[R[750]]]],[11,R[122],E,"The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],[R[750]]]],[11,"zero",E,"A duration where the stored seconds and nanoseconds are…",3,[[],[R[750]]]],[11,"is_zero",E,"Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std",E,"Creates a `time::Duration` object from `std::time::Duration`",3,[[[R[754]]],[[R[48],[R[750],R[753]]],[R[750]],[R[753]]]]],[11,"to_std",E,"Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[[R[753]],[R[48],[R[754],R[753]]],[R[754]]]]],[11,"new",E,E,0,[[["i64"],["i32"]],[R[52]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[755]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[[R[755]],["self"]],[R[750]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[758]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[52]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[756],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[756],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[757],1,[[["str"],["self"]],[[R[48],["tmfmt",R[748]]],["tmfmt"],[R[748]]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[205],E,E,6,[[["self"]],["string"]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[205],E,E,5,[[["self"]],["string"]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[205],E,E,7,[[["self"]],["string"]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[205],E,E,2,[[["self"]],["string"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"clone",E,E,3,[[["self"]],[R[750]]]],[11,"clone",E,E,6,[[["self"]],[R[753]]]],[11,"clone",E,E,0,[[["self"]],[R[52]]]],[11,"clone",E,E,4,[[["self"]],[R[755]]]],[11,"clone",E,E,5,[[["self"]],[R[758]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[748]]]],[11,"cmp",E,E,3,[[[R[750]],["self"]],[R[313]]]],[11,"cmp",E,E,0,[[["self"],[R[52]]],[R[313]]]],[11,"cmp",E,E,5,[[["self"],[R[758]]],[R[313]]]],[11,"cmp",E,E,1,[[["tm"],["self"]],[R[313]]]],[11,"eq",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[753]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[753]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,"eq",E,E,1,[[["tm"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["tm"],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[748]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[748]],["self"]],["bool"]]],[11,R[314],E,E,3,[[[R[750]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[750]],["self"]],["bool"]]],[11,R[314],E,E,0,[[["self"],[R[52]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[52]]],["bool"]]],[11,R[314],E,E,5,[[["self"],[R[758]]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[758]]],["bool"]]],[11,R[314],E,E,1,[[["tm"],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,7,[[["self"],[R[176]]],[R[48]]]],[11,"div",E,E,3,[[["i32"]],[R[750]]]],[11,"sub",E,E,3,[[[R[750]]],[R[750]]]],[11,"sub",E,E,0,[[[R[750]]],[R[52]]]],[11,"sub",E,E,0,[[[R[52]]],[R[750]]]],[11,"sub",E,E,5,[[[R[758]]],[R[750]]]],[11,"sub",E,E,5,[[[R[750]]],[R[758]]]],[11,"sub",E,R[759],1,[[[R[750]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[750]]]],[11,"add",E,E,3,[[[R[750]]],[R[750]]]],[11,"add",E,E,0,[[[R[750]]],[R[52]]]],[11,"add",E,E,5,[[[R[750]]],[R[758]]]],[11,"add",E,R[759],1,[[[R[750]]],["tm"]]],[11,"mul",E,E,3,[[["i32"]],[R[750]]]],[11,"neg",E,E,3,[[],[R[750]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[256],E,E,6,[[["self"]],["str"]]],[11,R[256],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[747]],[3,"Duration"],[3,R[760]],[3,R[761]],[3,R[762]],[3,"TmFmt"]]};
searchIndex["tobj"]={"doc":"Tiny OBJ loader, inspired by Syoyo's excellent…","i":[[3,"Mesh","tobj","A mesh made up of triangles loaded from some OBJ file",N,N],[12,"positions",E,R[694],0,N],[12,"normals",E,R[694],0,N],[12,"texcoords",E,"Flattened 2 component floating point vectors, storing…",0,N],[12,"indices",E,"Indices for vertices of each triangle. Each face in the…",0,N],[12,"material_id",E,"Optional material id associated with this mesh. The…",0,N],[3,"Model",E,"A named model within the file, associates some mesh with a…",N,N],[12,"mesh",E,"Mesh used by the model containing its geometry",1,N],[12,"name",E,"Name assigned to this mesh",1,N],[3,"Material",E,"A material that may be referenced by one or more meshes.…",N,N],[12,"name",E,"Material name as specified in the MTL file",2,N],[12,"ambient",E,"Ambient color of the material",2,N],[12,"diffuse",E,"Diffuse color of the material",2,N],[12,"specular",E,"Specular color of the material",2,N],[12,"shininess",E,"Material shininess attribute",2,N],[12,"dissolve",E,"Dissolve attribute is the alpha term for the material.…",2,N],[12,"optical_density",E,"Optical density also known as index of refraction. Called…",2,N],[12,"ambient_texture",E,"Name of the ambient texture file for the material. No path…",2,N],[12,"diffuse_texture",E,"Name of the diffuse texture file for the material. No path…",2,N],[12,"specular_texture",E,"Name of the specular texture file for the material. No…",2,N],[12,"normal_texture",E,"Name of the normal map texture file for the material. No…",2,N],[12,"dissolve_texture",E,"Name of the alpha map texture file for the material. No…",2,N],[12,"illumination_model",E,"The illumnination model to use for this material. The…",2,N],[12,"unknown_param",E,"Key value pairs of any unrecognized parameters encountered…",2,N],[4,R[697],E,"Possible errors that may occur while loading OBJ and MTL…",N,N],[13,"OpenFileFailed",E,E,3,N],[13,"ReadError",E,E,3,N],[13,"UnrecognizedCharacter",E,E,3,N],[13,"PositionParseError",E,E,3,N],[13,"NormalParseError",E,E,3,N],[13,"TexcoordParseError",E,E,3,N],[13,"FaceParseError",E,E,3,N],[13,"MaterialParseError",E,E,3,N],[13,"InvalidObjectName",E,E,3,N],[13,"GenericFailure",E,E,3,N],[5,"load_obj",E,"Load the various objects specified in the OBJ file and any…",N,[[["path"]],[R[695]]]],[5,"load_mtl",E,"Load the materials defined in a MTL file Returns a pair…",N,[[["path"]],[R[696]]]],[5,"load_obj_buf",E,"Load the various meshes in an OBJ buffer of some kind,…",N,[[["b"],["ml"]],[R[695]]]],[5,"load_mtl_buf",E,"Load the various materials in a MTL buffer",N,[[["b"]],[R[696]]]],[5,"print_model_info",E,"Print out all loaded properties of some models and…",N,[[]]],[5,"print_material_info",E,"Print out all loaded properties of some materials",N,[[]]],[6,"LoadResult",E,"`LoadResult` is a result containing all the models loaded…",N,N],[6,"MTLLoadResult",E,"`MTLLoadResult` is a result containing all the materials…",N,N],[11,"new",E,"Create a new mesh specifying the geometry for the mesh",0,[[["f32"],["u32"],["option",["usize"]],["vec",["u32"]],["usize"],["vec",["f32"]]],["mesh"]]],[11,"empty",E,"Create a new empty mesh",0,[[],["mesh"]]],[11,"new",E,"Create a new model, associating a name with a mesh",1,[[["string"],["mesh"]],["model"]]],[11,"empty",E,E,2,[[],[R[2248]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[205],E,E,3,[[["self"]],["string"]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,"clone",E,E,0,[[["self"]],["mesh"]]],[11,"clone",E,E,1,[[["self"]],["model"]]],[11,"clone",E,E,2,[[["self"]],[R[2248]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[[R[48],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,3,[[["self"],[R[176]]],[R[48]]]],[11,R[256],E,E,3,[[["self"]],["str"]]]],"p":[[3,"Mesh"],[3,"Model"],[3,"Material"],[4,R[697]]]};
searchIndex["tray_rust"]={"doc":"tray_rust - A Toy Ray Tracer in Rust","i":[[0,"linalg",R[2260],"The linalg module provides some basic linear algebra…",N,N],[4,"Axis",R[2231],"Enum representing on of the 3 spatial axes",N,N],[13,"X",E,E,0,N],[13,"Y",E,E,0,N],[13,"Z",E,E,0,N],[5,R[151],E,"Convert value in degrees to radians TODO: See where…",N,[[["f32"]],["f32"]]],[5,"cross",E,"Compute the cross product of two vectors",N,[[["b"],["a"]],["vector"]]],[5,"dot",E,"Compute the dot product of two vectors",N,[[["b"],["a"]],["f32"]]],[5,"lerp",E,"Lerp between `a` and `b` at some distance `t` where t is…",N,[[["f32"],[T]],[["f32"],["add"],["copy"],["mul",["f32"]]]]],[5,"clamp",E,"Clamp `x` to be between `min` and `max`",N,[[[R[114]]],[R[114]]]],[5,"spherical_dir",E,R[2230],N,[[["f32"]],["vector"]]],[5,"spherical_dir_coords",E,R[2230],N,[[["f32"],["vector"]],["vector"]]],[5,"spherical_theta",E,"Compute the value of theta for the vector in the spherical…",N,[[["vector"]],["f32"]]],[5,"spherical_phi",E,"Compute the value of phi for the vector in the spherical…",N,[[["vector"]],["f32"]]],[5,"solve_quadratic",E,"Try to solve the quadratic equation `a*t^2 + b*t + c = 0`…",N,[[["f32"]],["option"]]],[5,"coordinate_system",E,"Compute a local ortho-normal coordinate system from a…",N,[[["vector"]]]],[5,"reflect",E,"Compute the reflection of `w` about `v`, both vectors…",N,[[["vector"]],["vector"]]],[5,"refract",E,"Compute the refraction of `w` entering surface with normal…",N,[[["f32"],["vector"]],[["option",["vector"]],["vector"]]]],[0,"vector",E,E,N,N],[3,"Vector",R[2283],"Vector is a standard 3 component vector",N,N],[12,"x",E,E,1,N],[12,"y",E,E,1,N],[12,"z",E,E,1,N],[11,"new",E,"Initialize the vector and set values for x, y, z",1,[[["f32"]],["vector"]]],[11,R[2232],E,"Initialize the vector with the same value of x, y, z",1,[[["f32"]],["vector"]]],[11,"length_sqr",E,"Compute the squared length of the vector",1,[[["self"]],["f32"]]],[11,"length",E,"Compute the length of the vector",1,[[["self"]],["f32"]]],[11,R[2236],E,"Get a normalized copy of this vector",1,[[["self"]],["vector"]]],[0,"normal",R[2231],E,N,N],[3,"Normal",R[2285],"Normal is a standard 3 component normal but transforms as…",N,N],[12,"x",E,E,2,N],[12,"y",E,E,2,N],[12,"z",E,E,2,N],[11,"new",E,"Initialize the normal and set values for x, y, z",2,[[["f32"]],["normal"]]],[11,R[2232],E,"Initialize the normal with the same value of x, y, z",2,[[["f32"]],["normal"]]],[11,"length_sqr",E,"Compute the squared length of the normal",2,[[["self"]],["f32"]]],[11,"length",E,"Compute the length of the normal",2,[[["self"]],["f32"]]],[11,R[2236],E,"Get a normalized copy of this normal",2,[[["self"]],["normal"]]],[11,"face_forward",E,"Return a normal facing along the same direction as v",2,[[["self"],["vector"]],["normal"]]],[0,"point",R[2231],E,N,N],[3,"Point",R[2286],"Point is a standard 3 component point but transforms as a…",N,N],[12,"x",E,E,3,N],[12,"y",E,E,3,N],[12,"z",E,E,3,N],[11,"new",E,"Initialize the point and set values for x, y, z",3,[[["f32"]],["point"]]],[11,R[2232],E,"Initialize the point with the same value of x, y, z",3,[[["f32"]],["point"]]],[11,"origin",E,"Initialize a point to be all 0 values",3,[[],["point"]]],[11,"distance_sqr",E,"Compute the squared distance between this point and another",3,[[["point"],["self"]],["f32"]]],[11,"distance",E,"Compute the distance between this point and another",3,[[["point"],["self"]],["f32"]]],[0,"ray",R[2231],E,N,N],[3,"Ray",R[2287],"Ray is a standard 3D ray, starting at origin `o` and…",N,N],[12,"o",E,"Origin of the ray",4,N],[12,"d",E,"Direction the ray is heading",4,N],[12,"min_t",E,"Point along the ray that the actual ray starts at, `p = o…",4,N],[12,"max_t",E,"Point along the ray at which it stops, will be inf if the…",4,N],[12,"depth",E,"Recursion depth of the ray",4,N],[12,"time",E,"Time point sampled by this ray",4,N],[11,"new",E,"Create a new ray from `o` heading in `d` with infinite…",4,[[["point"],["f32"],["vector"]],["ray"]]],[11,"segment",E,"Create a new segment ray from `o + min_t * d` to `o +…",4,[[["f32"],["vector"],["point"]],["ray"]]],[11,"child",E,"Create a child ray from the parent starting at `o` and…",4,[[["point"],["self"],["vector"]],["ray"]]],[11,"child_segment",E,"Create a child ray segment from `o + min_t * d` to `o +…",4,[[["f32"],["vector"],["point"],["self"]],["ray"]]],[11,"at",E,"Evaulate the ray equation at some t value and return the…",4,[[["f32"],["self"]],["point"]]],[0,"matrix4",R[2231],E,N,N],[3,"Matrix4",R[2288],"Matrix4 is a 4x4 matrix stored in row-major format",N,N],[11,"zero",E,"Return the zero matrix",5,[[],["matrix4"]]],[11,"identity",E,"Return the identity matrix",5,[[],["matrix4"]]],[11,"new",E,"Create the matrix using the values passed",5,[[],["matrix4"]]],[11,"at",E,"Access the element at row `i` column `j`",5,[[["self"],["usize"]],["f32"]]],[11,"at_mut",E,"Mutably access the element at row `i` column `j`",5,[[["self"],["usize"]],["f32"]]],[11,"transpose",E,"Compute and return the transpose of this matrix",5,[[["self"]],["matrix4"]]],[11,"inverse",E,"Compute and return the inverse of this matrix",5,[[["self"]],["matrix4"]]],[11,"iter",E,"Return an iterator over the matrix's elements. The…",5,[[["self"]],[["f32"],["iter",["f32"]]]]],[11,"has_nans",E,E,5,[[["self"]],["bool"]]],[0,R[2233],R[2231],E,N,N],[3,"Transform",R[2289],"Transform describes an affine transformation in 3D space…",N,N],[12,"mat",E,E,6,N],[12,"inv",E,E,6,N],[11,"identity",E,"Construct the identity transformation",6,[[],[R[2233]]]],[11,"from_mat",E,"Construct a transform from an existing matrix",6,[[["matrix4"]],[R[2233]]]],[11,"from_pair",E,"Construct a transform from an existing matrix/inverse pair",6,[[["matrix4"]],[R[2233]]]],[11,"translate",E,"Construct a transformation matrix to translate by the vector",6,[[["vector"]],[R[2233]]]],[11,"scale",E,"Construct a transform to scale x, y and z by the values in…",6,[[["vector"]],[R[2233]]]],[11,"rotate_x",E,"Construct a transform to rotate `deg` degrees about the x…",6,[[["f32"]],[R[2233]]]],[11,"rotate_y",E,"Construct a transform to rotate `deg` degrees about the y…",6,[[["f32"]],[R[2233]]]],[11,"rotate_z",E,"Construct a transform to rotate `deg` degrees about the z…",6,[[["f32"]],[R[2233]]]],[11,"rotate",E,"Construct a transform to rotate about `axis` by `deg`…",6,[[["f32"],["vector"]],[R[2233]]]],[11,"look_at",E,"Construct the look at transform for a camera at `pos`…",6,[[["point"],["vector"]],[R[2233]]]],[11,"perspective",E,"Construct a perspective transformation",6,[[["f32"]],[R[2233]]]],[11,"inverse",E,"Return the inverse of the transformation",6,[[["self"]],[R[2233]]]],[11,"has_scale",E,"Returns true if the transform has applies a scaling",6,[[["self"]],["bool"]]],[11,"inv_mul_point",E,"Multiply the point by the inverse transformation TODO:…",6,[[["point"],["self"]],["point"]]],[11,"inv_mul_vector",E,"Multiply the vector with the inverse transformation",6,[[["self"],["vector"]],["vector"]]],[11,"inv_mul_normal",E,"Multiply the normal with the inverse transformation",6,[[["self"],["normal"]],["normal"]]],[11,"inv_mul_ray",E,"Multiply the ray with the inverse transformation",6,[[["ray"],["self"]],["ray"]]],[0,R[2234],R[2231],"Provides a Quaternion type for properly interpolating…",N,N],[3,"Quaternion",R[2290],"Quaternions describe a rotation in 3d space but can be…",N,N],[12,"v",E,E,7,N],[12,"w",E,E,7,N],[5,"dot",E,"Compute the dot product of the two quaternions",N,[[[R[2234]]],["f32"]]],[5,"slerp",E,"Use spherical linear interpolation to interpolate between…",N,[[["f32"],[R[2234]]],[R[2234]]]],[11,"identity",E,"Construct an identity quaternion",7,[[],[R[2234]]]],[11,"from_matrix",E,"Construct a quaternion from the rotation matrix Based on…",7,[[["matrix4"]],[R[2234]]]],[11,"from_transform",E,"Construct the quaternion from the transform",7,[[[R[2233]]],[R[2234]]]],[11,"to_matrix",E,R[2235],7,[[["self"]],["matrix4"]]],[11,"to_transform",E,R[2235],7,[[["self"]],[R[2233]]]],[11,R[2236],E,"Get the normalized quaternion for this rotation",7,[[["self"]],[R[2234]]]],[0,R[2367],R[2231],"Provides a keyframe transformation which is a transform…",N,N],[3,"Keyframe",R[2291],"A transformation associated with a specific point in time.…",N,N],[12,"translation",E,E,8,N],[12,"rotation",E,E,8,N],[12,"scaling",E,E,8,N],[11,"new",E,"Construct a new keyframe transformation, The transform…",8,[[[R[2233]]],[R[2367]]]],[11,"from_parts",E,"Construct the keyframe from the decomposed transformation",8,[[[R[2234]],["vector"]],[R[2367]]]],[11,R[2233],E,"Return the transformation stored for this keyframe",8,[[["self"]],[R[2233]]]],[0,"animated_transform",R[2231],"Provides an animated transformation that moves an object…",N,N],[3,R[2382],R[2292],"An animated transform that blends between the keyframes in…",N,N],[11,R[2241],E,"Create an animated transformation blending between the…",9,[[["f32"],[R[2367]],["usize"],["vec",[R[2367]]],["vec",["f32"]]],[R[2237]]]],[11,"unanimated",E,E,9,[[[R[2233]]],[R[2237]]]],[11,R[2233],E,"Compute the transformation matrix for the animation at…",9,[[["f32"],["self"]],[R[2233]]]],[11,"animation_bounds",E,"Compute the bounds of the box moving through the animation…",9,[[["f32"],["self"],["bbox"]],["bbox"]]],[11,R[2202],E,"Check if the transform is actually animated",9,[[["self"]],["bool"]]],[0,"film",R[2260],"The film module provides color types and a render target…",N,N],[3,"FrameInfo",R[2239],"Struct to store various parameters for the frame timing",N,N],[12,"frames",E,"Total number of frames for the scene",10,N],[12,"time",E,"Total time for all the entire scene (ie. for all frames)",10,N],[12,"start",E,"Frame number to start rendering at",10,N],[12,"end",E,"Frame number to stop rendering at",10,N],[0,"color",E,"Defines types for operating with floating point and 8 bit…",N,N],[3,"Colorf",R[2293],"Colorf is a floating point RGBA color type `a` is…",N,N],[12,"r",E,E,11,N],[12,"g",E,E,11,N],[12,"b",E,E,11,N],[12,"a",E,E,11,N],[11,"new",E,R[2238],11,[[["f32"]],["colorf"]]],[11,"with_alpha",E,R[2238],11,[[["f32"]],["colorf"]]],[11,R[2232],E,"Create an RGB color using the same value for all channels",11,[[["f32"]],["colorf"]]],[11,"black",E,"Create a black color",11,[[],["colorf"]]],[11,"clamp",E,"Clamp the color values between [0, 1]",11,[[["self"]],["colorf"]]],[11,"luminance",E,"Compute the luminance of the color",11,[[["self"]],["f32"]]],[11,"is_black",E,"Check if the color is black",11,[[["self"]],["bool"]]],[11,"has_nans",E,"Check if any of the color channels are NaN",11,[[["self"]],["bool"]]],[11,"has_infs",E,"Check if any of the color channels are infinite",11,[[["self"]],["bool"]]],[11,"to_srgb",E,"Convert the linear RGB color to sRGB",11,[[["self"]],["colorf"]]],[11,"exp",E,"Return the color with values { e^r, e^g, e^b }",11,[[["self"]],["colorf"]]],[0,R[2279],R[2239],"Defines the render target for tray, where our image will…",N,N],[3,R[2383],R[2294],"A struct containing results of an image sample where a ray…",N,N],[12,"x",E,E,12,N],[12,"y",E,E,12,N],[12,"color",E,E,12,N],[3,R[2384],E,"`RenderTarget` is a RGBF render target to write our image…",N,N],[11,"new",E,E,12,[[["f32"],["colorf"]],["imagesample"]]],[11,"new",E,"Create a render target with `width * height` pixels",13,[[["box",["filter"]],["filter"]],[R[2281]]]],[11,"write",E,"Write all the image samples to the render target",13,[[["self"],["region"]]]],[11,"clear",E,"Clear the render target to black",13,[[["self"]]]],[11,R[2154],E,"Get the dimensions of the render target",13,[[["self"]]]],[11,"get_render",E,"Convert the floating point color buffer to 24bpp sRGB for…",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get_rendered_blocks",E,"Get the blocks that have had pixels written too them.…",13,[[["self"]]]],[11,"get_renderf32",E,"Get the raw floating point framebuffer",13,[[["self"]],[["f32"],["vec",["f32"]]]]],[0,"camera",R[2239],"Provides a camera based on a single transformation that…",N,N],[3,"Camera",R[2295],"Our camera for the ray tracer, has a transformation to…",N,N],[12,"active_at",E,"The frame this camera becomes active on",14,N],[11,"new",E,"Create the camera with some orientation in the world…",14,[[["f32"],["usize"],[R[2237]]],["camera"]]],[11,"animated_fov",E,"Create a camera with some orientation in the world…",14,[[["f32"],["usize"],[R[2237]],["vec",["f32"]]],["camera"]]],[11,R[2264],E,"Update the camera's shutter open/close time for this new…",14,[[["f32"],["self"]]]],[11,"shutter_time",E,"Get the time that the shutter opens and closes at",14,[[["self"]]]],[11,"generate_ray",E,"Generate a ray from the camera through the pixel `px`",14,[[["f32"],["self"]],["ray"]]],[0,"filter",R[2239],"The filter module provides reconstruction filters to be…",N,N],[0,"gaussian",R[2240],"Provides a Gaussian reconstruction filter.",N,N],[3,"Gaussian",R[2296],"A Gaussian reconstruction filter. Recommended parameters…",N,N],[11,"new",E,E,15,[[["f32"]],["gaussian"]]],[0,"mitchell_netravali",R[2240],"Provides an implementation of the Mitchell-Netravali…",N,N],[3,R[2385],R[2297],"A Mitchell-Netravali reconstruction filter. Recommended…",N,N],[11,"new",E,E,16,[[["f32"]],[R[2368]]]],[8,"Filter",R[2240],"Trait implemented by all reconstructon filters. Provides…",N,N],[10,"weight",E,"Compute the weight of this filter at some point (x, y)…",17,[[["f32"],["self"]],["f32"]]],[10,"width",E,"Return the width of the filter",17,[[["self"]],["f32"]]],[10,"inv_width",E,"Return the inverse width of the filter",17,[[["self"]],["f32"]]],[10,"height",E,"Return the height of the filter",17,[[["self"]],["f32"]]],[10,R[2344],E,"Return the inverse height of the filter",17,[[["self"]],["f32"]]],[0,"animated_color",R[2239],"Provides an animated color value, so you can have colors…",N,N],[3,R[2386],R[2298],"`ColorKeyframe` is a color associated with a specific time",N,N],[12,"color",E,E,18,N],[12,"time",E,E,18,N],[3,R[2387],E,"`AnimatedColor` is a list of colors associated with time…",N,N],[11,"new",E,E,18,[[["f32"],["colorf"]],[R[2242]]]],[11,R[2241],E,"Create an animated transform that will blend between the…",19,[[[R[2242]],["vec",[R[2242]]]],[R[2250]]]],[11,"color",E,"Compute the color at the desired time",19,[[["f32"],["self"]],["colorf"]]],[0,"image",R[2239],"Provides a simple RGBA_F32 image, used by the distributed…",N,N],[3,"Image",R[2299],E,N,N],[11,"new",E,E,20,[[],["image"]]],[11,"add_pixels",E,"Add the floating point RGBAf32 pixels to the image. It is…",20,[[["self"]]]],[11,"add_blocks",E,"Add the blocks of RGBAf32 pixels to the image. It's…",20,[[["self"]]]],[11,"get_srgb8",E,"Convert the Image to sRGB8 format and return it",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[2154],E,E,20,[[["self"]]]],[11,"new",R[2239],E,10,[[["f32"],["usize"]],["frameinfo"]]],[0,"geometry",R[2260],"The geometry module defines the Geometry trait implemented…",N,N],[0,"differential_geometry",R[2245],"Defines the `DifferentialGeometry` type which is used to…",N,N],[3,R[2388],R[2300],"Stores information about a hit piece of geometry of some…",N,N],[12,"p",E,R[2265],21,N],[12,"n",E,"The shading normal",21,N],[12,"ng",E,"The geometry normal",21,N],[12,U,E,"Surface parameterization u, v for texture mapping",21,N],[12,"v",E,E,21,N],[12,"time",E,"The intersection time",21,N],[12,"dp_du",E,"Derivative of the point with respect to the u…",21,N],[12,"dp_dv",E,"Derivative of the point with respect to the v…",21,N],[12,"geom",E,"The geometry that was hit",21,N],[11,"new",E,"Setup the differential geometry. Note that the normal will…",21,[[["f32"],["geometry"],["vector"],["point"],["normal"]],[R[2243]]]],[11,"with_normal",E,"Setup the differential geometry using the normal passed…",21,[[["f32"],["geometry"],["vector"],["point"],["normal"]],[R[2243]]]],[0,R[2244],R[2245],"Defines the Intersection type which stores information…",N,N],[3,R[2389],R[2301],"Stores information about an intersection that occured with…",N,N],[12,"dg",E,"The differential geometry holding information about the…",22,N],[12,"instance",E,"The instance of geometry that was hit",22,N],[12,R[2248],E,"The material of the instance that was hit",22,N],[11,"new",E,"Construct the Intersection from a potential hit stored in…",22,[[[R[2243]],["instance"],[R[2248]]],[R[2244]]]],[0,"instance",R[2245],"Defines an instance of some piece of geometry in the…",N,N],[4,"Instance",R[2302],"Defines an instance of some geometry with its own…",N,N],[13,"Emitter",E,E,23,N],[13,"Receiver",E,E,23,N],[11,"receiver",E,R[2247],23,[[["string"],[R[2246]],["arc",[R[2248]]],[R[2248]],[R[2237]],["arc",[R[2246]]]],["instance"]]],[11,"area_light",E,R[2247],23,[[[R[2237]],["string"],["arc",[R[2248]]],[R[2248]],[R[2249]],["arc",[R[2249]]],[R[2250]]],["instance"]]],[11,"point_light",E,R[2257],23,[[[R[2237]],["string"],[R[2250]]],["instance"]]],[11,R[2258],E,R[2253],23,[[["ray"],["self"]],[[R[2244]],["option",[R[2244]]]]]],[11,"tag",E,"Get the tag for this instance",23,[[["self"]],["str"]]],[11,R[2254],E,"Get the transform for this instance",23,[[["self"]],[R[2237]]]],[11,R[2255],E,"Set the transform for this instance",23,[[["self"],[R[2237]]]]],[0,"sphere",R[2245],"Defines a Sphere at the origin which implements the…",N,N],[3,"Sphere",R[2303],"A sphere with user-specified radius located at the origin.",N,N],[11,"new",E,"Create a sphere with the desired radius",24,[[["f32"]],["sphere"]]],[0,"disk",R[2245],"Defines a Disk type which implements the Geometry,…",N,N],[3,"Disk",R[2304],"A disk with some inner and outer radius allowing it to…",N,N],[11,"new",E,"Create a new disk with some inner and outer radius",25,[[["f32"]],["disk"]]],[0,"rectangle",R[2245],"Defines a rectangle centered at the origin, specified by…",N,N],[3,"Rectangle",R[2305],"A rectangle centered at the origin spanning [-width / 2,…",N,N],[11,"new",E,"Create a new rectangle with the desired width and height",26,[[["f32"]],["rectangle"]]],[0,"bbox",R[2245],"Provide an Axis-Aligned Bounding Box type, `BBox`, with an…",N,N],[3,"BBox",R[2306],"A box between the min and max points",N,N],[12,"min",E,E,27,N],[12,"max",E,E,27,N],[11,"new",E,"Create a new degenerate box",27,[[],["bbox"]]],[11,"singular",E,"Create a new box containing only the point passed",27,[[["point"]],["bbox"]]],[11,"span",E,"Create a new box spanning [min, max]",27,[[["point"]],["bbox"]]],[11,"box_union",E,"Get a box representing the union of this box with the one…",27,[[["self"],["bbox"]],["bbox"]]],[11,"point_union",E,"Get a box that contains the passed point, by expanding…",27,[[["point"],["self"]],["bbox"]]],[11,"max_extent",E,"Compute the axis along which the box is longest",27,[[["self"]],["axis"]]],[11,"lerp",E,"Compute the point in the box at some t value along each axis",27,[[["f32"],["self"]],["point"]]],[11,"offset",E,"Find the position of the point relative to the box, with…",27,[[["point"],["self"]],["vector"]]],[11,R[2259],E,"Compute the surface area of the box",27,[[["self"]],["f32"]]],[11,"fast_intersect",E,"Optimized ray-box intersection test, for use in the BVH…",27,[[["ray"],["vector"],["self"]],["bool"]]],[0,"bvh",R[2245],"Provides a simple SAH split based BVH2 that stores types…",N,N],[3,"BVH",R[2307],"A standard BVH2 that stores objects that can report their…",N,N],[11,"unanimated",E,"Create a new non-animated BVH holding the geometry",28,[[["usize"],["vec"]],["bvh"]]],[11,"new",E,"Create a new BVH using a SAH construction algorithm which…",28,[[["f32"],["usize"],["vec"]],["bvh"]]],[11,"rebuild",E,"Re-build the BVH for the time range passed",28,[[["f32"],["self"]]]],[11,R[2258],E,"Traverse the BVH and call the function passed on the…",28,[[["ray"],["self"],["f"]],["option"]]],[11,"iter",E,E,28,[[["self"]],["iter"]]],[0,"mesh",R[2245],"Defines a triangle mesh geometry. Intersection tests are…",N,N],[3,"Mesh",R[2308],"A mesh composed of triangles, specified by directly…",N,N],[12,"bvh",E,E,29,N],[3,"Triangle",E,"A triangle in some mesh. Just stores a reference to the…",N,N],[12,"a",E,E,30,N],[12,"b",E,E,30,N],[12,"c",E,E,30,N],[12,"positions",E,E,30,N],[12,"normals",E,E,30,N],[12,"texcoords",E,E,30,N],[5,"intersect_triangle",E,E,N,[[["ray"],["point"],["g"],["normal"]],[[R[2243]],["option",[R[2243]]]]]],[11,"new",E,"Create a new Mesh from the triangles described in the…",29,[[["arc",["vec"]],["u32"],["vec",["u32"]],["arc",["vec"]],["vec",["normal"]],["vec",["point"]]],["mesh"]]],[11,"load_obj",E,"Load all the meshes defined in an OBJ file and return them…",29,[[["path"]],[["hashmap",["string","arc"]],["string"],["arc",["mesh"]]]]],[11,"new",E,R[2251],30,[[["arc",["vec"]],["usize"],["arc",["vec"]],["vec",["normal"]],["vec",["point"]]],["triangle"]]],[0,"animated_mesh",R[2245],"Defines an animated triangle mesh geometry. It is required…",N,N],[3,R[2390],R[2309],E,N,N],[3,R[2391],E,"An animated mesh composed of a series of meshes linearly…",N,N],[3,R[2392],E,"An animated triangle in the mesh. Just stores a reference…",N,N],[11,"new",E,E,31,[[["f32"],["vec",["f32"]],["vec",["arc"]],["arc",["vec"]],["vec",["arc"]],["arc",["vec"]]],[R[2252]]]],[11,"new",E,"Create a new AnimatedMesh from the meshes passed. It's…",32,[[["f32"],["vec",["arc"]],["arc",["mesh"]],["vec",["f32"]]],["animatedmesh"]]],[11,"new",E,R[2251],33,[[[R[2252]],["arc",[R[2252]]],["usize"]],["animatedtriangle"]]],[0,"receiver",R[2245],"A receiver is an instance of geometry that does not emit…",N,N],[3,"Receiver",R[2310],"An instance of geometry in the scene that only receives…",N,N],[12,R[2248],E,"The material being used by this instance.",34,N],[12,"tag",E,R[2256],34,N],[11,"new",E,"Create a new instance of some geometry in the scene",34,[[["string"],[R[2246]],["arc",[R[2248]]],[R[2248]],[R[2237]],["arc",[R[2246]]]],["receiver"]]],[11,R[2258],E,R[2253],34,[[["ray"],["self"]],["option"]]],[11,R[2254],E,"Get the transform to place the receiver into world space",34,[[["self"]],[R[2237]]]],[11,R[2255],E,"Set the transform to place the receiver into world space",34,[[["self"],[R[2237]]]]],[0,"emitter",R[2245],"An emitter is an instance of geometry that both receives…",N,N],[3,"Emitter",R[2311],"An instance of geometry in the scene that receives and…",N,N],[12,"emission",E,"The light intensity emitted",35,N],[12,"tag",E,R[2256],35,N],[11,"area",E,"Create a new area light using the geometry passed to emit…",35,[[[R[2237]],["string"],["arc",[R[2248]]],[R[2248]],[R[2249]],["arc",[R[2249]]],[R[2250]]],["emitter"]]],[11,"point",E,R[2257],35,[[[R[2237]],["string"],[R[2250]]],["emitter"]]],[11,R[2258],E,R[2253],35,[[["ray"],["self"]],["option"]]],[11,"radiance",E,"Return the radiance emitted by the light in the direction…",35,[[["f32"],["vector"],["point"],["self"],["normal"]],["colorf"]]],[11,R[2254],E,"Get the transform to place the emitter into world space",35,[[["self"]],[R[2237]]]],[11,R[2255],E,"Set the transform to place the emitter into world space",35,[[["self"],[R[2237]]]]],[8,"Geometry",R[2245],"Trait implemented by geometric primitives",N,N],[10,R[2258],E,"Test a ray for intersection with the geometry. The ray…",36,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[8,"Boundable",E,"Trait implemented by scene objects that can report an AABB…",N,N],[10,"bounds",E,"Get an AABB reporting the object's bounds over the time…",37,[[["f32"],["self"]],["bbox"]]],[11,R[2345],E,"Have the object recompute its bounds for the time range.…",37,[[["f32"],["self"]]]],[8,"Sampleable",E,"Trait implemented by geometry that can sample a point on…",N,N],[10,R[2346],E,"Uniformly sample a position and normal on the surface…",38,[[["self"]]]],[10,"sample",E,R[2347],38,[[["point"],["self"]]]],[10,R[2259],E,"Return the surface area of the shape",38,[[["self"]],["f32"]]],[10,"pdf",E,R[2348],38,[[["point"],["self"],["vector"]],["f32"]]],[8,"BoundableGeom",E,E,N,N],[8,"SampleableGeom",E,E,N,N],[0,"sampler",R[2260],"Provides the Sampler trait which is implemented by the…",N,N],[3,"Sample",R[2261],"Provides a simple way to pass around a 3 component sample…",N,N],[12,"two_d",E,"The 2D sample",39,N],[12,"one_d",E,"The 1D sample",39,N],[3,"Region",E,"Defines a region of the image being sampled in pixel…",N,N],[12,"current",E,"Current coordinates of the pixel to sample (x, y)",40,N],[12,"start",E,"Coordinates of the start of region being sampled (x, y)",40,N],[12,"end",E,"Coordinates of the end of the region being sampled (x, y)",40,N],[12,"dim",E,"Dimensions of the region being sampled",40,N],[0,"morton",E,E,N,N],[5,"part1_by1","tray_rust::sampler::morton","Provides utilities for 2D Morton code generation using…",N,[[["u32"]],["u32"]]],[5,"morton2",E,"Compute the Morton code for the `(x, y)` position",N,[[],["u32"]]],[0,"uniform",R[2261],"Provides the simplest and worst sampling method, the…",N,N],[3,"Uniform",R[2312],"Uniform sampler that takes one sample per pixel at the…",N,N],[11,"new",E,"Create a uniform sampler to sample the image in `dim.0 *…",41,[[],["uniform"]]],[0,"ld",R[2261],"Provides a high quality sampling scheme based on (0,…",N,N],[3,R[2393],R[2313],"Low discrepancy sampler that makes use of the (0, 2)…",N,N],[5,"sample_2d",E,"Generate a 2D pattern of low discrepancy samples to fill…",N,[[["u32"]]]],[5,"sample_1d",E,"Generate a 1D pattern of low discrepancy samples to fill…",N,[[["u32"]]]],[5,"sample_02",E,"Generate a sample from a scrambled (0, 2) sequence",N,[[["u32"]]]],[5,"van_der_corput",E,"Generate a scrambled Van der Corput sequence value as…",N,[[["u32"]],["f32"]]],[5,"sobol",E,"Generate a scrambled Sobol' sequence value as described by…",N,[[["u32"]],["f32"]]],[11,"new",E,R[2262],42,[[["usize"]],["lowdiscrepancy"]]],[0,"adaptive",R[2261],"Provides an adaptive sampler which will start sampling at…",N,N],[3,"Adaptive",R[2314],"Adaptive sampler that makes use of the (0, 2) sequence to…",N,N],[11,"new",E,R[2262],43,[[["usize"]],["adaptive"]]],[0,"block_queue",R[2261],"Provides a queue of block indices that the sampler…",N,N],[3,"BlockQueue",R[2315],"The queue of blocks to be worked on shared immutably…",N,N],[3,R[2405],E,"Iterator to work through the queue safely",N,N],[11,"new",E,"Create a block queue for the image with dimensions `img`.…",44,[[],["blockqueue"]]],[11,"block_dim",E,"Get the dimensions of an individual block in the queue",44,[[["self"]]]],[11,"iter",E,"Get an iterator to work through the queue",44,[[["self"]],["blockqueueiterator"]]],[11,"len",E,"Get the length of the queue",44,[[["self"]],["usize"]]],[11,R[677],E,"Check if the queue is empty",44,[[["self"]],["bool"]]],[8,"Sampler",R[2261],"Provides the interface for all samplers to implement.…",N,N],[10,R[2350],E,"Fill the vector with 2D pixel coordinate samples for a…",45,[[["self"],["stdrng"],["vec"]]]],[10,R[2351],E,"Fill the slice with 2D samples from the sampler",45,[[["self"],["stdrng"]]]],[10,R[2352],E,"Fill the slice with 1D samples from the sampler",45,[[["self"],["stdrng"]]]],[10,"max_spp",E,"Get the max number of samples this sampler will take per…",45,[[["self"]],["usize"]]],[10,R[2353],E,"Check if the sampler has more samples for the region being…",45,[[["self"]],["bool"]]],[10,R[2154],E,"Get the dimensions of the region being sampled in pixels",45,[[["self"]]]],[10,R[2354],E,"Move to a new block of the image to sample with this…",45,[[["self"]]]],[10,R[2355],E,"Get the region being samples",45,[[["self"]],["region"]]],[11,R[2356],E,"Let the sampler inspect the results of sampling the pixel…",45,[[["self"]],["bool"]]],[11,"new",E,"Create a new sample taking the 2D sample values from the…",39,[[["f32"]],["sample"]]],[11,"new",E,"Create a new region starting at `start` with dimension `dim`",40,[[],["region"]]],[11,"select_region",E,"Select a new region starting at region indices `start`…",40,[[["self"]]]],[0,"integrator",R[2260],"The integrator module defines the Integrator trait…",N,N],[0,"whitted",R[2263],"Defines the Whitted integrator which implements Whitted…",N,N],[3,"Whitted",R[2316],"The Whitted integrator implementing the Whitted recursive…",N,N],[11,"new",E,"Create a new Whitted integrator with the desired maximum…",46,[[["u32"]],["whitted"]]],[0,"path",R[2263],"Defines the Path integrator which implements path tracing…",N,N],[3,"Path",R[2317],"The path integrator implementing Path tracing with…",N,N],[11,"new",E,"Create a new path integrator with the min and max length…",47,[[["u32"]],["path"]]],[0,"normals_debug",R[2263],"Defines the `NormalsDebug` integrator which renders out…",N,N],[3,R[2406],R[2318],"The `NormalsDebug` integrator implementing the…",N,N],[8,"Integrator",R[2263],"Trait implemented by the various integration methods that…",N,N],[10,R[2357],E,"Compute the illumination at the intersection in the scene",48,[[[R[691]],[R[2244]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,R[2268],E,"Compute the color of specularly reflecting light off the…",48,[[["bsdf"],[R[691]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,R[2269],E,"Compute the color of specularly transmitted light through…",48,[[["bsdf"],[R[691]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,"sample_one_light",E,"Uniformly sample the contribution of a randomly chosen…",48,[[["bsdf"],["scene"],["sample"],["f32"],["vector"],["point"],["self"]],["colorf"]]],[11,"estimate_direct",E,"Estimate the direct light contribution to the surface…",48,[[["bsdf"],[R[2266]],[R[698],[R[2266]]],["scene"],["sample"],["f32"],["vector"],["point"],["light"],["self"]],["colorf"]]],[0,"scene",R[2260],"Defines the scene struct which contains the various…",N,N],[3,"Scene",R[2319],"The scene containing the objects and camera configuration…",N,N],[12,"cameras",E,E,49,N],[12,"bvh",E,E,49,N],[12,"integrator",E,E,49,N],[11,"load_file",E,E,49,[[["str"]]]],[11,R[2258],E,"Test the ray for intersections against the objects in the…",49,[[["ray"],["self"]],[[R[2244]],["option",[R[2244]]]]]],[11,R[2264],E,"Advance the time the scene is currently displaying to the…",49,[[["f32"],["usize"],["self"]]]],[11,"active_camera",E,"Get the active camera for the current frame",49,[[["self"]],["camera"]]],[0,"bxdf",R[2260],"Defines the BxDF interface implemented by BRDF/BTDFs to…",N,N],[4,"BxDFType",R[2267],"Various types of BxDFs that can be selected to specify…",N,N],[13,"Reflection",E,E,50,N],[13,"Transmission",E,E,50,N],[13,"Diffuse",E,E,50,N],[13,"Glossy",E,E,50,N],[13,"Specular",E,E,50,N],[5,"cos_theta",E,"Compute the value of cosine theta for a vector in shading…",N,[[["vector"]],["f32"]]],[5,"cos_theta_sqr",E,"Compute the value of cosine^2 theta for a vector in…",N,[[["vector"]],["f32"]]],[5,"sin_theta_sqr",E,"Compute the value of (sine theta)^2 for a vector in…",N,[[["vector"]],["f32"]]],[5,"sin_theta",E,"Compute the value of sine theta for a vector in shading…",N,[[["vector"]],["f32"]]],[5,"tan_theta",E,"Compute the value of tan theta for a vector in shading space",N,[[["vector"]],["f32"]]],[5,"tan_theta_sqr",E,"Compute the value of tan theta^2 for a vector in shading…",N,[[["vector"]],["f32"]]],[5,"arctan_theta",E,"Compute the value of arctan theta for a vector in shading…",N,[[["vector"]],["f32"]]],[5,"cos_phi",E,"Compute the value of cosine phi for a vector in shading…",N,[[["vector"]],["f32"]]],[5,"sin_phi",E,"Compute the value of sine phi for a vector in shading space",N,[[["vector"]],["f32"]]],[5,"same_hemisphere",E,"Check if two vectors are in the same hemisphere in shading…",N,[[["vector"]],["bool"]]],[0,"bsdf",E,"Defines the BSDF which acts as a container for composing…",N,N],[3,"BSDF",R[2320],"The BSDF contains the various BRDFs and BTDFs that…",N,N],[12,"p",E,R[2265],51,N],[12,"n",E,"Shading normal, may be perturbed by bump mapping",51,N],[12,"ng",E,"The actual geometry normal",51,N],[12,"tan",E,"Tangent vector for the surface",51,N],[12,"bitan",E,"Bitangent vector for the surface",51,N],[12,"eta",E,"Refractive index of the geometry",51,N],[11,"new",E,"Create a new BSDF using the BxDFs passed to shade the…",51,[[["f32"],[R[2243]]],["bsdf"]]],[11,"num_bxdfs",E,"Return the total number of BxDFs",51,[[["self"]],["usize"]]],[11,"num_matching",E,"Return the number of BxDFs matching the flags",51,[[[R[698],[R[2266]]],["self"],[R[2266]]],["usize"]]],[11,"to_shading",E,"Transform the vector from world space to shading space",51,[[["self"],["vector"]],["vector"]]],[11,"from_shading",E,"Transform the vectro from shading space to world space",51,[[["self"],["vector"]],["vector"]]],[11,"eval",E,"Evaluate the BSDF for the outgoing and incident light…",51,[[[R[2266]],["vector"],[R[698],[R[2266]]],["self"]],["colorf"]]],[11,"sample",E,"Sample a component of the BSDF to get an incident light…",51,[[["sample"],[R[2266]],["vector"],[R[698],[R[2266]]],["self"]]]],[11,"pdf",E,"Compute the pdf for sampling the pair of incident and…",51,[[[R[2266]],["vector"],[R[698],[R[2266]]],["self"]],["f32"]]],[0,R[2369],R[2267],"Defines a Lambertion BRDF that describes perfectly diffuse…",N,N],[3,"Lambertian",R[2321],"Lambertian BRDF that implements the Lambertian reflectance…",N,N],[11,"new",E,"Create a new Lambertian BRDF with the desired reflective…",52,[[["colorf"]],[R[2369]]]],[0,"oren_nayar",R[2267],"Defines an Oren-Nayar BRDF that describes diffuse…",N,N],[3,"OrenNayar",R[2322],"Oren-Nayar BRDF that implements the Oren-Nayar reflectance…",N,N],[11,"new",E,"Create a new Oren-Nayar BRDF with the desired color and…",53,[[["f32"],["colorf"]],["orennayar"]]],[0,"fresnel",R[2267],"Provides the Fresnel term trait and implementations for…",N,N],[3,"Dielectric",R[2323],"Computes the Fresnel term for dielectric materials",N,N],[12,"eta_i",E,"Refractive index of the material the light is coming from",54,N],[12,"eta_t",E,"Refractive index of the material the light is…",54,N],[3,"Conductor",E,"Computes the Fresnel term for conductive materials",N,N],[12,"eta",E,"Refractive index of the material being hit",55,N],[12,"k",E,"Absorption coefficient of the material being hit",55,N],[8,"Fresnel",E,"The Fresnel trait implemented by the various Fresnel term…",N,N],[10,"fresnel",E,"Compute the fresnel term for light incident to the object…",56,[[["f32"],["self"]],["colorf"]]],[11,"new",E,"Create a new Dielectric Fresnel term for the boundary…",54,[[["f32"]],[R[2271]]]],[11,"new",E,"Create a new Conductor Fresnel term for the object. `eta`:…",55,[[["colorf"]],["conductor"]]],[0,R[2268],R[2267],"Defines a BRDF that describes specular reflection",N,N],[3,R[2394],R[2324],"Specular reflection BRDF that implements a specularly…",N,N],[11,"new",E,"Create a specularly reflective BRDF with the reflective…",57,[[["fresnel"],["colorf"]],[R[2370]]]],[0,R[2269],R[2267],"Defines a BTDF that describes specular transmission",N,N],[3,R[2395],R[2325],"Specular transmission BTDF that implements a specularly…",N,N],[11,"new",E,"Create a specularly transmissive BTDF with the color and…",58,[[[R[2271]],["colorf"]],[R[2371]]]],[0,"merl",R[2267],"The MERL BRDF represents the surface's properties through…",N,N],[3,"Merl",R[2326],"BRDF that uses measured data to model the surface…",N,N],[11,"new",E,"Create a MERL BRDF to use data loaded from a MERL BRDF…",59,[[["usize"]],["merl"]]],[0,"microfacet",R[2267],"Module providing various microfacet distribution functions…",N,N],[0,"beckmann",R[2270],"This module provides a Beckmann microfacet distribution…",N,N],[3,"Beckmann",R[2327],"Beckmann microfacet distribution with Smith…",N,N],[11,"new",E,"Create a new Beckmann distribution with the desired width",60,[[["f32"]],["beckmann"]]],[0,"ggx",R[2270],"This module provides a GGX microfacet distribution with a…",N,N],[3,"GGX",R[2328],"GGX microfacet distribution with Smith shadowing-masking.…",N,N],[11,"new",E,"Create a new GGX distribution with the desired width",61,[[["f32"]],["ggx"]]],[8,R[2396],R[2270],"Trait implemented by all microfacet distributions",N,N],[10,R[2358],E,"Compute the probability that microfacets are oriented with…",62,[[["self"],["vector"]],["f32"]]],[10,"sample",E,"Sample the distribution for some outgoing light direction…",62,[[["self"],["vector"]],["vector"]]],[10,"pdf",E,"Compute the probability of sampling a certain microfacet…",62,[[["self"],["vector"]],["f32"]]],[10,R[2359],E,"Compute the shadowing masking function for the incident…",62,[[["self"],["vector"]],["f32"]]],[10,R[2360],E,"Return the monodirectional shadowing function, G_1 `v` is…",62,[[["self"],["vector"]],["f32"]]],[0,"torrance_sparrow",R[2267],"This module provides the Torrance Sparrow microfacet BRDF,…",N,N],[3,R[2397],R[2329],"Struct providing the Torrance Sparrow BRDF, implemented as…",N,N],[11,"new",E,"Create a new Torrance Sparrow microfacet BRDF",63,[[["fresnel"],[R[2272]],["colorf"]],[R[2372]]]],[0,"microfacet_transmission",R[2267],"This module provides a microfacet model for transmission…",N,N],[3,R[2398],R[2330],"Struct providing the microfacet BTDF, implemented as…",N,N],[11,"new",E,"Create a new transmissive microfacet BRDF",64,[[[R[2271]],[R[2272]],["colorf"]],[R[2373]]]],[8,"BxDF",R[2267],"Trait implemented by BRDF/BTDFs in `tray_rust`. Provides…",N,N],[10,R[2362],E,"Get the type of this BxDF",65,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[10,"eval",E,"Evaluate the BxDF for the pair of incident and outgoing…",65,[[["self"],["vector"]],["colorf"]]],[11,"sample",E,"Sample an incident light direction for an outgoing light…",65,[[["self"],["vector"]]]],[11,"matches",E,"Check if this BxDF matches the type flags passed",65,[[[R[698],[R[2266]]],["self"],[R[2266]]],["bool"]]],[11,"pdf",E,"Compute the pdf of sampling the pair of directions passed…",65,[[["self"],["vector"]],["f32"]]],[11,"all_types",E,"Get an EnumSet containing all flags for the different…",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[11,"all_brdf",E,"Get an EnumSet containing all flags for reflective BxDFs…",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[11,"all_btdf",E,"Get an EnumSet containing all flags for transmissive BxDFs…",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[11,"all",E,"Get an EnumSet containing all flags for all BxDFs. This…",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[11,"specular",E,"Get an EnumSet containing flags for all types of specular…",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[11,"non_specular",E,"Get an EnumSet containing flags for all non-specular BxDFs",50,[[],[[R[2266]],[R[698],[R[2266]]]]]],[0,R[2248],R[2260],"Defines the trait implemented by all materials and exports…",N,N],[0,"matte",R[2273],"Defines a matte material used to describe diffuse materials",N,N],[3,"Matte",R[2331],"The Matte material describes diffuse materials with either…",N,N],[11,"new",E,"Create a new Matte material with the desired diffuse color…",66,[[["arc",["texture"]],["texture"]],["matte"]]],[0,"specular_metal",R[2273],"Defines a specular metal material",N,N],[3,R[2399],R[2332],"The Specular Metal material describes specularly…",N,N],[11,"new",E,"Create a new specular metal with the desired metal…",67,[[["arc",["texture"]],["texture"]],["specularmetal"]]],[0,"glass",R[2273],"Defines a specular glass material",N,N],[3,"Glass",R[2333],"The Glass material describes specularly transmissive and…",N,N],[11,"new",E,"Create the glass material with the desired color and index…",68,[[["arc",["texture"]],["texture"]],["glass"]]],[0,"merl",R[2273],"The MERL Material represents the surface's properties…",N,N],[3,"Merl",R[2334],"Material that uses measured data to model the surface…",N,N],[11,"load_file",E,"Create a new MERL BRDF by loading the refletance data from…",69,[[["path"]],["merl"]]],[0,"plastic",R[2273],"A material that models plastic of varying roughness using…",N,N],[3,"Plastic",R[2335],"The Plastic material describes plastic materials of…",N,N],[11,"new",E,"Create a new plastic material specifying the diffuse and…",70,[[["arc",["texture"]],["texture"]],["plastic"]]],[0,"metal",R[2273],"Provides a material for modelling metal surfaces of…",N,N],[3,"Metal",R[2336],"The Metal material describes metals of varying roughness",N,N],[11,"new",E,"Create a new metal material specifying the reflectance…",71,[[["arc",["texture"]],["texture"]],["metal"]]],[0,"rough_glass",R[2273],"Defines a rough glass material",N,N],[3,"RoughGlass",R[2337],"The `RoughGlass` material describes specularly…",N,N],[11,"new",E,"Create the `RoughGlass` material with the desired color…",72,[[["arc",["texture"]],["texture"]],["roughglass"]]],[8,"Material",R[2273],"Trait implemented by materials. Provides method to get the…",N,N],[10,"bsdf",E,"Get the BSDF for the material which defines its properties…",73,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[0,"light",R[2260],"Defines the light interface implemented by all lights in…",N,N],[3,R[2400],R[2338],"The `OcclusionTester` provides a simple interface for…",N,N],[12,"ray",E,"The ray (or ray segment) that the occlusion test is…",74,N],[8,"Light",E,"Trait implemented by all lights in `tray_rust`. Provides…",N,N],[10,R[2363],E,"Sample the illumination from the light arriving at the…",75,[[["f32"],["point"],["self"]]]],[10,R[2364],E,"Determine if the light is described by a delta distribution",75,[[["self"]],["bool"]]],[10,"pdf",E,"Compute the PDF for sampling the point with incident…",75,[[["f32"],["vector"],["point"],["self"]],["f32"]]],[11,"test_points",E,"Create an occlusion tester to perform the test between two…",74,[[["point"],["f32"]],[R[2274]]]],[11,"test_ray",E,"Create an occlusion tester to perform the test along the…",74,[[["point"],["f32"],["vector"]],[R[2274]]]],[11,"occluded",E,"Perform the occlusion test in the scene",74,[[["scene"],["self"]],["bool"]]],[0,"mc",R[2260],"Defines various Monte Carlo sampling functions for…",N,N],[5,"cos_sample_hemisphere","tray_rust::mc","Sample a hemisphere using a cosine distribution to produce…",N,[[],["vector"]]],[5,"cos_hemisphere_pdf",E,"Compute the PDF of the cosine weighted hemisphere sampling",N,[[["f32"]],["f32"]]],[5,"concentric_sample_disk",E,"Compute concentric sample positions on a unit disk mapping…",N,[[]]],[5,"power_heuristic",E,"Power heuristic for multiple importance sampling for two…",N,[[["f32"]],["f32"]]],[5,"uniform_cone_pdf",E,"Return the PDF for uniformly sampling a cone with some max…",N,[[["f32"]],["f32"]]],[5,"uniform_sample_cone",E,R[2275],N,[[["f32"]],["vector"]]],[5,"uniform_sample_cone_frame",E,R[2275],N,[[["f32"],["vector"]],["vector"]]],[5,"uniform_sample_sphere",E,"Uniformly sample a direction on the unit sphere about the…",N,[[],["vector"]]],[0,"partition",R[2260],"Provides a general partitioning function that implements…",N,N],[5,"partition","tray_rust::partition","Re-orders elements in the range yielded by `it` based on…",N,[[["i"],["f"]],["usize"]]],[0,"exec",R[2260],"The exec module provides an abstraction of the execution…",N,N],[3,"Config",R[2278],"Config passed to set up the execution environment with…",N,N],[12,"out_path",E,E,76,N],[12,"scene_file",E,E,76,N],[12,R[1755],E,E,76,N],[12,"spp",E,E,76,N],[12,"frame_info",E,E,76,N],[12,R[2276],E,E,76,N],[12,"select_blocks",E,"Which blocks the executor should render, stored as (start,…",76,N],[0,R[2277],E,"The multithreaded module provides a multithreaded…",N,N],[3,R[2401],R[2339],"The `MultiThreaded` execution uses a configurable number…",N,N],[11,"new",E,"Create a new multithreaded renderer which will use…",77,[[["u32"]],[R[2277]]]],[0,"distrib",R[2278],"The distrib module provides methods for executing the…",N,N],[0,"worker",R[2280],"The worker module provides the Worker struct which…",N,N],[3,"Worker",R[2340],"A worker process for distributed rendering. Accepts…",N,N],[12,R[2279],E,"Render target the worker will write the current frame too",78,N],[12,"scene",E,E,78,N],[12,"config",E,E,78,N],[7,"PORT",E,"Port that the workers listen for the master on",N,N],[11,"listen_for_master",E,"Listen on the worker `PORT` for the master to contact us…",78,[[["u32"]],["worker"]]],[11,"send_results",E,"Send our blocks back to the master",78,[[["self"]]]],[0,"master",R[2280],"The master module provides the Master struct which…",N,N],[3,"Master",R[2341],"The Master organizes the set of Worker processes and…",N,N],[11,"start_workers",E,"Create a new master that will contact the worker nodes…",79,[[["string"],["config"],["vec",["string"]]]]],[8,"Exec",R[2278],"Trait implemented by different execution environments that…",N,N],[10,"render",E,"Render the scene using this rendering backend, will render…",80,[[[R[2281]],["scene"],["self"],["config"]]]],[11,"new",E,E,76,[[["string"],["pathbuf"],["usize"],["u32"],["frameinfo"]],["config"]]],[0,"texture",R[2260],"Defines the trait implemented by all textured values",N,N],[3,R[2403],R[2282],"A single valued, solid scalar texture",N,N],[3,R[2404],E,"A single valued, solid color texture",N,N],[3,"UVColor",E,E,N,N],[0,"image",E,E,N,N],[3,"Image",R[2342],"An `Image` texture is a `Texture` whose samples come from…",N,N],[11,"new",E,E,81,[[[R[2108]]],["image"]]],[0,"animated_image",R[2282],E,N,N],[3,R[2402],R[2343],"An `AnimatedImage` texture is a `Texture` whose samples…",N,N],[11,"new",E,E,82,[[["vec"]],["animatedimage"]]],[11,"active_keyframes",E,E,82,[[["f32"],["self"]]]],[8,"Texture",R[2282],"scalars or Colors can be computed on some image texture or…",N,N],[10,R[2366],E,"Sample the textured value at texture coordinates u,v at…",83,[[["f32"],["self"]],["f32"]]],[10,R[2365],E,E,83,[[["f32"],["self"]],["colorf"]]],[11,"new",E,E,84,[[["f32"]],["constantscalar"]]],[11,"new",E,E,85,[[["colorf"]],["constantcolor"]]],[11,"into",R[2231],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",R[2283],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,R[2284],E,E,1,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2285],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,R[2284],E,E,2,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2286],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,R[45],E,E,3,[[[U]],[R[48]]]],[11,R[46],E,E,3,[[],[R[48]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[["self"]],[R[51]]]],[11,R[2284],E,E,3,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2287],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,R[45],E,E,4,[[[U]],[R[48]]]],[11,R[46],E,E,4,[[],[R[48]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[["self"]],[R[51]]]],[11,"into",R[2288],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,R[45],E,E,5,[[[U]],[R[48]]]],[11,R[46],E,E,5,[[],[R[48]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[["self"]],[R[51]]]],[11,R[2284],E,E,5,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2289],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,R[45],E,E,6,[[[U]],[R[48]]]],[11,R[46],E,E,6,[[],[R[48]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[["self"]],[R[51]]]],[11,"into",R[2290],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,R[45],E,E,7,[[[U]],[R[48]]]],[11,R[46],E,E,7,[[],[R[48]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[["self"]],[R[51]]]],[11,R[2284],E,E,7,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2291],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,R[45],E,E,8,[[[U]],[R[48]]]],[11,R[46],E,E,8,[[],[R[48]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[["self"]],[R[51]]]],[11,R[2284],E,E,8,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2292],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,R[45],E,E,9,[[[U]],[R[48]]]],[11,R[46],E,E,9,[[],[R[48]]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[51]]]],[11,"into",R[2239],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,R[45],E,E,10,[[[U]],[R[48]]]],[11,R[46],E,E,10,[[],[R[48]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[["self"]],[R[51]]]],[11,"into",R[2293],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,R[45],E,E,11,[[[U]],[R[48]]]],[11,R[46],E,E,11,[[],[R[48]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[51]]]],[11,R[2284],E,E,11,[[["f32"],[T],["self"]],[T]]],[11,"into",R[2294],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[45],E,E,12,[[[U]],[R[48]]]],[11,R[46],E,E,12,[[],[R[48]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[["self"]],[R[51]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[45],E,E,13,[[[U]],[R[48]]]],[11,R[46],E,E,13,[[],[R[48]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[["self"]],[R[51]]]],[11,"into",R[2295],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,R[45],E,E,14,[[[U]],[R[48]]]],[11,R[46],E,E,14,[[],[R[48]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[["self"]],[R[51]]]],[11,"into",R[2296],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,R[45],E,E,15,[[[U]],[R[48]]]],[11,R[46],E,E,15,[[],[R[48]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[["self"]],[R[51]]]],[11,"into",R[2297],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,R[45],E,E,16,[[[U]],[R[48]]]],[11,R[46],E,E,16,[[],[R[48]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[["self"]],[R[51]]]],[11,"into",R[2298],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"],[T]]]],[11,R[45],E,E,18,[[[U]],[R[48]]]],[11,R[46],E,E,18,[[],[R[48]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[51]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,R[45],E,E,19,[[[U]],[R[48]]]],[11,R[46],E,E,19,[[],[R[48]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[["self"]],[R[51]]]],[11,"into",R[2299],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[45],E,E,20,[[[U]],[R[48]]]],[11,R[46],E,E,20,[[],[R[48]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[51]]]],[11,"into",R[2300],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"],[T]]]],[11,R[45],E,E,21,[[[U]],[R[48]]]],[11,R[46],E,E,21,[[],[R[48]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[51]]]],[11,"into",R[2301],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,R[45],E,E,22,[[[U]],[R[48]]]],[11,R[46],E,E,22,[[],[R[48]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[["self"]],[R[51]]]],[11,"into",R[2302],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[45],E,E,23,[[[U]],[R[48]]]],[11,R[46],E,E,23,[[],[R[48]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[["self"]],[R[51]]]],[11,"into",R[2303],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"],[T]]]],[11,R[45],E,E,24,[[[U]],[R[48]]]],[11,R[46],E,E,24,[[],[R[48]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[51]]]],[11,"into",R[2304],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"],[T]]]],[11,R[45],E,E,25,[[[U]],[R[48]]]],[11,R[46],E,E,25,[[],[R[48]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[["self"]],[R[51]]]],[11,"into",R[2305],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"],[T]]]],[11,R[45],E,E,26,[[[U]],[R[48]]]],[11,R[46],E,E,26,[[],[R[48]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[51]]]],[11,"into",R[2306],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[43],E,E,27,[[["self"]],[T]]],[11,R[44],E,E,27,[[["self"],[T]]]],[11,R[45],E,E,27,[[[U]],[R[48]]]],[11,R[46],E,E,27,[[],[R[48]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[["self"]],[R[51]]]],[11,"into",R[2307],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[45],E,E,28,[[[U]],[R[48]]]],[11,R[46],E,E,28,[[],[R[48]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[["self"]],[R[51]]]],[11,"into",R[2308],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[45],E,E,29,[[[U]],[R[48]]]],[11,R[46],E,E,29,[[],[R[48]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[["self"]],[R[51]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[45],E,E,30,[[[U]],[R[48]]]],[11,R[46],E,E,30,[[],[R[48]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[["self"]],[R[51]]]],[11,"into",R[2309],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[45],E,E,31,[[[U]],[R[48]]]],[11,R[46],E,E,31,[[],[R[48]]]],[11,R[50],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[49],E,E,31,[[["self"]],[R[51]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[45],E,E,32,[[[U]],[R[48]]]],[11,R[46],E,E,32,[[],[R[48]]]],[11,R[50],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"]],[T]]],[11,R[49],E,E,32,[[["self"]],[R[51]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[45],E,E,33,[[[U]],[R[48]]]],[11,R[46],E,E,33,[[],[R[48]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[["self"]],[R[51]]]],[11,"into",R[2310],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[45],E,E,34,[[[U]],[R[48]]]],[11,R[46],E,E,34,[[],[R[48]]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[51]]]],[11,"into",R[2311],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[45],E,E,35,[[[U]],[R[48]]]],[11,R[46],E,E,35,[[],[R[48]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[["self"]],[R[51]]]],[11,"into",R[2261],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[45],E,E,39,[[[U]],[R[48]]]],[11,R[46],E,E,39,[[],[R[48]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[51]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[44],E,E,40,[[["self"],[T]]]],[11,R[45],E,E,40,[[[U]],[R[48]]]],[11,R[46],E,E,40,[[],[R[48]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[51]]]],[11,"into",R[2312],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[45],E,E,41,[[[U]],[R[48]]]],[11,R[46],E,E,41,[[],[R[48]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[51]]]],[11,"into",R[2313],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[45],E,E,42,[[[U]],[R[48]]]],[11,R[46],E,E,42,[[],[R[48]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[51]]]],[11,"into",R[2314],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[45],E,E,43,[[[U]],[R[48]]]],[11,R[46],E,E,43,[[],[R[48]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[51]]]],[11,"into",R[2315],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[45],E,E,44,[[[U]],[R[48]]]],[11,R[46],E,E,44,[[],[R[48]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[51]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[364],E,E,86,[[],["i"]]],[11,R[45],E,E,86,[[[U]],[R[48]]]],[11,R[46],E,E,86,[[],[R[48]]]],[11,R[50],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"]],[T]]],[11,R[49],E,E,86,[[["self"]],[R[51]]]],[11,"into",R[2316],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[43],E,E,46,[[["self"]],[T]]],[11,R[44],E,E,46,[[["self"],[T]]]],[11,R[45],E,E,46,[[[U]],[R[48]]]],[11,R[46],E,E,46,[[],[R[48]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[51]]]],[11,"into",R[2317],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[44],E,E,47,[[["self"],[T]]]],[11,R[45],E,E,47,[[[U]],[R[48]]]],[11,R[46],E,E,47,[[],[R[48]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[51]]]],[11,"into",R[2318],E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[43],E,E,87,[[["self"]],[T]]],[11,R[44],E,E,87,[[["self"],[T]]]],[11,R[45],E,E,87,[[[U]],[R[48]]]],[11,R[46],E,E,87,[[],[R[48]]]],[11,R[50],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"]],[T]]],[11,R[49],E,E,87,[[["self"]],[R[51]]]],[11,"into",R[2319],E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[45],E,E,49,[[[U]],[R[48]]]],[11,R[46],E,E,49,[[],[R[48]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[51]]]],[11,"into",R[2267],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[43],E,E,50,[[["self"]],[T]]],[11,R[44],E,E,50,[[["self"],[T]]]],[11,R[45],E,E,50,[[[U]],[R[48]]]],[11,R[46],E,E,50,[[],[R[48]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[51]]]],[11,"into",R[2320],E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[45],E,E,51,[[[U]],[R[48]]]],[11,R[46],E,E,51,[[],[R[48]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[51]]]],[11,"into",R[2321],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[43],E,E,52,[[["self"]],[T]]],[11,R[44],E,E,52,[[["self"],[T]]]],[11,R[45],E,E,52,[[[U]],[R[48]]]],[11,R[46],E,E,52,[[],[R[48]]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[["self"]],[R[51]]]],[11,"into",R[2322],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[43],E,E,53,[[["self"]],[T]]],[11,R[44],E,E,53,[[["self"],[T]]]],[11,R[45],E,E,53,[[[U]],[R[48]]]],[11,R[46],E,E,53,[[],[R[48]]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[["self"]],[R[51]]]],[11,"into",R[2323],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[43],E,E,54,[[["self"]],[T]]],[11,R[44],E,E,54,[[["self"],[T]]]],[11,R[45],E,E,54,[[[U]],[R[48]]]],[11,R[46],E,E,54,[[],[R[48]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[51]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[43],E,E,55,[[["self"]],[T]]],[11,R[44],E,E,55,[[["self"],[T]]]],[11,R[45],E,E,55,[[[U]],[R[48]]]],[11,R[46],E,E,55,[[],[R[48]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[51]]]],[11,"into",R[2324],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[43],E,E,57,[[["self"]],[T]]],[11,R[44],E,E,57,[[["self"],[T]]]],[11,R[45],E,E,57,[[[U]],[R[48]]]],[11,R[46],E,E,57,[[],[R[48]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[51]]]],[11,"into",R[2325],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[43],E,E,58,[[["self"]],[T]]],[11,R[44],E,E,58,[[["self"],[T]]]],[11,R[45],E,E,58,[[[U]],[R[48]]]],[11,R[46],E,E,58,[[],[R[48]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[51]]]],[11,"into",R[2326],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[43],E,E,59,[[["self"]],[T]]],[11,R[44],E,E,59,[[["self"],[T]]]],[11,R[45],E,E,59,[[[U]],[R[48]]]],[11,R[46],E,E,59,[[],[R[48]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[51]]]],[11,"into",R[2327],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[43],E,E,60,[[["self"]],[T]]],[11,R[44],E,E,60,[[["self"],[T]]]],[11,R[45],E,E,60,[[[U]],[R[48]]]],[11,R[46],E,E,60,[[],[R[48]]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[["self"]],[R[51]]]],[11,"into",R[2328],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[43],E,E,61,[[["self"]],[T]]],[11,R[44],E,E,61,[[["self"],[T]]]],[11,R[45],E,E,61,[[[U]],[R[48]]]],[11,R[46],E,E,61,[[],[R[48]]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[["self"]],[R[51]]]],[11,"into",R[2329],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[43],E,E,63,[[["self"]],[T]]],[11,R[44],E,E,63,[[["self"],[T]]]],[11,R[45],E,E,63,[[[U]],[R[48]]]],[11,R[46],E,E,63,[[],[R[48]]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[["self"]],[R[51]]]],[11,"into",R[2330],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[43],E,E,64,[[["self"]],[T]]],[11,R[44],E,E,64,[[["self"],[T]]]],[11,R[45],E,E,64,[[[U]],[R[48]]]],[11,R[46],E,E,64,[[],[R[48]]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[["self"]],[R[51]]]],[11,"into",R[2331],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[45],E,E,66,[[[U]],[R[48]]]],[11,R[46],E,E,66,[[],[R[48]]]],[11,R[50],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[["self"]],[R[51]]]],[11,"into",R[2332],E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[45],E,E,67,[[[U]],[R[48]]]],[11,R[46],E,E,67,[[],[R[48]]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[["self"]],[R[51]]]],[11,"into",R[2333],E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[45],E,E,68,[[[U]],[R[48]]]],[11,R[46],E,E,68,[[],[R[48]]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[["self"]],[R[51]]]],[11,"into",R[2334],E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[45],E,E,69,[[[U]],[R[48]]]],[11,R[46],E,E,69,[[],[R[48]]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[["self"]],[R[51]]]],[11,"into",R[2335],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[45],E,E,70,[[[U]],[R[48]]]],[11,R[46],E,E,70,[[],[R[48]]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[["self"]],[R[51]]]],[11,"into",R[2336],E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[45],E,E,71,[[[U]],[R[48]]]],[11,R[46],E,E,71,[[],[R[48]]]],[11,R[50],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[["self"]],[R[51]]]],[11,"into",R[2337],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[45],E,E,72,[[[U]],[R[48]]]],[11,R[46],E,E,72,[[],[R[48]]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[["self"]],[R[51]]]],[11,"into",R[2338],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[43],E,E,74,[[["self"]],[T]]],[11,R[44],E,E,74,[[["self"],[T]]]],[11,R[45],E,E,74,[[[U]],[R[48]]]],[11,R[46],E,E,74,[[],[R[48]]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[["self"]],[R[51]]]],[11,"into",R[2278],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[43],E,E,76,[[["self"]],[T]]],[11,R[44],E,E,76,[[["self"],[T]]]],[11,R[45],E,E,76,[[[U]],[R[48]]]],[11,R[46],E,E,76,[[],[R[48]]]],[11,R[50],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"]],[T]]],[11,R[49],E,E,76,[[["self"]],[R[51]]]],[11,"into",R[2339],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[45],E,E,77,[[[U]],[R[48]]]],[11,R[46],E,E,77,[[],[R[48]]]],[11,R[50],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"]],[T]]],[11,R[49],E,E,77,[[["self"]],[R[51]]]],[11,"into",R[2340],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[45],E,E,78,[[[U]],[R[48]]]],[11,R[46],E,E,78,[[],[R[48]]]],[11,R[50],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"]],[T]]],[11,R[49],E,E,78,[[["self"]],[R[51]]]],[11,"into",R[2341],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[45],E,E,79,[[[U]],[R[48]]]],[11,R[46],E,E,79,[[],[R[48]]]],[11,R[50],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"]],[T]]],[11,R[49],E,E,79,[[["self"]],[R[51]]]],[11,"into",R[2282],E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[45],E,E,84,[[[U]],[R[48]]]],[11,R[46],E,E,84,[[],[R[48]]]],[11,R[50],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"]],[T]]],[11,R[49],E,E,84,[[["self"]],[R[51]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[45],E,E,85,[[[U]],[R[48]]]],[11,R[46],E,E,85,[[],[R[48]]]],[11,R[50],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"]],[T]]],[11,R[49],E,E,85,[[["self"]],[R[51]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[45],E,E,88,[[[U]],[R[48]]]],[11,R[46],E,E,88,[[],[R[48]]]],[11,R[50],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"]],[T]]],[11,R[49],E,E,88,[[["self"]],[R[51]]]],[11,"into",R[2342],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[45],E,E,81,[[[U]],[R[48]]]],[11,R[46],E,E,81,[[],[R[48]]]],[11,R[50],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"]],[T]]],[11,R[49],E,E,81,[[["self"]],[R[51]]]],[11,"into",R[2343],E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[45],E,E,82,[[[U]],[R[48]]]],[11,R[46],E,E,82,[[],[R[48]]]],[11,R[50],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"]],[T]]],[11,R[49],E,E,82,[[["self"]],[R[51]]]],[11,"weight",R[2296],E,15,[[["f32"],["self"]],["f32"]]],[11,"width",E,E,15,[[["self"]],["f32"]]],[11,"inv_width",E,E,15,[[["self"]],["f32"]]],[11,"height",E,E,15,[[["self"]],["f32"]]],[11,R[2344],E,E,15,[[["self"]],["f32"]]],[11,"weight",R[2297],E,16,[[["f32"],["self"]],["f32"]]],[11,"width",E,E,16,[[["self"]],["f32"]]],[11,"inv_width",E,E,16,[[["self"]],["f32"]]],[11,"height",E,E,16,[[["self"]],["f32"]]],[11,R[2344],E,E,16,[[["self"]],["f32"]]],[11,R[2258],R[2303],E,24,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],R[2304],E,25,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],R[2305],E,26,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],R[2308],E,29,[[["self"],["ray"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],E,E,30,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],R[2309],E,32,[[["self"],["ray"]],[[R[2243]],["option",[R[2243]]]]]],[11,R[2258],E,E,33,[[["ray"],["self"]],[[R[2243]],["option",[R[2243]]]]]],[11,"bounds",R[2302],E,23,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2303],E,24,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2304],E,25,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2305],E,26,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2307],E,28,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2308],E,29,[[["f32"],["self"]],["bbox"]]],[11,"bounds",E,E,30,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2309],E,32,[[["f32"],["self"]],["bbox"]]],[11,R[2345],E,E,32,[[["f32"],["self"]]]],[11,"bounds",E,E,33,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2310],E,34,[[["f32"],["self"]],["bbox"]]],[11,"bounds",R[2311],E,35,[[["f32"],["self"]],["bbox"]]],[11,R[2346],R[2303],E,24,[[["self"]]]],[11,"sample",E,R[2347],24,[[["point"],["self"]]]],[11,R[2259],E,R[2349],24,[[["self"]],["f32"]]],[11,"pdf",E,R[2348],24,[[["point"],["self"],["vector"]],["f32"]]],[11,R[2346],R[2304],E,25,[[["self"]]]],[11,"sample",E,E,25,[[["point"],["self"]]]],[11,R[2259],E,E,25,[[["self"]],["f32"]]],[11,"pdf",E,E,25,[[["point"],["self"],["vector"]],["f32"]]],[11,R[2346],R[2305],"Uniform sampling for a rect is simple: just scale the two…",26,[[["self"]]]],[11,"sample",E,E,26,[[["point"],["self"]]]],[11,R[2259],E,R[2349],26,[[["self"]],["f32"]]],[11,"pdf",E,R[2348],26,[[["point"],["self"],["vector"]],["f32"]]],[11,R[2350],R[2312],E,41,[[["self"],["stdrng"],["vec"]]]],[11,R[2351],E,E,41,[[["self"],["stdrng"]]]],[11,R[2352],E,E,41,[[["self"],["stdrng"]]]],[11,"max_spp",E,E,41,[[["self"]],["usize"]]],[11,R[2353],E,E,41,[[["self"]],["bool"]]],[11,R[2154],E,E,41,[[["self"]]]],[11,R[2354],E,E,41,[[["self"]]]],[11,R[2355],E,E,41,[[["self"]],["region"]]],[11,R[2350],R[2313],E,42,[[["self"],["stdrng"],["vec"]]]],[11,R[2351],E,E,42,[[["self"],["stdrng"]]]],[11,R[2352],E,E,42,[[["self"],["stdrng"]]]],[11,"max_spp",E,E,42,[[["self"]],["usize"]]],[11,R[2353],E,E,42,[[["self"]],["bool"]]],[11,R[2154],E,E,42,[[["self"]]]],[11,R[2354],E,E,42,[[["self"]]]],[11,R[2355],E,E,42,[[["self"]],["region"]]],[11,R[2350],R[2314],E,43,[[["self"],["stdrng"],["vec"]]]],[11,R[2351],E,E,43,[[["self"],["stdrng"]]]],[11,R[2352],E,E,43,[[["self"],["stdrng"]]]],[11,"max_spp",E,E,43,[[["self"]],["usize"]]],[11,R[2353],E,E,43,[[["self"]],["bool"]]],[11,R[2154],E,E,43,[[["self"]]]],[11,R[2354],E,E,43,[[["self"]]]],[11,R[2355],E,E,43,[[["self"]],["region"]]],[11,R[2356],E,E,43,[[["self"]],["bool"]]],[11,R[2357],R[2316],E,46,[[[R[691]],[R[2244]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,R[2357],R[2317],E,47,[[[R[691]],[R[2244]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,R[2357],R[2318],E,87,[[[R[691]],[R[2244]],["scene"],["ray"],["sampler"],["stdrng"],["self"]],["colorf"]]],[11,"fresnel",R[2323],E,54,[[["f32"],["self"]],["colorf"]]],[11,"fresnel",E,E,55,[[["f32"],["self"]],["colorf"]]],[11,R[2358],R[2327],E,60,[[["self"],["vector"]],["f32"]]],[11,"sample",E,E,60,[[["self"],["vector"]],["vector"]]],[11,"pdf",E,E,60,[[["self"],["vector"]],["f32"]]],[11,R[2359],E,E,60,[[["self"],["vector"]],["f32"]]],[11,R[2360],E,R[2361],60,[[["self"],["vector"]],["f32"]]],[11,R[2358],R[2328],E,61,[[["self"],["vector"]],["f32"]]],[11,"sample",E,E,61,[[["self"],["vector"]],["vector"]]],[11,"pdf",E,E,61,[[["self"],["vector"]],["f32"]]],[11,R[2359],E,E,61,[[["self"],["vector"]],["f32"]]],[11,R[2360],E,R[2361],61,[[["self"],["vector"]],["f32"]]],[11,R[2362],R[2321],E,52,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,E,52,[[["self"],["vector"]],["colorf"]]],[11,R[2362],R[2322],E,53,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,E,53,[[["self"],["vector"]],["colorf"]]],[11,R[2362],R[2324],E,57,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,"We'll never exactly hit the specular reflection direction…",57,[[["self"],["vector"]],["colorf"]]],[11,"sample",E,"Sampling the specular BRDF just returns the specular…",57,[[["self"],["vector"]]]],[11,R[2362],R[2325],E,58,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,"We'll never exactly hit the specular transmission…",58,[[["self"],["vector"]],["colorf"]]],[11,"sample",E,"Sampling the specular BTDF just returns the specular…",58,[[["self"],["vector"]]]],[11,R[2362],R[2326],E,59,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,E,59,[[["self"],["vector"]],["colorf"]]],[11,R[2362],R[2329],E,63,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,E,63,[[["self"],["vector"]],["colorf"]]],[11,"sample",E,E,63,[[["self"],["vector"]]]],[11,"pdf",E,E,63,[[["self"],["vector"]],["f32"]]],[11,R[2362],R[2330],E,64,[[["self"]],[[R[2266]],[R[698],[R[2266]]]]]],[11,"eval",E,E,64,[[["self"],["vector"]],["colorf"]]],[11,"sample",E,E,64,[[["self"],["vector"]]]],[11,"pdf",E,E,64,[[["self"],["vector"]],["f32"]]],[11,"bsdf",R[2331],E,66,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2332],E,67,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2333],E,68,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2334],E,69,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2335],E,70,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2336],E,71,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,"bsdf",R[2337],E,72,[[[R[2244]],[R[691]],["self"]],["bsdf"]]],[11,R[2363],R[2311],E,35,[[["f32"],["point"],["self"]]]],[11,R[2364],E,E,35,[[["self"]],["bool"]]],[11,"pdf",E,E,35,[[["f32"],["vector"],["point"],["self"]],["f32"]]],[11,"render",R[2339],E,77,[[[R[2281]],["scene"],["self"],["config"]]]],[11,R[2366],R[2342],E,81,[[["f32"],["self"]],["f32"]]],[11,R[2365],E,E,81,[[["f32"],["self"]],["colorf"]]],[11,R[2366],R[2343],E,82,[[["f32"],["self"]],["f32"]]],[11,R[2365],E,E,82,[[["f32"],["self"]],["colorf"]]],[11,R[2366],R[2282],E,84,[[["f32"],["self"]],["f32"]]],[11,R[2365],E,E,84,[[["f32"],["self"]],["colorf"]]],[11,R[2366],E,E,85,[[["f32"],["self"]],["f32"]]],[11,R[2365],E,E,85,[[["f32"],["self"]],["colorf"]]],[11,R[2366],E,E,88,[[["f32"],["self"]],["f32"]]],[11,R[2365],E,E,88,[[["f32"],["self"]],["colorf"]]],[11,"next",R[2315],E,86,[[["self"]],["option"]]],[11,"clone",R[2283],E,1,[[["self"]],["vector"]]],[11,"clone",R[2285],E,2,[[["self"]],["normal"]]],[11,"clone",R[2286],E,3,[[["self"]],["point"]]],[11,"clone",R[2287],E,4,[[["self"]],["ray"]]],[11,"clone",R[2288],E,5,[[["self"]],["matrix4"]]],[11,"clone",R[2289],E,6,[[["self"]],[R[2233]]]],[11,"clone",R[2290],E,7,[[["self"]],[R[2234]]]],[11,"clone",R[2291],E,8,[[["self"]],[R[2367]]]],[11,"clone",R[2292],E,9,[[["self"]],[R[2237]]]],[11,"clone",R[2231],E,0,[[["self"]],["axis"]]],[11,"clone",R[2293],E,11,[[["self"]],["colorf"]]],[11,"clone",R[2295],E,14,[[["self"]],["camera"]]],[11,"clone",R[2296],E,15,[[["self"]],["gaussian"]]],[11,"clone",R[2297],E,16,[[["self"]],[R[2368]]]],[11,"clone",R[2298],E,18,[[["self"]],[R[2242]]]],[11,"clone",E,E,19,[[["self"]],[R[2250]]]],[11,"clone",R[2239],E,10,[[["self"]],["frameinfo"]]],[11,"clone",R[2300],E,21,[[["self"]],[R[2243]]]],[11,"clone",R[2301],E,22,[[["self"]],[R[2244]]]],[11,"clone",R[2303],E,24,[[["self"]],["sphere"]]],[11,"clone",R[2304],E,25,[[["self"]],["disk"]]],[11,"clone",R[2305],E,26,[[["self"]],["rectangle"]]],[11,"clone",R[2306],E,27,[[["self"]],["bbox"]]],[11,"clone",R[2261],E,40,[[["self"]],["region"]]],[11,"clone",R[2316],E,46,[[["self"]],["whitted"]]],[11,"clone",R[2317],E,47,[[["self"]],["path"]]],[11,"clone",R[2318],E,87,[[["self"]],["normalsdebug"]]],[11,"clone",R[2321],E,52,[[["self"]],[R[2369]]]],[11,"clone",R[2322],E,53,[[["self"]],["orennayar"]]],[11,"clone",R[2323],E,54,[[["self"]],[R[2271]]]],[11,"clone",E,E,55,[[["self"]],["conductor"]]],[11,"clone",R[2324],E,57,[[["self"]],[R[2370]]]],[11,"clone",R[2325],E,58,[[["self"]],[R[2371]]]],[11,"clone",R[2326],E,59,[[["self"]],["merl"]]],[11,"clone",R[2327],E,60,[[["self"]],["beckmann"]]],[11,"clone",R[2328],E,61,[[["self"]],["ggx"]]],[11,"clone",R[2329],E,63,[[["self"]],[R[2372]]]],[11,"clone",R[2330],E,64,[[["self"]],[R[2373]]]],[11,"clone",R[2267],E,50,[[["self"]],[R[2266]]]],[11,"clone",R[2338],E,74,[[["self"]],[R[2274]]]],[11,"clone",R[2278],E,76,[[["self"]],["config"]]],[11,"cmp",R[2298],E,18,[[[R[2242]],["self"]],[R[313]]]],[11,"eq",R[2283],E,1,[[["self"],["vector"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["vector"]],["bool"]]],[11,"eq",R[2285],E,2,[[["self"],["normal"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["normal"]],["bool"]]],[11,"eq",R[2286],E,3,[[["point"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["point"],["self"]],["bool"]]],[11,"eq",R[2287],E,4,[[["ray"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["ray"],["self"]],["bool"]]],[11,"eq",R[2288],E,5,[[["matrix4"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["matrix4"],["self"]],["bool"]]],[11,"eq",R[2289],E,6,[[["self"],[R[2233]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2233]]],["bool"]]],[11,"eq",R[2293],E,11,[[["self"],["colorf"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["colorf"]],["bool"]]],[11,"eq",R[2298],E,18,[[[R[2242]],["self"]],["bool"]]],[11,R[314],R[2283],E,1,[[["self"],["vector"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,1,[[["self"],["vector"]],["bool"]]],[11,"le",E,E,1,[[["self"],["vector"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["vector"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["vector"]],["bool"]]],[11,R[314],R[2285],E,2,[[["self"],["normal"]],[["option",[R[313]]],[R[313]]]]],[11,"lt",E,E,2,[[["self"],["normal"]],["bool"]]],[11,"le",E,E,2,[[["self"],["normal"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["normal"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["normal"]],["bool"]]],[11,R[314],R[2298],E,18,[[[R[2242]],["self"]],[["option",[R[313]]],[R[313]]]]],[11,"fmt",R[2283],E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2285],E,2,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2286],E,3,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2287],E,4,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2288],E,5,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2289],E,6,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2290],E,7,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2291],E,8,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2292],E,9,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2231],E,0,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2293],E,11,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2295],E,14,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2296],E,15,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2297],E,16,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2298],E,18,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,19,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2299],E,20,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2239],E,10,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2306],E,27,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2261],E,39,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,40,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2316],E,46,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2317],E,47,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2318],E,87,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2321],E,52,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2322],E,53,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2323],E,54,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,55,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2267],E,50,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2338],E,74,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",R[2278],E,76,[[["self"],[R[176]]],[R[48]]]],[11,"div",R[2283],"Divide the vectors components by the right hand side's…",1,[[["vector"]],["vector"]]],[11,"div",E,"Divide the vectors components by a scalar",1,[[["f32"]],["vector"]]],[11,"div",R[2285],"Divide the normals components by the right hand side's…",2,[[["normal"]],["normal"]]],[11,"div",E,"Divide the normals components by scalar",2,[[["f32"]],["normal"]]],[11,"div",R[2286],"Divide the points components by the right hand side's…",3,[[["point"]],["point"]]],[11,"div",E,"Divide the points components by scalar",3,[[["f32"]],["point"]]],[11,"div",R[2290],"Divide the quaternion by a scalar",7,[[["f32"]],[R[2234]]]],[11,"div",R[2293],"Divide the channels of one color by another",11,[[["colorf"]],["colorf"]]],[11,"div",E,"Divide the channels of the color by the float",11,[[["f32"]],["colorf"]]],[11,"sub",R[2283],"Subtract two vectors",1,[[["vector"]],["vector"]]],[11,"sub",R[2285],"Subtract two normals",2,[[["normal"]],["normal"]]],[11,"sub",R[2286],"Subtract two points to get the vector between them",3,[[["point"]],["vector"]]],[11,"sub",E,"Subtract a vector from a point, translating the point by…",3,[[["vector"]],["point"]]],[11,"sub",R[2288],"Subtract two matrices",5,[[["matrix4"]],["matrix4"]]],[11,"sub",R[2290],"Subtract two quaternions",7,[[[R[2234]]],[R[2234]]]],[11,"sub",R[2293],"Subtract the two colors",11,[[["colorf"]],["colorf"]]],[11,"add",R[2283],"Add two vectors together",1,[[["vector"]],["vector"]]],[11,"add",R[2285],"Add two normals together",2,[[["normal"]],["normal"]]],[11,"add",R[2286],R[2374],3,[[["point"]],["point"]]],[11,"add",E,R[2374],3,[[["vector"]],["point"]]],[11,"add",R[2288],"Add two matrices together",5,[[["matrix4"]],["matrix4"]]],[11,"add",R[2290],"Add two quaternions",7,[[[R[2234]]],[R[2234]]]],[11,"add",R[2293],"Add two colors together",11,[[["colorf"]],["colorf"]]],[11,"mul",R[2283],"Multiply two vectors",1,[[["vector"]],["vector"]]],[11,"mul",E,R[2375],1,[[["f32"]],["vector"]]],[11,"mul",E,R[2375],1,[[["point"]],["point"]]],[11,"mul",R[2285],"Multiply two normals",2,[[["normal"]],["normal"]]],[11,"mul",E,"Scale the normal by some value",2,[[["f32"]],["normal"]]],[11,"mul",R[2286],"Scale the point by some value",3,[[["f32"]],["point"]]],[11,"mul",E,R[2375],3,[[["vector"]],["point"]]],[11,"mul",R[2288],"Multiply two matrices",5,[[["matrix4"]],["matrix4"]]],[11,"mul",E,"Multiply the matrix by a scalar",5,[[["f32"]],["matrix4"]]],[11,"mul",R[2289],"Compose two transformations",6,[[[R[2233]]],[R[2233]]]],[11,"mul",E,"Multiply the point by the transform to apply the…",6,[[["point"]],["point"]]],[11,"mul",E,"Multiply the vector by the transform to apply the…",6,[[["vector"]],["vector"]]],[11,"mul",E,"Multiply the normal by the transform to apply the…",6,[[["normal"]],["normal"]]],[11,"mul",E,"Multiply the ray by the transform to apply the…",6,[[["ray"]],["ray"]]],[11,"mul",E,"Apply the transformation to the AABB. This is an…",6,[[["bbox"]],["bbox"]]],[11,"mul",R[2290],"Multiply the quaternion by a scalar",7,[[["f32"]],[R[2234]]]],[11,"mul",R[2292],"Compose the animated transformations",9,[[[R[2237]]],[R[2237]]]],[11,"mul",R[2293],"Multiply the two colors",11,[[["colorf"]],["colorf"]]],[11,"mul",E,"Scale the color by the float",11,[[["f32"]],["colorf"]]],[11,"neg",R[2283],"Negate the vector",1,[[],["vector"]]],[11,"neg",R[2285],"Negate the normal",2,[[],["normal"]]],[11,"neg",R[2286],"Negate the point",3,[[],["point"]]],[11,"neg",R[2290],"Negate the quaternion",7,[[],[R[2234]]]],[11,"neg",R[2293],"Negate the color channels",11,[[],["colorf"]]],[11,"index",R[2283],R[2377],1,[[["self"],["usize"]],["f32"]]],[11,"index",R[2285],R[2378],2,[[["self"],["usize"]],["f32"]]],[11,"index",R[2286],R[2376],3,[[["self"],["usize"]],["f32"]]],[11,"index",E,R[2376],3,[[["axis"],["self"]],["f32"]]],[11,"index",R[2293],R[2379],11,[[["self"],["usize"]],["f32"]]],[11,"index",R[2306],R[2380],27,[[["self"],["usize"]],["point"]]],[11,R[2199],R[2283],R[2377],1,[[["self"],["usize"]],["f32"]]],[11,R[2199],R[2285],R[2378],2,[[["self"],["usize"]],["f32"]]],[11,R[2199],R[2286],R[2376],3,[[["self"],["usize"]],["f32"]]],[11,R[2199],R[2293],R[2379],11,[[["self"],["usize"]],["f32"]]],[11,R[2199],R[2306],R[2380],27,[[["self"],["usize"]],["point"]]],[11,R[784],R[2288],R[2381],5,[[[R[400]]],["matrix4"]]],[11,R[784],E,R[2381],5,[[[R[400]]],["matrix4"]]],[11,"to_u32",R[2267],E,50,[[["self"]],["u32"]]],[11,R[795],E,E,50,[[["u32"]],[R[2266]]]],[11,R[2284],R[2291],E,8,[[[R[2367]],["f32"],["self"]],[R[2367]]]],[11,"ready",R[2341],E,79,[[[R[2050]],["token"],["self"],[R[2048]]]]]],"p":[[4,"Axis"],[3,"Vector"],[3,"Normal"],[3,"Point"],[3,"Ray"],[3,"Matrix4"],[3,"Transform"],[3,"Quaternion"],[3,"Keyframe"],[3,R[2382]],[3,"FrameInfo"],[3,"Colorf"],[3,R[2383]],[3,R[2384]],[3,"Camera"],[3,"Gaussian"],[3,R[2385]],[8,"Filter"],[3,R[2386]],[3,R[2387]],[3,"Image"],[3,R[2388]],[3,R[2389]],[4,"Instance"],[3,"Sphere"],[3,"Disk"],[3,"Rectangle"],[3,"BBox"],[3,"BVH"],[3,"Mesh"],[3,"Triangle"],[3,R[2390]],[3,R[2391]],[3,R[2392]],[3,"Receiver"],[3,"Emitter"],[8,"Geometry"],[8,"Boundable"],[8,"Sampleable"],[3,"Sample"],[3,"Region"],[3,"Uniform"],[3,R[2393]],[3,"Adaptive"],[3,"BlockQueue"],[8,"Sampler"],[3,"Whitted"],[3,"Path"],[8,"Integrator"],[3,"Scene"],[4,"BxDFType"],[3,"BSDF"],[3,"Lambertian"],[3,"OrenNayar"],[3,"Dielectric"],[3,"Conductor"],[8,"Fresnel"],[3,R[2394]],[3,R[2395]],[3,"Merl"],[3,"Beckmann"],[3,"GGX"],[8,R[2396]],[3,R[2397]],[3,R[2398]],[8,"BxDF"],[3,"Matte"],[3,R[2399]],[3,"Glass"],[3,"Merl"],[3,"Plastic"],[3,"Metal"],[3,"RoughGlass"],[8,"Material"],[3,R[2400]],[8,"Light"],[3,"Config"],[3,R[2401]],[3,"Worker"],[3,"Master"],[8,"Exec"],[3,"Image"],[3,R[2402]],[8,"Texture"],[3,R[2403]],[3,R[2404]],[3,R[2405]],[3,R[2406]],[3,"UVColor"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[370],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[370]]]};
searchIndex["unreachable"]={"doc":R[940],"i":[[5,R[940],R[940],"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,R[941],E,"An extension trait for `Option<T>` providing unchecked…",N,N],[10,"unchecked_unwrap",E,"Get the value out of this Option without checking for None.",0,[[],[T]]],[10,"unchecked_unwrap_none",E,"Assert that this Option is a None to the optimizer.",0,[[]]],[8,R[942],E,"An extension trait for `Result<T, E>` providing unchecked…",N,N],[10,"unchecked_unwrap_ok",E,"Get the value out of this Result without checking for Err.",1,[[],[T]]],[10,"unchecked_unwrap_err",E,"Get the error out of this Result without checking for Ok.",1,[[],["e"]]]],"p":[[8,R[941]],[8,R[942]]]};
searchIndex["utf8_ranges"]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","i":[[3,R[395],"utf8_ranges","A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",0,N],[12,"end",E,"End of byte range (inclusive).",0,N],[3,R[397],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[396],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",1,N],[13,"Two",E,"Two successive byte ranges.",1,N],[13,"Three",E,"Three successive byte ranges.",1,N],[13,"Four",E,"Four successive byte ranges.",1,N],[11,"as_slice",E,"Returns the underlying sequence of byte ranges as a slice.",1,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",1,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",0,[[["self"],["u8"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,R[45],E,E,0,[[[U]],[R[48]]]],[11,R[46],E,E,0,[[],[R[48]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[["self"]],[R[51]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[364],E,E,2,[[],["i"]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,R[45],E,E,1,[[[U]],[R[48]]]],[11,R[46],E,E,1,[[],[R[48]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[51]]]],[11,"next",E,E,2,[[["self"]],["option"]]],[11,"clone",E,E,1,[[["self"]],[R[393]]]],[11,"clone",E,E,0,[[["self"]],[R[394]]]],[11,"eq",E,E,1,[[["self"],[R[393]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[393]]],["bool"]]],[11,"eq",E,E,0,[[[R[394]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[394]],["self"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[176]]],[R[48]]]],[11,"fmt",E,E,0,[[["self"],[R[176]]],[R[48]]]]],"p":[[3,R[395]],[4,R[396]],[3,R[397]]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,R[940],E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[375],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[376],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[45],E,E,2,[[[U]],[R[48]]]],[11,"into",E,E,2,[[],[U]]],[11,R[46],E,E,2,[[],[R[48]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[["self"]],[R[51]]]],[11,"fmt",E,E,2,[[[R[176]],["self"]],[R[48]]]],[11,"fmt",E,E,2,[[[R[176]],["self"]],[R[48]]]],[11,"eq",E,E,2,[[[T],["self"]],["bool"]]],[11,R[314],E,E,2,[[[T],["self"]],[[R[313]],["option",[R[313]]]]]],[11,"clone",E,E,2,[[["self"]],["void"]]]],"p":[[8,R[375]],[8,R[376]],[4,"Void"]]};
searchIndex["winapi"]={"doc":E,"i":[],"p":[]};
searchIndex["ws2_32"]={"doc":E,"i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);